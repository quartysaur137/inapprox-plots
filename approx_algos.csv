(Old/New) Family #,Family Name,Looked at?,Relevant?,Use For Inapprox?,Variation,Algo ID,Algorithm Description,Final Call,Exact Problem Statement?,Exact algorithm?,Time Complexity (Average),Average Case Distribution,Reference?,,Algorithm Name,Author Names,Paper Title,Year,Paper/Reference Link,Constants,Derived?,Paper Reference for Constants,Time Complexity Improvement?,Transition Class,Time Complexity Class,Param: Time Class,Specificity of Runtime,Time Complexity (Worst Only),Time Encoding,Parameter definitions,Preferred Parameter,Time Complexity Reference,Derived Time Complexity?,Computational Model,Unit of Space,Space Complexity Class,Param: Space Class,Space Complexity (Auxiliary),Space Complexity Reference,Derived Space Complexity?,Space Complexity in Original Paper?,Interesting Space Complexity?,Randomized?,"Type of Randomized Algorithm (e.g. Las Vegas, Monte Carlo, Atlantic City)",Approximate?,Approximation Factor (if approximate algorithm),"Approx Error ""Size"" (for figures only)",Approximation Factor Class (Mult),Approximation Factor Class (Add),Approximation Type (additive/multiplicative),Parametrized Approximation?,Type of PTAS (if PTAS),Description of Approximation,Heuristic-based?,Parallel?,"# of
Processors",Quantum?,GPU-based?,Other References,Problem Statement,"Algorithm family
parameters",Description of Inputs,Ratios of input parameter sizes,Space n = 1000 value,Space n = 1000 rate,Space n = 10^6 value,Space n = 10^6 rate,Space n = 10^9 value,Space n = 10^9 rate,n = 1000 value,n = 1000 scale,n = 1000 Rate,n = 10^6 value,n = 10^6 scale,n = 10^6 Rate,n = 10^9 value,n = 10^9 scale,n = 10^9 Rate,Starting Complexity,Remarks,Papers for ratio evaluations,Domains
1,Sorting,0.001,1,0,Sorting with incomplete relative order information,,,,1,0,O(1)?,,,[https://epubs.siam.org/doi/abs/10.1137/0401028  (1988)],,"Alon, Azar","Sorting, Approximate Sorting, and Searching in Rounds",1988,https://epubs.siam.org/doi/abs/10.1137/0401028,,,,,,1,n: 1,3,O(1)?,,n: size of list,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1?,,,,,,,,,0,1,O(n log n log log n)?,0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
1,Sorting,1,1,0,Approximate Sorting,,,,1,0,O(n log eps),,,[https://link.springer.com/chapter/10.1007/11682462_49  (2006)],,"Giesen, Schuberth, Stojakovic",Approximate Sorting,2006,https://link.springer.com/chapter/10.1007/11682462_49,,,,,,3,n: 3,3,O(n log eps),10,"n: size of list
eps: approximation parameter",n,https://link.springer.com/chapter/10.1007/11682462_49,0,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n^2/eps),4,0,6.99,additive,yes,n/a,"Distance away from sorted, under Spearman's footrule metric",0,0,,0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
1,Sorting,0.001,1,0,Sorting with Noise/Costs,,,,1,0,,,,[https://link.springer.com/chapter/10.1007/978-3-642-40602-7_15  (2013)],,"Busse, Chehreghani, Buhmann",Approximate Sorting,2013,https://link.springer.com/chapter/10.1007/978-3-642-40602-7_15,,,,,,,,,,,n: size of list,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1?,,,,,,,,,0,0,,0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
1,Sorting,0.001,1,0,Approximate Sorting,,,,1,0,,,,[https://www.atlantis-press.com/proceedings/csic-15/24926  (2015)],,"Xiao, Chen, Sun",High Performance Approximate Sort Algorithm Using GPUs,2015,https://www.atlantis-press.com/proceedings/csic-15/24926,,,,,,,,,,,"n: size of list
eps: approximation parameter",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,1,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
1,Sorting,1,1,0,Approximate Sorting,,,,1,0,O(mn),,,[https://link.springer.com/article/10.1007/s10878-015-9930-6  (2015)],,"Farnoud, Yaakobi, Bruck",Approximate sorting of data streams with limited storage,2015,https://link.springer.com/article/10.1007/s10878-015-9930-6,,,,,,3,n: 3,3,O(mn),10,"n: size of list
m: size of additional memory",n,,1,Word RAM,words,#VALUE!,,O(m),https://link.springer.com/article/10.1007/s10878-015-9930-6,0,1,,0,,1,O(n/m),4,0,6,additive,no?,n/a,"Distance away from sorted, under Kendall tau distortion",0,0,,0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
1,Sorting,0.001,1,0,Approximate Sorting,,,,1,0,,,,[https://link.springer.com/chapter/10.1007/978-3-031-22105-7_7  (2022)],,"Gao, Li",Analysis of Approximate Sorting in I/O Model,2022,https://link.springer.com/chapter/10.1007/978-3-031-22105-7_7,,,,,,,,,,,"n: size of list
eps: approximation parameter",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
2,kth Order Statistic,0.001,1,0,Approximate kth Order Statistic,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/0304397580900614 Munro-Patterson Algorithm (1980)],Munro-Patterson Algorithm,"Munro, Patterson",Selection and sorting with limited storage,1980,https://www.sciencedirect.com/science/article/pii/0304397580900614,,,,,,,,,,,"n: size of list
eps: approximation parameter",n,,,Word RAM,words,#VALUE!,,O(log^2(n*eps)/eps),https://dl.acm.org/doi/abs/10.1145/276305.276342,0,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,"difference between desired order and the order of the outputted value, divided by n",0,0,,0,0,https://dl.acm.org/doi/abs/10.1145/276305.276342,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,,,,,,,5,,,Combinatorics
2,kth Order Statistic,0.001,1,0,Approximate kth Order Statistic,,,,1,0,,,,[https://surface.syr.edu/lcsmith_other/4/  (1997)],,"Alsabti, Ranka, Singh",A One-Pass Algorithm for Accurately Estimating Quantiles for Disk-Resident Data,1997,https://surface.syr.edu/lcsmith_other/4/,,,,,,,,,,,"n: size of list
eps: approximation parameter",n,,,Word RAM,words,#VALUE!,,O(sqrt(n/eps)),https://dl.acm.org/doi/abs/10.1145/276305.276342,0,0?,,0,,1,eps,1,0,1.99,additive,yes,n/a,"difference between desired order and the order of the outputted value, divided by n",0,0,,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,,,,,,,5,,,Combinatorics
2,kth Order Statistic,0.001,1,0,Approximate kth Order Statistic,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/276305.276342  (1998)],,"Manku, Rajagopalan, Lindsay",Approximate medians and other quantiles in one pass and with limited memory,1998,https://dl.acm.org/doi/abs/10.1145/276305.276342,,,,,,,,,,,"n: size of list
eps: approximation parameter",n,,,Word RAM,words,#VALUE!,,O(log^2(n*eps)/eps),https://dl.acm.org/doi/abs/10.1145/276305.276342,0,1,,0,,1,eps,1,0,1.99,additive,yes,n/a,"difference between desired order and the order of the outputted value, divided by n",0,0,,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,,,,,,,5,,,Combinatorics
2,kth Order Statistic,0.001,1,0,Approximate kth Order Statistic,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/276305.276342  (1998)],,"Manku, Rajagopalan, Lindsay",Approximate medians and other quantiles in one pass and with limited memory,1998,https://dl.acm.org/doi/abs/10.1145/276305.276342,,,,,,,,,,,"n: size of list
eps: approximation parameter
delta: error probability",n,,,Word RAM,words,#VALUE!,,O(log^2(1/eps * log(1/delta))/eps),https://dl.acm.org/doi/abs/10.1145/276305.276342,0,1,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"difference between desired order and the order of the outputted value, divided by n",0,0,,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,,,,,,,5,,,Combinatorics
2,kth Order Statistic,0.001,1,0,Approximate kth Order Statistic,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/304181.304204  (1999)],,"Manku, Rajagopalan, Lindsay",Random sampling techniques for space efficient online computation of order statistics of large datasets,1999,https://dl.acm.org/doi/abs/10.1145/304181.304204,,,,,,,,,,,"n: size of list
eps: approximation parameter
delta: error probability",n,,,Word RAM,words,#VALUE!,,O(log^2(1/eps * log(1/delta))/eps),https://dl.acm.org/doi/abs/10.1145/304181.304204,0,1,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"difference between desired order and the order of the outputted value, divided by n",0,0,,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,,,,,,,5,,,Combinatorics
3,Matrix Chain Multiplication,2,1,0,Approximate MCOP,35,,,1,0,$O(\log n)$,,,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf Czumaj (1996)],Czumaj,Czumaj,Very Fast Approximation of the Matrix Chain Product Problem,1996,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,,,,0,0,2,n: 2,3,$O(\log n)$,1,n: number of matrices in chain,n,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,0,CREW PRAM,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,1,1+(1/(3+2sqrt3)),2,2.1547,0,multiplicative,no,n/a,Ratio of costs (i.e. operations needed to perform the MCM),0,1,$n / \log n$,0,0,https://www.sciencedirect.com/science/article/abs/pii/S0196677496900371,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,2,1,0,Approximate MCOP,35.1,,,1,0,$O(\log \log n)$,,,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf Czumaj (1996)],Czumaj,Czumaj,Very Fast Approximation of the Matrix Chain Product Problem,1996,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,,,,0,0,1.99,n: 1.99,3,$O(\log \log n)$,0.1,n: number of matrices in chain,n,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,0,COMMON CRCW PRAM,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,1,1+(1/(3+2sqrt3)),2,2.1547,0,multiplicative,no,n/a,Ratio of costs (i.e. operations needed to perform the MCM),0,1,$n / \log \log n$,0,0,https://www.sciencedirect.com/science/article/abs/pii/S0196677496900371,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,2,1,0,Approximate MCOP,,,,1,0,O(n),,,"[https://www.sciencedirect.com/science/article/pii/0196677481900146 Hu, Tsing (1981)]","Hu, Tsing","Hu, Tsing",An O(n) algorithm to find a near-optimum partition of a convex polygon,1981,https://www.sciencedirect.com/science/article/pii/0196677481900146,,,,,,3,n: 3,3,O(n),10,n: number of matrices in chain,n,https://www.sciencedirect.com/science/article/pii/0196677481900146,0,Word RAM,words,3,n: 3,O(n),At most runtime,1,0,,0,,1,1+(1/(3+2sqrt3)),2,2.1547,0,multiplicative,no,n/a,Ratio of costs (i.e. operations needed to perform the MCM),0,0,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,1,0,Approximate MCOP,36,,,1,0,O(n),,,[https://www.worldcat.org/title/computing-matrix-chain-products-in-near-optimal-time/oclc/727708286 Chandra (1975)],Chandra,Chandra,Computing matrix chain products in near-optimal time,1975,https://www.worldcat.org/title/computing-matrix-chain-products-in-near-optimal-time/oclc/727708286,,,,0,0,3,n: 3,3,$O(n)$,10,n: number of matrices in chain,n,,,Word RAM,words,3,n: 3,$O(n)$?,"Derived: cannot find pdf of original paper or any description of the actual algorithm, but likely the same space as Chin's algorithm",1,0,,0,,1,2,2,3,0,multiplicative,no,n/a,Ratio of costs (i.e. operations needed to perform the MCM),1,0,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,1000,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,2,1,0,Approximate MCOP,37,,,1,0,O(n),,,[https://dl.acm.org/doi/10.1145/359545.359556 Chin (1978)],Chin,Chin,An O(n) algorithm for determining a near-optimal computation order of matrix chain products,1978,https://dl.acm.org/doi/10.1145/359545.359556,,,,0,0,3,n: 3,3,$O(n)$,10,n: number of matrices in chain,n,https://dl.acm.org/doi/10.1145/359545.359556,0,Word RAM,words,3,n: 3,$O(n)$,"Derived: There are a few auxiliary variables, only one of which is variable length. That is a list of length $O(n)$.",1,0,,0,,1,1.2485,2,2.2485,0,multiplicative,no,n/a,Ratio of costs (i.e. operations needed to perform the MCM),1,0,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,1000,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,0.001,0,0,Approximate MCSP,32,,,1,0,O(n^2),,,[https://www.researchgate.net/profile/Jong-Kim-58/publication/2590384_Parallelizing_Matrix_Chain_Products/links/09e4150d5741fe8972000000/Parallelizing-Matrix-Chain-Products.pdf Heejo Lee; Jong Kim; Sungje Hong; and Sunggu Lee (1997)],Heejo Lee; Jong Kim; Sungje Hong; and Sunggu Lee,Heejo Lee; Jong Kim; Sungje Hong; and Sunggu Lee,Parallelizing matrix chain products,1997,https://www.researchgate.net/profile/Jong-Kim-58/publication/2590384_Parallelizing_Matrix_Chain_Products/links/09e4150d5741fe8972000000/Parallelizing-Matrix-Chain-Products.pdf,,,,0,0,5,n: 5,3,$O(n^2)$,,"$P$: number of processors
$n$: number of matrices",n,,,Word RAM?,words,5,n: 5,$O(n^2)$?,Derived: two $n \times n$ size tables ($S$ and $W$),1,0,,0,,1,"""near optimal""",4,4?,0,multiplicative,no,n/a,Ratio of number of ops performed,0,0?,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,1000000,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,0,0,Approximate Matrix Tree Multiplication Problem,,,,1,0,O(n),,,[https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.MFCS.2021.6  (2021)],,"Abo-Khamis, Curtin, Im, Moseley, Ngo, Pruhs, Samadian",An Approximation Algorithm for the Matrix Tree Multiplication Problem,2021,https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.MFCS.2021.6,,,,0,0,5,n: 5,3,O(n),10,n: number of matrices in chain,n,,,Word RAM?,words,#VALUE!,,,,,0,,0,,1,15,3,4,0,multiplicative,no,n/a,Ratio of costs (i.e. operations needed to perform the MTM),0,0,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,1000000,Inf,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,"O(E*min(V^(2/3), E^(1/2))*log(V^2/E)*log(E/eps))",,,"[https://dl.acm.org/doi/pdf/10.1145/290179.290181 Goldberg, Rao (1998)]","Goldberg, Rao","Goldberg, Rao",Beyond the Flow Decomposition Barrier,1998,https://dl.acm.org/doi/pdf/10.1145/290179.290181,,,,,,6.01,V: 6.01,3,"O(E*min(V^(2/3), E^(1/2))*log(V^2/E)*log(E/eps))",16.24,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/290179.290181,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,"O(E*sqrt(V)*polylog(E, V)/eps)",,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=e56eab02ed2360efd9f0288c02411cecbdbb3011 Karger (1997)],Karger,Karger,Better Random Sampling Algorithms for Flows in Undirected Graphs,1997,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=e56eab02ed2360efd9f0288c02411cecbdbb3011,,,,,,5.5,V: 5.5,2.9,"O(E*sqrt(V)*polylog(E, V)/eps)",16.24,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=e56eab02ed2360efd9f0288c02411cecbdbb3011,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,"O(E^(3/2)polylog(E, V)/eps^(5/2))",,,"[https://dl.acm.org/doi/abs/10.1145/1993636.1993674 Christiano, Kelner, Madry, Spielman, Teng (Theorem 3.3) (2011)]","Christiano, Kelner, Madry, Spielman, Teng (Theorem 3.3)","Christiano, Kelner, Madry, Spielman, Teng","Electrical flows, laplacian systems, and faster approximation of maximum flow in undirected graphs",2011,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,,,,,,6.01,V: 6.01,2.9,"O(E^(3/2)polylog(E, V)/eps^(5/2))",16.24,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter, 0 < eps < 1/2",V,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,"O(E^(4/3)polylog(E, V)/eps^3)",,,"[https://dl.acm.org/doi/abs/10.1145/1993636.1993674 Christiano, Kelner, Madry, Spielman, Teng (Theorem 4.3) (2011)]","Christiano, Kelner, Madry, Spielman, Teng (Theorem 4.3)","Christiano, Kelner, Madry, Spielman, Teng","Electrical flows, laplacian systems, and faster approximation of maximum flow in undirected graphs",2011,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,,,,,,5.66,V: 5.66,2.9,"O(E^(4/3)polylog(E, V)/eps^3)",15.41,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter, 0 < eps < 1/2",V,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,"O(E*V^(1/3)polylog(E, V)/eps^(11/3))",,,"[https://dl.acm.org/doi/abs/10.1145/1993636.1993674 Christiano, Kelner, Madry, Spielman, Teng (Theorem 4.5) (2011)]","Christiano, Kelner, Madry, Spielman, Teng (Theorem 4.5)","Christiano, Kelner, Madry, Spielman, Teng","Electrical flows, laplacian systems, and faster approximation of maximum flow in undirected graphs",2011,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,,,,,,5.33,V: 5.33,2.9,"O(E*V^(1/3)polylog(E, V)/eps^(11/3))",15.41,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter, 0 < eps < 1/2",V,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E^(3/2)*log(V)^2*sqrt(U/F)/eps)?,,,"[https://dl.acm.org/doi/abs/10.1145/2488608.2488704 Lee, Rao, Srivastava (Remark 4) (2013)]","Lee, Rao, Srivastava (Remark 4)","Lee, Rao, Srivastava",A new approach to computing maximum flows using electrical flows,2013,https://dl.acm.org/doi/abs/10.1145/2488608.2488704,,,,,,6.01,V: 6.01,3,O(E^(3/2)*log(V)^2*sqrt(U/F)/eps)?,16.24,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
eps: approximation parameter",V,https://dl.acm.org/doi/abs/10.1145/2488608.2488704,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E^(1+o(1))/eps^2),,,[https://ieeexplore.ieee.org/abstract/document/6686162 Sherman (2013)],Sherman,Sherman,Nearly Maximum Flows in Nearly Linear Time,2013,https://ieeexplore.ieee.org/abstract/document/6686162,,,,,,5.02,V: 5.02,2.9,O(E^(1+o(1))/eps^2),15.015,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
eps: approximation parameter",V,https://ieeexplore.ieee.org/abstract/document/6686162,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E^(1+o(1))/eps^2),,,"[https://epubs.siam.org/doi/10.1137/1.9781611973402.16 Kelner, Lee, Orecchia, Sidford (2014)]","Kelner, Lee, Orecchia, Sidford","Kelner, Lee, Orecchia, Sidford","An Almost-Linear-Time Algorithm for Approximate Max Flow in Undirected Graphs, and its Multicommodity Generalizations",2014,https://epubs.siam.org/doi/10.1137/1.9781611973402.16,,,,,,5.02,V: 5.02,2.9,O(E^(1+o(1))/eps^2),15.015,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
eps: approximation parameter",V,https://epubs.siam.org/doi/10.1137/1.9781611973402.16,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E*poly(log(V))/eps^2),,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch130 Peng (2016)],Peng,Peng,Approximate Undirected Maximum Flows in O(mpolylog(n)) Time,2016,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch130,,,,,,5.01,V: 5.01,2.9,O(E*poly(log(V))/eps^2),15,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
eps: approximation parameter",V,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch130,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E^(1+o(1))/eps),,,[https://dl.acm.org/doi/pdf/10.1145/3055399.3055501 Sherman (2017)],Sherman,Sherman,"Area-Convexity, ℓ∞ Regularization, and Undirected Multicommodity Flow",2017,https://dl.acm.org/doi/pdf/10.1145/3055399.3055501,,,,,,5.02,V: 5.02,2.9,O(E^(1+o(1))/eps),15.015,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/3055399.3055501,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E + sqrt(V*E)/eps),,,"[https://ieeexplore.ieee.org/document/8555169 Sidford, Tian (2018)]","Sidford, Tian","Sidford, Tian",Coordinate Methods for Accelerating ℓ∞ Regression and Faster Approximate Maximum Flow,2018,https://ieeexplore.ieee.org/document/8555169,,,,,,5,V: 5,3,O(E + sqrt(V*E)/eps),10,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
eps: approximation parameter",V,https://ieeexplore.ieee.org/document/8555169,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,"Approximate Maximum Flow, unweighted?",,,,1,0,"O(E*sqrt(V/eps)*polylog(E, V))",,,"[https://epubs.siam.org/doi/abs/10.1137/070705994 Karger, Levine (2015)]","Karger, Levine","Karger, Levine",Fast Augmenting Paths by Random Sampling from Residual Graphs,2015,https://epubs.siam.org/doi/abs/10.1137/070705994,,,,,,5.5,V: 5.5,2.9,"O(E*sqrt(V/eps)*polylog(E, V))",16.24,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://epubs.siam.org/doi/abs/10.1137/070705994,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,"Approximate Maximum Flow, unweighted",,,,1,0,"O(V*F*polylog(E, V)/(eps*C))",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Lemma 3.5) (1994)],Karger (Lemma 3.5),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,6.01,V: 6.01,2.9,"O(V*F*polylog(E, V)/(eps*C))",25,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
C: value of minimum cut
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Monte Carlo,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,"Approximate Maximum Flow, unweighted",,,,1,0,"O(V*F*polylog(E, V)/(eps*C))",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Corollary 3.6) (1994)],Karger (Corollary 3.6),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,6.01,V: 6.01,2.9,"O(V*F*polylog(E, V)/(eps*C))",25,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
C: value of minimum cut
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Las Vegas,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,"O(E*F*sqrt(U)*polylog(E, V)/(eps*C))",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Corollary 5.4) (1994)],Karger (Corollary 5.4),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,7,V: 7,2.9,"O(E*F*sqrt(U)*polylog(E, V)/(eps*C))",26.5,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
C: value of minimum cut
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Las Vegas,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,"Approximate Maximum Flow, unweighted",,,,1,0,"O(E*V^(1/3)polylog(E, V)/eps^(2/3))",,,"[https://dl.acm.org/doi/abs/10.1145/2488608.2488704 Lee, Rao, Srivastava (2013)]","Lee, Rao, Srivastava","Lee, Rao, Srivastava",A new approach to computing maximum flows using electrical flows,2013,https://dl.acm.org/doi/abs/10.1145/2488608.2488704,,,,,,5.33,V: 5.33,2.9,"O(E*V^(1/3)polylog(E, V)/eps^(2/3))",15.41,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/abs/10.1145/2488608.2488704,0,Word RAM?,words,,,,,,,,1,,1,(1-eps),1,2,0,multiplicative,yes,FPRAS,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,1,1,0,Approximate Maximum Flow,,,,1,0,O(E^{(1+o(1)}/sqrt(eps)),(see max flow in sheet1),,"[https://epubs.siam.org/doi/abs/10.1137/20M1383525 Kathuria, Liu, Sidford (2020)]","Kathuria, Liu, Sidford","Kathuria, Liu, Sidford",Unit Capacity Maxflow in Almost $m^{4/3}$ Time,2020,https://epubs.siam.org/doi/abs/10.1137/20M1383525,,,,,0,5.02,V: 5.02,2.9,O(E^{(1+o(1)}/sqrt(eps)),15.015,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://epubs.siam.org/doi/abs/10.1137/20M1383525,0,Word RAM,words,,"V: 5,
E: 3",O(E) or O(V^2) ?,"unsure, please look",,,,0,,1,eps*E*U,4,0,6.99,additive,yes,n/a,Amount off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5,Maximum Flow,0.001,0,0,Approximate Maximum Concurrent/Multicommodity Flow,,,,0,0,Time to solve LP with (V+1)k variables and (2E+3)k+1 constraints.,,,"[https://epubs.siam.org/doi/epdf/10.1137/S0097539794285983 Aumann, Rabani (1998)]","Aumann, Rabani","Aumann, Rabani",An O(log k) Approximate Min-Cut Max-Flow Theorem and Approximation Algorithm,1998,https://epubs.siam.org/doi/epdf/10.1137/S0097539794285983,,,,,,,,,,,"V: number of vertices
E: number of edges
k: number of commodities",,,,Word RAM,words,,,,,,,,,,1,log(k),,6,0,multiplicative,no,,Factor off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,Combinatorics
5,Maximum Flow,0.001,0,0,Approximate Generalized Lossy Maximum Flow,,,,0,0,O(E^{3/2} log(U/eps)^2),,,"[https://dl.acm.org/doi/abs/10.1145/1374376.1374441 Daitch, Spielman (2008)]","Daitch, Spielman","Daitch, Spielman",Faster Approximate Lossy Generalized Flow via Interior Point Algorithms,2008,https://dl.acm.org/doi/abs/10.1145/1374376.1374441,,,,,,4.5,"m: 4.5
U: 2",3,O(E^{3/2} log(U/eps)^2),,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,,,Word RAM,words,,,,,,,,,,1,eps,,0,1.99,additive,no,,Amount off from maximum flow,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,Combinatorics
5,Maximun Flow,0.001,0,0,Approximate Bounded Path Length Maximum Flow,,,,,,,,,"[https://link.springer.com/article/10.1007/s10107-010-0366-6 Mahjoub, Mccormick (2010)]","Mahjoub, Mccormick","Mahjoub, Mccormick","Max Flow and Min Cut with bounded-length paths: complexity, algorithms, and approximation",2010,https://link.springer.com/article/10.1007/s10107-010-0366-6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,0.001,0,0,Approximate Multicommodity Maximum Flow,,,,,,O(knm log^4(n)),,,"[https://dl.acm.org/doi/abs/10.1145/103418.103425 Leighton, Makedon, Plotkin, Stein, Tardos, Tragoudas (1991)]","Leighton, Makedon, Plotkin, Stein, Tardos, Tragoudas","Leighton, Makedon, Plotkin, Stein, Tardos, Tragoudas",Fast approximation algorithms for multicommodity flow problems,1991,https://dl.acm.org/doi/abs/10.1145/103418.103425,,,,,,4.4,"k: 3
n: 4.4
m: 3",,O(knm log^4(n)),,"V: number of vertices
E: number of edges
U: maximum edge capacity
k: number of commodities
",,,,,,,,,,,,,1,Monte Carlo,1,(1+eps)***,,2,0,multiplicative***,no,,***Solution to problem perturbed by (1+eps) factor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5.1,Minimum Cut,1,0,0,"Approximate Minimum s-t Cut, unweighted",,,,1,0,"O(V*F*polylog(E, V)/(eps^3*C^2))",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Corollary 3.4) (1994)],Karger (Corollary 3.4),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,6.01,V: 6.01,2.9,"O(V*F*polylog(E, V)/(eps^3*C^2))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
C: value of minimum cut
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Monte Carlo,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,"Approximate Minimum s-t Cut, unweighted",,,,1,0,"O(V*F*polylog(E, V)/(eps*C))",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Corollary 3.6) (1994)],Karger (Corollary 3.6),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,6.01,V: 6.01,2.9,"O(V*F*polylog(E, V)/(eps*C))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
F: value of maximum s-t flow
C: value of minimum cut
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Las Vegas,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,"Approximate Minimum Cut, global, unweighted",,,,1,0,"O((E/eps+V/eps^3)*polylog(E, V))",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Corollary 4.5) (1994)],Karger (Corollary 4.5),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,5.01,V: 5.01,2.9,"O((E/eps+V/eps^3)*polylog(E, V))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Las Vegas,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,Approximate Minimum s-t Cut,,,,1,0,"O(E*sqrt(U)*polylog(E, V)/eps)",,,[https://dl.acm.org/doi/pdf/10.1145/195058.195422 Karger (Corollary 5.2) (1994)],Karger (Corollary 5.2),Karger,"Random Sampling in Cut, Flow, and Network Design Problems",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195422,,,,,,5.01,V: 5.01,2.9,"O(E*sqrt(U)*polylog(E, V)/eps)",,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/195058.195422,0,Word RAM?,words,,,,,,,,1,Las Vegas,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,Approximate Minimum s-t Cut,,,,1,0,"O((V*F/eps^2 + E)*polylog(E, V))",,,"[https://dl.acm.org/doi/pdf/10.1145/237814.237827 Benczur, Karger (1996)]","Benczur, Karger","Benczur, Karger",Approximating $s-t$ Minimum Cuts in $\Tilde{O}(n^2)$ Time,1996,https://dl.acm.org/doi/pdf/10.1145/237814.237827,,,,,,6.01,V: 6.01,2.9,"O((V*F/eps^2 + E)*polylog(E, V))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/237814.237827,0,Word RAM?,words,,,,,,,,1,,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,Approximate Minimum s-t Cut,,,,1,0,"O(E*min(V^(2/3), E^(1/2))*log(V^2/E)*log(E/eps))",,,"[https://dl.acm.org/doi/pdf/10.1145/290179.290181 Goldberg, Rao (1998)]","Goldberg, Rao","Goldberg, Rao",Beyond the Flow Decomposition Barrier,1998,https://dl.acm.org/doi/pdf/10.1145/290179.290181,,,,,,6.01,V: 6.01,3,"O(E*min(V^(2/3), E^(1/2))*log(V^2/E)*log(E/eps))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/pdf/10.1145/290179.290181,0,Word RAM?,words,,,,,,,,1,,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,Approximate Minimum s-t Cut,,,,1,0,"O(E+V^(4/3)polylog(E, V)/eps^(16/3))",,,"[https://dl.acm.org/doi/abs/10.1145/1993636.1993674 Christiano, Kelner, Madry, Spielman, Teng (Theorem 5.1) (2011)]","Christiano, Kelner, Madry, Spielman, Teng (Theorem 5.1)","Christiano, Kelner, Madry, Spielman, Teng","Electrical flows, laplacian systems, and faster approximation of maximum flow in undirected graphs",2011,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,,,,,,5,V: 5,2.9,"O(E+V^(4/3)polylog(E, V)/eps^(16/3))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter, 0 < eps < 1/7",V,https://dl.acm.org/doi/abs/10.1145/1993636.1993674,0,Word RAM?,words,,,,,,,,1,,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
5.1,Minimum Cut,1,0,0,Approximate Minimum s-t Cut,,,,1,0,"O(E*V^(1/3)polylog(E, V)/eps^(2/3))",,,"[https://dl.acm.org/doi/abs/10.1145/2488608.2488704 Lee, Rao, Srivastava (2013)]","Lee, Rao, Srivastava","Lee, Rao, Srivastava",A new approach to computing maximum flows using electrical flows,2013,https://dl.acm.org/doi/abs/10.1145/2488608.2488704,,,,,,5.33,V: 5.33,2.9,"O(E*V^(1/3)polylog(E, V)/eps^(2/3))",,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",V,https://dl.acm.org/doi/abs/10.1145/2488608.2488704,0,Word RAM?,words,,,,,,,,1,,1,(1+eps),1,2,0,multiplicative,yes,FPRAS,Factor off from minimum cut,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
6,Matrix Product,1,1,0,Arbitrary Precision Approximating Matrix Multiplication,77,,,1,0,$O(n^{2.7799}poly(\log(1/\epsilon)))$?,,,[https://doi.org/10.1016/0020-0190(79)90113-3 Bini's algorithm (1979)],Bini's algorithm,Bini,$O(n^(2.7799})$ complexity for $n\times n$ approximate matrix multiplication,1979,https://doi.org/10.1016/0020-0190(79)90113-3,,,,1,0,4.38995,"n: 5.7799,
n^2: 4.38995",3,$O(n^{2.7799}poly(\log(1/\epsilon)))$?,27,"n: dimension of square matrix
eps: approximation parameter/working precision",n^2,https://doi.org/10.1016/0020-0190(79)90113-3,0,Word RAM,words,3,"n: 5,
n^2: 3",$O(n^2)$,"Derived: Same idea as Strassen's, plus three additional nxn matrices",1,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,218776162.4,0,,4.7863E+16,0,,1.04713E+25,0,,3,,,Combinatorics
6,Matrix Product,1,1,0,Arbitrary Precision Approximating Matrix Multiplication,78,,,1,0,$O(n^{(3*\log 52/\log 110)}poly(\log(1/\epsilon))) ~ O(n^{2.5218}poly(\log(1/\epsilon)))$?,,,[https://epubs.siam.org/doi/abs/10.1137/0210032 Schonhage's algorithm (1980)],Schonhage's algorithm,Schonhage,Partial and Total Matrix Multiplication,1980,https://epubs.siam.org/doi/abs/10.1137/0210032,,,,1,0,4.2609,"n: 5.5218,
n^2: 4.2609",3,$O(n^{(3*\log 52/\log 110)}poly(\log(1/\epsilon))) ~ O(n^{2.5218}poly(\log(1/\epsilon)))$?,15.26,"n: dimension of square matrix
eps: approximation parameter/working precision",n^2,https://epubs.siam.org/doi/abs/10.1137/0210032,0,Word RAM,words,3,"n: 5,
n^2: 3",$O(n^2)$,"Derived: Same idea as Strassen's, plus three additional nxn matrices",1,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,36307805.48,0,,1.31826E+15,0,,4.7863E+22,0,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps^2),,,[https://epubs.siam.org/doi/10.1137/S0097539704442684  (2006)],,"Drineas, Kannan, Mahoney",Fast Monte Carlo Algorithms for Matrices I: Approximating Matrix Multiplication,2006,https://epubs.siam.org/doi/10.1137/S0097539704442684,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps^2),10,"n: dimension of square matrix
eps: approximation parameter",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 3,
n^2: 2.5",$O(n/eps^2)$,https://epubs.siam.org/doi/10.1137/S0097539704442684,0,1,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in Frobenius norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2(1/eps^2 log(1/delta) + (log(1/delta))^2)),,,[https://ieeexplore.ieee.org/abstract/document/4031351  (2006)],,Sarlos,Improved Approximation Algorithms for Large Matrices via Random Projections,2006,https://ieeexplore.ieee.org/abstract/document/4031351,,,,,,3,"n: 5,
n^2: 3",3,O(n^2(1/eps^2 log(1/delta) + (log(1/delta))^2)),10,"n: dimension of square matrix
eps: approximation parameter
delta: error probability",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n(1/eps^2 log(1/delta) + (log(1/delta))^2)),https://ieeexplore.ieee.org/abstract/document/4031351,0,1,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in Frobenius norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,0.001,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2 + nk^2 + k^3),,,[https://ieeexplore.ieee.org/abstract/document/4558532  (2008)],,"Belabbas, Wolfe",On sparse representations of linear operators and the approximation of matrix products,2008,https://ieeexplore.ieee.org/abstract/document/4558532,,,,,,3,"n: 5,
n^2: 3",3,O(n^2 + nk^2 + k^3),10,"n: dimension of square matrix
eps: approximation parameter
k: number of rows parameter",n^2,,0,Word RAM,words,#VALUE!,,,,,,,0,,1,sqrt(n-k)?,4,0,5,additive,yes,n/a,,0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps^2 log(1/delta)),,,[https://dl.acm.org/doi/abs/10.1145/1536414.1536445  (2009)],,"Clarkson, Woodruff",Numerical linear algebra in the streaming model,2009,https://dl.acm.org/doi/abs/10.1145/1536414.1536445,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps^2 log(1/delta)),10,"n: dimension of square matrix
eps: approximation parameter
delta: error probability",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps^2 log(1/delta) log(n)),https://dl.acm.org/doi/abs/10.1145/1536414.1536445,0,1,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in Frobenius norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps^2 (p_1+p_2) log n),,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611973082.109  (2011)],,"Magen, Zouzias",Low Rank Matrix-valued Chernoff Bounds and Approximate Matrix Multiplication,2011,https://epubs.siam.org/doi/abs/10.1137/1.9781611973082.109,,,,,,4,"n: 5.01,
n^2: 4",3,O(n^2/eps^2 (p_1+p_2) log n),16.1,"n: dimension of square matrix
eps: approximation parameter
p_1, p_2: stable ranks of matrices",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps^2 (p_1+p_2) log n)?,Derived: size of matrices used in intermediate steps?,1,0,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in spectral norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps^2 (mu + log(1/delta) + log(log(1/eps)))),,,[https://ieeexplore.ieee.org/abstract/document/6875220  (2014)],,"Kyrillidis, Vlachos, Zouzias",Approximate matrix multiplication with application to linear embeddings,2014,https://ieeexplore.ieee.org/abstract/document/6875220,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps^2 (mu + log(1/delta) + log(log(1/eps)))),16,"n: dimension of square matrix
eps: approximation parameter
delta: error probability
mu: total nuclear rank of matrices",n^2,https://ieeexplore.ieee.org/abstract/document/6875220,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps^2 (mu + log(1/delta) + log(log(1/eps))))?,Derived: size of matrices used in intermediate steps?,1,0,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in spectral norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps^2 (p_1+p_2 + log(1/delta))),,,[https://arxiv.org/abs/1507.02268  (2015)],,"Cohen, Nelson, Woodruff",Optimal approximate matrix product in terms of stable rank,2015,https://arxiv.org/abs/1507.02268,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps^2 (p_1+p_2 + log(1/delta))),16.1,"n: dimension of square matrix
eps: approximation parameter
p_1, p_2: stable ranks of matrices
delta: error probability",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps^2 (p_1+p_2 + log(1/delta)))?,Derived: size of matrices used in intermediate steps?,1,0,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in spectral norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps),,,[https://www.ijcai.org/Proceedings/16/Papers/328.pdf  (2016)],,"Ye, Luo, Zhang",Frequent Direction Algorithms for Approximate Matrix Multiplication with Applications in CCA,2016,https://www.ijcai.org/Proceedings/16/Papers/328.pdf,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps),10,"n: dimension of square matrix
eps: approximation parameter",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps)?,Derived: size of matrices used in intermediate steps?,1,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in spectral norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps sqrt(p_1*p_2)),,,[https://proceedings.mlr.press/v54/mroueh17a.html  (2017)],,"Mroueh, Marcheret, Goel",Co-Occurring Directions Sketching for Approximate Matrix Multiply,2017,https://proceedings.mlr.press/v54/mroueh17a.html,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps sqrt(p_1*p_2)),16,"n: dimension of square matrix
eps: approximation parameter
p_1, p_2: stable ranks of matrices",n^2,https://proceedings.mlr.press/v54/mroueh17a.html,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps sqrt(p_1*p_2)),https://proceedings.mlr.press/v54/mroueh17a.html,0,1,,0,,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in spectral norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,1,1,0,Approximate Matrix Multiplication,,,,1,0,O(n^2/eps sqrt(p_1*p_2)),,,[https://www.sciencedirect.com/science/article/pii/S1319157818306396  (2022)],,"Francis, Raimond",A practical streaming approximate matrix multiplication algorithm,2022,https://www.sciencedirect.com/science/article/pii/S1319157818306396,,,,,,3,"n: 5,
n^2: 3",3,O(n^2/eps sqrt(p_1*p_2)),16,"n: dimension of square matrix
eps: approximation parameter
p_1, p_2: stable ranks of matrices",n^2,https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,Word RAM,words,2.5,"n: 4,
n^2: 2.5",O(n/eps sqrt(p_1*p_2) + (p_1*p_2)/eps^2),https://www.sciencedirect.com/science/article/pii/S1319157818306396,0,1,,0,,1,eps,1,0,1.99,additive,yes,n/a,"Magnitude of error (from obtained solution to real solution), in spectral norm divided by ||A||*||B||",0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,0.001,1,0,Approximate Matrix Multiplication,,,,1,0,,,,[https://arxiv.org/abs/2106.10860  (2021)],,"Blalock, Guttag",Multiplying Matrices Without Multiplying,2021,https://arxiv.org/abs/2106.10860,,,,,,,,,,,"n: dimension of square matrix
eps: approximation parameter",n^2,,0,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
6,Matrix Product,0.001,1,0,Approximate Matrix Multiplication,,,,1,0,,,,[https://www.mdpi.com/1099-4300/25/8/1130  (2023)],,"Okuyama, Rohm, Mihana, Naruse",Acceleration of Approximate Matrix Multiplications on GPUs,2023,https://www.mdpi.com/1099-4300/25/8/1130,,,,,,,,,,,"n: dimension of square matrix
eps: approximation parameter",n^2,,0,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,,,,,,,,,,3,,,Combinatorics
7,Graph Coloring,0.001,1,0,O(n^{3/14}) coloring a 3-colorable graph,95,,,1,0,O(poly(V)),,,"[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.36.4204 Karger, Blum (1997)]","Karger, Blum","Karger, Blum",An $\Tilde{O}(n^{3/14})$-Coloring Algorithm for 3-Colorable Graphs,1997,http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.36.4204,,,,0,0,7,n: 7,1,$O(poly(n))$,,"n: number of nodes
m: number of edges",n,,,,,#VALUE!,,,,,,,0,n/a,0,,,,,,,,,0,0,,0,0,,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,4.38,Inf,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,1,Chromatic Number Approximation,,,,1,0,O(n^2),,,[https://cir.nii.ac.jp/crid/1573950400680527488 Johnson (1974)],Johnson,Johnson,Worst case behavior of graph coloring algorithms,1974,https://cir.nii.ac.jp/crid/1573950400680527488,,,,0,0,5,n: 5,3,O(n^2),20,"n: number of nodes
m: number of edges",n,https://cir.nii.ac.jp/crid/1573950400680527488,0,Word RAM,words,,,,,,,,0,,1,O(n/log n),4,8.99,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,https://dl.acm.org/doi/pdf/10.1145/2157.2158,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,1,Chromatic Number Approximation,,,,1,0,O(n(n+m)*log(n)),,,[https://dl.acm.org/doi/abs/10.1145/2157.2158 Wigderson (1983)],Wigderson,Wigderson,Improving the performance guarantee for approximate graph coloring,1983,https://dl.acm.org/doi/abs/10.1145/2157.2158,,,,0,0,6.01,n: 6.01,3,O(n(n+m)*log(n)),20,"n: number of nodes
m: number of edges",n,https://dl.acm.org/doi/abs/10.1145/2157.2158,0,Word RAM,words,,,,,,,,0,,1,O(n((log log n)/(log n))^2,4,8.98,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,1,Chromatic Number Approximation,,,,1,0,O(n^(4+(21/eps))/log n),,,"[https://link.springer.com/article/10.1007/BF01840398 Berger, Rompel (1990)]","Berger, Rompel","Berger, Rompel",A better performance guarantee for approximate graph coloring,1990,https://link.springer.com/article/10.1007/BF01840398,,,,0,0,7,n: 7,3,O(n^(4+(21/eps))/log n),400,"n: number of nodes
m: number of edges
eps: approximation parameter",n,https://link.springer.com/article/10.1007/BF01840398,0,Word RAM,words,,,,,,,,0,,1,eps*n((log log n)/(log n))^3,4,8.98,0,multiplicative,yes,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,1,Chromatic Number Approximation,,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/article/10.1007/BF01994876 Boppana, Halldorsson (1992)]","Boppana, Halldorsson","Boppana, Halldorsson",Approximating maximum independent sets by excluding subgraphs,1992,https://link.springer.com/article/10.1007/BF01994876,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of nodes
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,O(n/(log n)^2),4,8.98,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,,,,Combinatorics
7,Graph Coloring,1,0,1,Chromatic Number Approximation,,,,1,0,O(n^3(n+m))?,,,[https://www.sciencedirect.com/science/article/pii/0020019093902466 Halldorsson (1993)],Halldorsson,Halldorsson,A still better performance guarantee for approximate graph coloring,1993,https://www.sciencedirect.com/science/article/pii/0020019093902466,,,,0,0,7,n: 7,3,O(n^3(n+m))?,40,"n: number of nodes
m: number of edges",n,,1,Word RAM,words,,,,,,,,0,,1,O(n(log log n)^2/(log n)^3),4,8.98,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,0,Edge Chromatic Number Approximation,,,,1,0,O(nm),,,"[https://www.cs.utexas.edu/users/misra/psp.dir/vizing.pdf Misra, Gries (1992)]","Misra, Gries","Misra, Gries",A Constructive Proof of Vizing’s Theorem,1992,https://www.cs.utexas.edu/users/misra/psp.dir/vizing.pdf,,,,0,0,6,n: 6,3,O(nm),30,"n: number of nodes
m: number of edges
d: maximum degree of vertex",n,https://www.cs.utexas.edu/users/misra/psp.dir/vizing.pdf,0,Word RAM,words,,,O(m),https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,,,,0,,1,1,2,0,2,additive,no,n/a,Number of colors away from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Misra_%26_Gries_edge_coloring_algorithm,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,0,Edge Chromatic Number Approximation,,,,1,0,O(dm*log(n)),,,"[https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf Gabow, Nishizeki, Kariv, Leven, Tarada (Theorem 4.1) (1985)]","Gabow, Nishizeki, Kariv, Leven, Tarada (Theorem 4.1)","Gabow, Nishizeki, Kariv, Leven, Tarada",Algorithms For Edge-Coloring Graphs,1985,https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,,,,0,0,6.01,n: 6.01,3,O(dm*log(n)),,"n: number of nodes
m: number of edges
d: maximum degree of vertex",n,https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,0,Word RAM,words,,,O(m),https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,,,,0,,1,1,2,0,2,additive,no,n/a,Number of colors away from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Edge_coloring#Exact_algorithms,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7,Graph Coloring,1,0,0,Edge Chromatic Number Approximation,,,,1,0,O(m*sqrt(n log n)),,,"[https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf Gabow, Nishizeki, Kariv, Leven, Tarada (Theorem 5.1) (1985)]","Gabow, Nishizeki, Kariv, Leven, Tarada (Theorem 5.1)","Gabow, Nishizeki, Kariv, Leven, Tarada",Algorithms For Edge-Coloring Graphs,1985,https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,,,,0,0,5.5,n: 5.5,3,O(m*sqrt(n log n)),,"n: number of nodes
m: number of edges
d: maximum degree of vertex",n,https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,0,Word RAM,words,,,O(m+n),https://web.eecs.umich.edu/~pettie/matching/Gabow-Nishizeki-etal-algorithms-for-edge-coloring.pdf,,,,0,,1,1,2,0,2,additive,no,n/a,Number of colors away from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Edge_coloring#Exact_algorithms,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7.1,Multigraph Coloring,1,0,0,Edge Chromatic Number Approximation,,,,1,0,O(dn*(log(dn))^2),,,"[https://www.sciencedirect.com/science/article/pii/0196677487900265 Karloff, Shmoys (1987)]","Karloff, Shmoys","Karloff, Shmoys",Efficient parallel algorithms for edge coloring problems,1987,https://www.sciencedirect.com/science/article/pii/0196677487900265,,,,0,0,5.01,n: 5.01,3,O(dn*(log(dn))^2),,"n: number of nodes
m: number of edges
d: maximum degree of vertex",n,https://ieeexplore.ieee.org/document/6312171,0,Word RAM,words,,,O(dn),https://ieeexplore.ieee.org/document/6312171,,,,0,,1,3*ceil(d/2)/(2d),2,2.33,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,https://en.wikipedia.org/wiki/Edge_coloring#Exact_algorithms,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7.1,Multigraph Coloring,1,0,0,Edge Chromatic Number Approximation,,,,1,0,O((log(dn))^3),,,"[https://www.sciencedirect.com/science/article/pii/0196677487900265 Karloff, Shmoys [Parallel] (1987)]","Karloff, Shmoys [Parallel]","Karloff, Shmoys",Efficient parallel algorithms for edge coloring problems,1987,https://www.sciencedirect.com/science/article/pii/0196677487900265,,,,0,0,2,n: 2,3,O((log(dn))^3),,"n: number of nodes
m: number of edges
d: maximum degree of vertex",n,https://www.sciencedirect.com/science/article/pii/0196677487900265,0,CRCW PRAM,words,,,O(dn),https://ieeexplore.ieee.org/document/6312171,,,,0,,1,3*ceil(d/2)/(2d),2,2.33,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,1,O(dn),0,0,https://en.wikipedia.org/wiki/Edge_coloring#Exact_algorithms,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
7.1,Multigraph Coloring,1,0,0,Edge Chromatic Number Approximation,,,,1,0,O(m log d),,,"[https://www.sciencedirect.com/science/article/pii/0196677487900265 Karloff, Shmoys, using [Cole, Ost and Schirra 2001] (2001)]","Karloff, Shmoys, using [Cole, Ost and Schirra 2001]","Karloff, Shmoys",Efficient parallel algorithms for edge coloring problems,2001,https://www.sciencedirect.com/science/article/pii/0196677487900265,,,,0,0,5.01,n: 5.01,3,O(m log d),,"n: number of nodes
m: number of edges
d: maximum degree of vertex",n,https://link.springer.com/article/10.1007/s004930170002,0,Word RAM,words,,,O(dn)?,,,,,0,,1,3*ceil(d/2)/(2d),2,2.33,0,multiplicative,no,n/a,Multiplicative factor away from chromatic number,0,0,,0,0,https://en.wikipedia.org/wiki/Edge_coloring#Exact_algorithms,"graph coloring is a special case of graph labeling; it is an assignment
 of labels traditionally called ""colors"" to elements of a graph subject
 to certain constraints. ",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
9,Linear System,2,1,0,"Positive Definite Matrix, Iterative Method",104,,,1,0,$O(m k^{0.5} \ln(1/\epsilon))$,,,[https://nvlpubs.nist.gov/nistpubs/jres/049/jresv49n6p409_A1b.pdf Conjugate Gradient (1952)],Conjugate Gradient,"Hestenes, Stiefel",Methods of Conjugate Gradients for Solving Linear Systems,1952,https://nvlpubs.nist.gov/nistpubs/jres/049/jresv49n6p409_A1b.pdf,1,1,https://en.wikipedia.org/wiki/Conjugate_gradient_method,1,3->4,3,"m: 3,
k: 2.5,
n^2: 3",3,$O(m k^{0.5} \ln(1/\epsilon))$,16,"n: number of variables and number of equations
m: number of nonzero entries in matrix
k: ratio between largest and smallest eigenvalues
epsilon: error requirement",n^2,,0,Word RAM,words,3,"m: 3,
n: 5,
n^2: 3",O(m),http://www.cs.cmu.edu/~quake-papers/painless-conjugate-gradient.pdf,0,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,http://www.cs.cmu.edu/~quake-papers/painless-conjugate-gradient.pdf,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,"n:m:k
1:1:1",,,,,,,6076,6077.359612,1.066852945,192450089.7,#REF!,#REF!,6085806194502,#REF!,#REF!,3,,,Numerical Analysis
9,Linear System,1,1,0,"Sparse, Iterative Method",,,,1,0,"O(max(m^{(omega-2)/(omega-1)}*n^2, n^{(5*omega-4)/(omega+1)})*log^2(k/epsilon)) where omega is the exponent on the complexity of matrix multiplication;
currently O(n^2.331642)",,,"[https://arxiv.org/abs/2007.10254 Peng, Vempala (2020)]","Peng, Vempala","Peng, Vempala",Solving Sparse Linear Systems Faster than Matrix Multiplication,2020,https://arxiv.org/abs/2007.10254,,,,,,,,3,"$O(max(m^{(omega-2)/(omega-1)}*n^2, n^{(5*omega-4)/(omega+1)})*log^2(k/epsilon))$ where omega is the exponent on the complexity of matrix multiplication;
currently $O(n^2.331642)$",15.097,"n: number of variables and number of equations
m: number of nonzero entries in matrix
k: ratio between largest and smallest eigenvalues
epsilon: error requirement",,,0,Word RAM,words,,,,,0,,,1,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,0,1,0,"Toeplitz, Iterative Method",,,,,,,,,[https://epubs.siam.org/doi/abs/10.1137/S0036144594276474  ()],,,,,https://epubs.siam.org/doi/abs/10.1137/S0036144594276474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,2,1,0,"Toeplitz, Iterative Method",,,,1,0,O(n log n),,,[https://www.siue.edu/~juliu/teaching/2020Spring/LectureSlides/strang1986.pdf Strang's preconditioner (1986)],Strang's preconditioner,Strang,A Proposal for Toeplitz Matrix Calculations,1986,https://www.siue.edu/~juliu/teaching/2020Spring/LectureSlides/strang1986.pdf,,,,,,4,"n: 4
epsilon: 1",3,O(n log n),11,"n: number of variables and number of equations
epsilon: error requirement",n,https://epubs.siam.org/doi/epdf/10.1137/S0036144594276474,0,Word RAM,words,3,n:3,O(n),,0,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,0,1,0,"Overdetermined System, Iterative Method",,,,,,,,,[https://link.springer.com/chapter/10.1007/11830924_45  ()],,,,,https://link.springer.com/chapter/10.1007/11830924_45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,1,0,"Sparse Solutions, Iterative Method",,,,,,,,,[https://epubs.siam.org/doi/abs/10.1137/S0097539792240406  ()],,,,,https://epubs.siam.org/doi/abs/10.1137/S0097539792240406,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,1,0,,,,,,,,,,[https://link.springer.com/article/10.1007/s00034-021-01816-4  ()],,,,,https://link.springer.com/article/10.1007/s00034-021-01816-4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,1,0,,,,,,,,,,[https://link.springer.com/content/pdf/10.1007/3-540-09519-5_60.pdf  ()],,,,,https://link.springer.com/content/pdf/10.1007/3-540-09519-5_60.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,1,0,"Sparse, Overdetermined System, Iterative Method",,,,1,0,O(n i),,https://people.eecs.berkeley.edu/~brecht/cs294docs/week1/09.Strohmer.pdf,[https://faculty.sites.iastate.edu/esweber/files/inline-files/kaczmarz_english_translation_1937.pdf Kaczmarz Method (1937)],Kaczmarz Method,Kaczmarz,Angenäherte Auflösung von Systemen linearer Gleichungen,1937,https://faculty.sites.iastate.edu/esweber/files/inline-files/kaczmarz_english_translation_1937.pdf,,,,,,3,"n:3
i: 3
No known bounds on number of iterations",3,O(n i),10,"n: number of variables
m: number of equations
i: number of iterations",n,https://people.eecs.berkeley.edu/~brecht/cs294docs/week1/09.Strohmer.pdf,,Word RAM,words,3,n:3,O(n),,1,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,"Preserves sparsity of matrix, performs better than conjugate gradients in the overdetermined case",,Numerical Analysis
9,Linear System,1,1,0,"Sparse, Overdetermined System, Iterative Method",,,,1,0,O(n log (epsilon / (1-k^{-2}))),,,[https://people.eecs.berkeley.edu/~brecht/cs294docs/week1/09.Strohmer.pdf Randomized Kaczmarz (2008)],Randomized Kaczmarz,"Strohmer, Vershynin",A randomized Kaczmarz algorithm with exponential convergence,2008,https://people.eecs.berkeley.edu/~brecht/cs294docs/week1/09.Strohmer.pdf,,,,,,3,"n:3
i = log (epsilon / (1-k^{-2}))
epsilon: 2",3,O(n log (epsilon / (1-k^{-2}))),11,"n: number of variables
m: number of equations
i: number of iterations
k: condition number of matrix
epsilon: error requirement",n,https://people.eecs.berkeley.edu/~brecht/cs294docs/week1/09.Strohmer.pdf,0,Word RAM,words,3,n:3,O(n),,0,0,,1,Las Vegas,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,"Preserves sparsity of matrix, performs better than conjugate gradients in the overdetermined case",,Numerical Analysis
9,Linear System,1,1,0,Iterative Method,,,,1,0,O(n^2 log(epsilon / rho))*** (see remarks),,https://epubs.siam.org/doi/pdf/10.1137/15M1025487,[https://arxiv.org/abs/1506.03296 Gower-Richtarik (2015)],Gower-Richtarik,"Gower, Richtarik",Randomized Iterative Methods for Linear Systems,2015,https://arxiv.org/abs/1506.03296,,,,,,,"n+m+q: 3 to 6
epsilon: 2",3,O(n^2 log(epsilon / rho))*** (see remarks),11,"A: m x n linear system
S: m x q randomized matrix
B: n x n positive definite matrix (inner product)
rho: convergence rate = $1 - \frac{min eigenvalue(S^T A B^{-1} A^T S)}{\|B^{-1/2} A^T S\|_F^2}$ where $\|M\|_F$ if the Frobenius norm of $M$
epsilon: error requirement",rho,,0,Word RAM,words,3 to 5,n:3 to 5,O(n) to O(n^2),,1,0,,1,Las Vegas,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,"Time complexity highly depends on choice of parameter matrix $S$. Most useful cases result in O(n) to O(n^2) iteration time, but naive choices of $S$ may result in O(n^3) time per iteration.

Specific choices of $S$ can reduce this method to other algorithms, such as randomized Kaczmarz or randomized Newton.",,Numerical Analysis
9,Linear System,In progress,1,0,,,,,,,,,,[https://link.springer.com/article/10.1007/s10107-012-0614-z Randomized coordinate descent (2012)],Randomized coordinate descent,"Richtarik, Takac",Iteration complexity of randomized block-coordinate descent methods for minimizing a composite function,2012,https://link.springer.com/article/10.1007/s10107-012-0614-z,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,1,0,,,,,,,,,,[ Stochastic Newton methods ()],Stochastic Newton methods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,1,0,"Sparse, Iterative Method",,,,1,0,O(nnz i),,,[https://arxiv.org/pdf/2207.07615.pdf PLSS (2022)],PLSS,"Brust, Saunders",PLSS: A Projected Linear System Solver,2022,https://arxiv.org/pdf/2207.07615.pdf,,,,,,3,"i: 3
nnz: 3",3,O(nnz m),20,"n: number of variables
m: number of equations
nnz: number of nonzero values in matrix
i: number of iterations",nnz,,1,Word RAM,words,3,n:3,O(n),,0,1,0,1,Las Vegas,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,"Time complexity analysis depends on the choice of sketch matrix $S$, can choose $S$ for improved Kaczmarz method (PLSS-Kaczmarz)",,Numerical Analysis
9,Linear System,1,1,0,"Sparse, Iterative Method, Sparse Least Squares",,,,1,0,O(nnz i),,,[https://stanford.edu/group/SOL/software/lsqr/lsqr-toms82a.pdf LSQR (1982)],LSQR,"Paige, Saunders",LSQR: An Algorithm for Sparse Linear Equations and Sparse Least Squares,1982,https://stanford.edu/group/SOL/software/lsqr/lsqr-toms82a.pdf,,,,,,3,"i: 3
nnz: 3",3,O(nnz i),10,"n: number of variables
m: number of equations
nnz: number of nonzero values in matrix
i: number of iterations",nnz,,1,Word RAM,words,3,n:3,O(n),,1,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,1,1,0,"Sparse, Iterative Method, Sparse Least Squares",,,,1,0,O(nnz i),,,[https://epubs.siam.org/doi/epdf/10.1137/10079687X LSMR (2011)],LSMR,"Fong, Saunders",LSMR: An Iterative Algorithm for Sparse Least-Squares Problems,2011,https://epubs.siam.org/doi/epdf/10.1137/10079687X,,,,,,3,"
i: 3
nnz: 3",3,O(nnz i),10,"n: number of variables
m: number of equations
nnz: number of nonzero values in matrix
i: number of iterations",nnz,,1,Word RAM,words,3,n:3,O(n),,1,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,"Very similar to LSQR algorithm, with slightly different minimization goals (minimize ||A^T r|| vs minimizing ||r||)",,Numerical Analysis
9,Linear System,0,1,0,Iterative Method,,,,,,,,,[https://epubs.siam.org/doi/10.1137/15M1025487  ()],,,,,https://epubs.siam.org/doi/10.1137/15M1025487,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,1,0,"Sparse, Symmetric, Iterative Method",,,,1,0,O(nnz i),,,[https://epubs.siam.org/doi/epdf/10.1137/0712047 MINRES (1975)],MINRES,"Paige, Saunders",Solution of Sparse Indefinite Systems of Linear Equations,1975,https://epubs.siam.org/doi/epdf/10.1137/0712047,,,,,,3,"
i: 3
nnz: 3",3,O(nnz n),20,"n: number of variables and equations
nnz: number of nonzero values in matrix
i: number of iterations",nnz,,0,Word RAM,words,3,n:3,O(n),,0,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,1,1,0,Iterative Method,,,,1,0,O(i^2 n),,,[https://epubs.siam.org/doi/epdf/10.1137/0907058 GMRES (1986)],GMRES,"Saad, Schultz",GMRES: A Generalized Minimal Residual Algorithm for Solving Nonsymmetric Linear Systems,1986,https://epubs.siam.org/doi/epdf/10.1137/0907058,,,,,,5,"n: 3
i: 5
i = O(log (k / epsilon)) when matrix is diagonalizable

k: 2",3,O(n^3),30,"n: number of variables and number of equations
i: number of iterations
k: condition number on eigenbasis
epsilon: error requirement","n,i",https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1236406,0,Word RAM,words,5,i:5,O(i^2),"https://en.wikipedia.org/wiki/Generalized_minimal_residual_method#:~:text=In%20mathematics%2C%20the%20generalized%20minimal,Krylov%20subspace%20with%20minimal%20residual.

Checked as well",0,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,0,1,0,,,,,,,,,,[ Restarted GMRES ()],Restarted GMRES,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,1,0,"Sparse, Diagonally dominant matrix, Iterative Method",,,,1,0,O(nnz i),,,"[https://en.wikipedia.org/wiki/Jacobi_method

https://epubs.siam.org/doi/epdf/10.1137/1.9781611970937.ch10 Jacobi Iteration (~1823)]",Jacobi Iteration,Jacobi,,~1823,"https://en.wikipedia.org/wiki/Jacobi_method

https://epubs.siam.org/doi/epdf/10.1137/1.9781611970937.ch10",,,,,,3,"nnz: 3
i: 3",3,O(nnz i),10,"n: number of variables and number of equations
nnz: number of nonzero entries
i: number of iterations",nnz,,0,Word RAM,words,3,n: 3,O(n),,0,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,1,1,0,"Sparse, Symmetric positive definite, Iterative Method",,,,1,0,O(nnz i),,,"[https://www.biodiversitylibrary.org/item/110049#page/622/mode/1up

https://en.wikipedia.org/wiki/Gauss%E2%80%93Seidel_method

https://epubs.siam.org/doi/epdf/10.1137/1.9781611970937.ch10 Gauss-Seidel Iteration (~1874)]",Gauss-Seidel Iteration,"Gauss, Seidel","Über ein Verfahren, die Gleichungen, auf welche die Methode der kleinsten Quadrate führt, sowie lineäre Gleichungen überhaupt, durch successive Annäherung aufzulösen",~1874,"https://www.biodiversitylibrary.org/item/110049#page/622/mode/1up

https://en.wikipedia.org/wiki/Gauss%E2%80%93Seidel_method

https://epubs.siam.org/doi/epdf/10.1137/1.9781611970937.ch10",,,,,,3,"nnz: 3
i: 3",3,O(nnz i),10,"n: number of variables and number of equations
nnz: number of nonzero entries
i: number of iterations",nnz,,0,Word RAM,words,3,n: 3,O(n),,0,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,0,1,0,"Sparse, Iterative Method",,,,1,0,O(nnz i),,,[ SOR (Successive overrelaxation) (~1950)],SOR (Successive overrelaxation),,,~1950,,,,,,,3,"nnz: 3
i: 3",3,O(nnz i),10,"n: number of variables and number of equations
nnz: number of nonzero entries
i: number of iterations",nnz,,0,Word RAM,words,3,n: 3,O(n),,0,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
9,Linear System,0,1,0,Rational entries,,,,0,1,,,,[https://dl.acm.org/doi/10.1145/355719.355720  ()],,,,,https://dl.acm.org/doi/10.1145/355719.355720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,1,0,,,,,,,,,,[ Schwarz methods ()],Schwarz methods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,0,0,"large, sparse, iterative (hybrid)",,,,,,,,,,,"Gallivan, Sameh, Zlatev",,1990,https://www.sciencedirect.com/science/article/pii/0956052190900067,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,0,0,Positive Linear Programming,,,,1,0,O(poly((log(nm))/eps)),,,[https://dl.acm.org/doi/pdf/10.1145/167088.167211  (1993)],,"Luby, Nisan",A Parallel Approximation Algorithm for Positive Linear Programming,1993,https://dl.acm.org/doi/pdf/10.1145/167088.167211,,,,,,,,2.9,O(poly((log(nm))/eps)),5,"n: number of variables
m: number of constraints
L: length of input, in bits
eps: approximation factor",n,https://dl.acm.org/doi/pdf/10.1145/167088.167211,,Word RAM,words,,,,,,,,0,,1,1 + eps,1,2,0,multiplicative,yes,FPTAS,Multiplicative error between primal and dual feasible solutions,0,1,O(mn),0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,1,0,Positive Linear Programming,,,,1,0,,,,[https://epubs.siam.org/doi/abs/10.1137/S0097539700379383  (2004)],,"Bartal, Byers, Raz","Fast, Distributed Approximation Algorithms for Positive Linear Programming with Applications to Flow Control",2004,https://epubs.siam.org/doi/abs/10.1137/S0097539700379383,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits
eps: approximation factor",n,,,Word RAM,words,,,,,,,,0,,1,1 + eps,1,2,0,multiplicative,yes,FPTAS,Multiplicative error from optimal solution,0,1,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,Multiple-Objective Linear Programming with Fuzzy Parameters,,,,1,0,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0096300305004832  (2006)],,"Wu, Lu, Zhang",A new approximate algorithm for solving multiple objective linear programming problems with fuzzy parameters,2006,https://www.sciencedirect.com/science/article/abs/pii/S0096300305004832,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits",n,,,Word RAM,words,,,,,,,,0,,1,eps,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to optimal),0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,Stochastic Linear Programming,,,,1,0,"O(poly(L, 1/eps))",,,[https://dl.acm.org/doi/abs/10.1145/1217856.1217860  (2006)],,"Shmoys, Swamy",An approximation scheme for stochastic linear programming and its application to stochastic integer programs,2006,https://dl.acm.org/doi/abs/10.1145/1217856.1217860,,,,,,7,n: 7,1,"O(poly(L, 1/eps))",400,"n: number of variables
m: number of constraints
L: length of input, in bits
eps: approximation factor",n,,,Word RAM,words,,,,,,,,0,,1,1 + eps,1,2,0,multiplicative,yes,FPTAS,Multiplicative error from optimal solution,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,Max-min Linear Programming,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/1583991.1584058  (2009)],,"Floreen, Kaasinen, Kaski, Suomela",An optimal local approximation algorithm for max-min linear programs,2009,https://dl.acm.org/doi/abs/10.1145/1583991.1584058,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits",n,,,Word RAM,words,,,,,,,,0,,1,m(1-1/n) + eps?,4,9,0,multiplicative,yes,n/a,Multiplicative error from optimal solution,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,Covering/Packing Integer Linear Programming,,,,1,0,,,,[https://link.springer.com/article/10.1007/s00453-010-9431-z  (2010)],,"Pritchard, Chakrabarty",Approximability of Sparse Integer Programs,2010,https://link.springer.com/article/10.1007/s00453-010-9431-z,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,Integer Linear Programming,,,,1,0,,,,[https://link.springer.com/chapter/10.1007/3-540-61440-0_159  (1996)],,"Alon, Srinivasan",Improved parallel approximation of a class of integer programming problems,1996,https://link.springer.com/chapter/10.1007/3-540-61440-0_159,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,0-1 Integer Linear Programming,,,,1,0,,,,[https://proceedings.neurips.cc/paper_files/paper/2020/file/6abba5d8ab1f4f32243e174beb754661-Paper.pdf  (2020)],,"Li, Sun, Ye",Simple and Fast Algorithm for Binary Integer and Online Linear Programming,2020,https://proceedings.neurips.cc/paper_files/paper/2020/file/6abba5d8ab1f4f32243e174beb754661-Paper.pdf,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
10,Linear Programming,0.001,0,0,Integer Linear Programming with at most 2 variables per Inequality,,,,1,0,,,,[https://link.springer.com/article/10.1007/BF01585160  (1993)],,"Hochbaum, Megiddo, Naor, Tamir",Tight bounds and 2-approximation algorithms for integer programs with two variables per inequality,1993,https://link.springer.com/article/10.1007/BF01585160,,,,,,,,,,,"n: number of variables
m: number of constraints
L: length of input, in bits",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) ...,,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
14,Minimum Spanning Tree (MST),1,1,0,"Undirected, General MST (Approximate)",,,,1,0,O(dU*log(dU/eps)/eps^3),,,"[https://www.cs.princeton.edu/~chazelle/pubs/mstapprox.pdf Chazelle, Rubinfeld, Trevisan (2005)]","Chazelle, Rubinfeld, Trevisan","Chazelle, Rubinfeld, Trevisan",Approximating the Minimum Spanning Tree Weight in Sublinear Time,2005,https://www.cs.princeton.edu/~chazelle/pubs/mstapprox.pdf,,,,,,4,V: 4,3,O(dU*log(dU/eps)/eps^3),11,"V: number of vertices
E: number of edges
d: average degree (d = E/V)
U: maximum edge weight
eps: error parameter; 0 < eps < 1/2",V,,0,Word RAM,words,,,O(U/eps),Derived: approx-num-connected-components subroutines run with BFS's running until O(U/eps) vertices,1,0,,0,,1,1 + eps,1,2,0,multiplicative,yes,FPTAS,Multiplicative factor away from true MST weight,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,,,,,,,5,,https://scholarworks.rit.edu/cgi/viewcontent.cgi?article=1658&context=theses,Combinatorics
14,Minimum Spanning Tree (MST),1,1,0,"Undirected, Integer-Weight MST (Approximate)",,,,1,0,O(dU*log(dU/eps)/eps^2),,,"[https://www.cs.princeton.edu/~chazelle/pubs/mstapprox.pdf Chazelle, Rubinfeld, Trevisan (2005)]","Chazelle, Rubinfeld, Trevisan","Chazelle, Rubinfeld, Trevisan",Approximating the Minimum Spanning Tree Weight in Sublinear Time,2005,https://www.cs.princeton.edu/~chazelle/pubs/mstapprox.pdf,,,,,,4,V: 4,3,O(dU*log(dU/eps)/eps^2),11,"V: number of vertices
E: number of edges
d: average degree (d = E/V)
U: maximum edge weight",V,,0,Word RAM,words,,,O(U/eps),Derived: approx-num-connected-components subroutines run with BFS's running until O(U/eps) vertices,1,0,,0,,1,1 + eps,1,2,0,multiplicative,yes,FPTAS,Multiplicative factor away from true MST weight,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,,,,,,,5,,https://scholarworks.rit.edu/cgi/viewcontent.cgi?article=1658&context=theses,Combinatorics
14,Minimum Spanning Tree (MST),0,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
14.1,k Minimum Spanning Tree (k-MST),1,0,0,General k-MST (Approximate),,,,1,0,O(V^2(E+V log V)),,,"[https://arxiv.org/abs/math/9409222 Ravi, Sundaram, Marathe, Ravi, Rosenkrantz (1994)]","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz",Spanning trees short or small,1994,https://arxiv.org/abs/math/9409222,,,,,,7,V: 7,3,O(V^2(E+V log V)),,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,https://arxiv.org/abs/math/9409222,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2sqrt(k),4,8,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,General k-MST (Approximate),,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/225058.225139 Awerbuch, Azar, Blum, Vempala (1995)]","Awerbuch, Azar, Blum, Vempala","Awerbuch, Azar, Blum, Vempala",Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen,1995,https://dl.acm.org/doi/10.1145/225058.225139,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O((log k)^2),4,7,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,General k-MST (Approximate),,,,1,0,O(V^2(log V)^4),,,"[https://www.sciencedirect.com/science/article/pii/S0022000097915427 Blum, Ravi, Vempala (1996)]","Blum, Ravi, Vempala","Blum, Ravi, Vempala",A Constant-Factor Approximation Algorithm for the k-MST Problem,1996,https://www.sciencedirect.com/science/article/pii/S0022000097915427,,,,,,5.01,V: 5.01,3,O(V^2(log V)^4),,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,17,3,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,General k-MST (Approximate),,,,1,0,O(poly(V)),,,[https://ieeexplore.ieee.org/document/548489 Garg (1996)],Garg,Garg,A 3-approximation for the minimum tree spanning k vertices,1996,https://ieeexplore.ieee.org/document/548489,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,"General k-MST, unrooted (Approximate)",,,,1,0,O(poly(V)),,,"[https://cse.hkust.edu.hk/faculty/arya/pub/kmst.pdf Arya, Ramesh (1998)]","Arya, Ramesh","Arya, Ramesh",A 2.5 Factor Approximation Algorithm for the k-MST Problem,1998,https://cse.hkust.edu.hk/faculty/arya/pub/kmst.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2.5,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,General k-MST (Approximate),,,,1,0,V^(O(1/eps)),,,"[https://link.springer.com/content/pdf/10.1007/s10107-005-0693-1.pdf Arora, Karakostas (2000)]","Arora, Karakostas","Arora, Karakostas",A 2 + ε approximation algorithm for the k-MST problem,2000,https://link.springer.com/content/pdf/10.1007/s10107-005-0693-1.pdf,,,,,,7,V: 7,2,V^(O(1/eps)),,"V: number of vertices
E: number of edges
k: min number of vertices to visit
eps: error parameter",V,https://link.springer.com/content/pdf/10.1007/s10107-005-0693-1.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2+eps,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,General k-MST (Approximate),,,,1,0,O(poly(V)),,,[https://dl.acm.org/doi/10.1145/1060590.1060650 Garg (2005)],Garg,Garg,Saving an epsilon: a 2-approximation for the k-MST problem in graphs,2005,https://dl.acm.org/doi/10.1145/1060590.1060650,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/math/9409222 Ravi, Sundaram, Marathe, Ravi, Rosenkrantz (1994)]","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz",Spanning trees short or small,1994,https://arxiv.org/abs/math/9409222,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(k^(1/4)),4,7.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/pdf/10.1145/195058.195218 Garg, Hochbaum (1994)]","Garg, Hochbaum","Garg, Hochbaum",An O(log k) approximation algorithm for the k minimum spanning tree problem in the plane,1994,https://dl.acm.org/doi/pdf/10.1145/195058.195218,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(log k),4,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/220279.220318 Mata, Mitchell (1995)]","Mata, Mitchell","Mata, Mitchell",Approximation algorithms for geometric tour and network design problems,1995,https://dl.acm.org/doi/10.1145/220279.220318,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,https://dl.acm.org/doi/10.1145/220279.220318,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(log k),4,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/225058.225143 Blum, Chalasani, Vempala (1995)]","Blum, Chalasani, Vempala","Blum, Chalasani, Vempala",A constant-factor approximation for the k-MST problem in the plane,1995,https://dl.acm.org/doi/10.1145/225058.225143,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(1),4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(V log V + 2^x*k*V log k),,,[https://www.sciencedirect.com/science/article/pii/S0925772196000211 Eppstein (1995)],Eppstein,Eppstein,Faster geometric k-point MST approximation,1995,https://www.sciencedirect.com/science/article/pii/S0925772196000211,,,,,,4,V: 4,3,O(V log V + 2^x*k*V log k),,"V: number of vertices
E: number of edges
k: min number of vertices to visit
x: any positive value ≤ k",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O((log k)/(log x)),1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(V(log V + k^(O(1/eps))),,,[https://www.sciencedirect.com/science/article/pii/S0925772196000211 Eppstein (1995)],Eppstein,Eppstein,Faster geometric k-point MST approximation,1995,https://www.sciencedirect.com/science/article/pii/S0925772196000211,,,,,,7,V: 7,2,O(V(log V + k^(O(1/eps))),,"V: number of vertices
E: number of edges
k: min number of vertices to visit
eps: error parameter",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,"O(min(V^15 k^2, V log V + V k^30)",,,[https://dl.acm.org/doi/pdf/10.5555/313852.314090 Mitchell (+ Eppstein 1995) (1996)],Mitchell (+ Eppstein 1995),Mitchell,Guillotine Subdivisions Approximate Polygonal Subdivisions: A Simple New Method for the Geometric k-MST Problem,1996,https://dl.acm.org/doi/pdf/10.5555/313852.314090,,,,,,7,V: 7,3,"O(min(V^15 k^2, V log V + V k^30)",,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: guillotine parameter",V,https://dl.acm.org/doi/pdf/10.5555/313852.314090,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2*sqrt(2),2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,"O(min(V^5 k^2, V log V + V k^10)",,,[https://dl.acm.org/doi/pdf/10.5555/313852.314090 Mitchell (+ Eppstein 1995) (1996)],Mitchell (+ Eppstein 1995),Mitchell,Guillotine Subdivisions Approximate Polygonal Subdivisions: A Simple New Method for the Geometric k-MST Problem,1996,https://dl.acm.org/doi/pdf/10.5555/313852.314090,,,,,,7,V: 7,3,"O(min(V^5 k^2, V log V + V k^10)",,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: guillotine parameter",V,https://dl.acm.org/doi/pdf/10.5555/313852.314090,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3*sqrt(2),2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,"V^(O((log V)^(d-2)*(log log V)^(min(1, d-2)))/eps^(d-1))",,,[https://ieeexplore.ieee.org/document/548458 Arora (1996)],Arora,Arora,Polynomial time approximation schemes for Euclidean TSP and other geometric problems,1996,https://ieeexplore.ieee.org/document/548458,,,,,,8,V: 8,2,"V^(O((log V)^(d-2)*(log log V)^(min(1, d-2)))/eps^(d-1))",,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
k: min number of vertices to visit
eps: error parameter",V,https://ieeexplore.ieee.org/document/548458,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(Vk (log V)^(O(c*sqrt(d))^(d-1))),,,[http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf Arora (1998)],Arora,Arora,Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems,1998,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,,,,,,5.01,V: 5.01,2.9,O(Vk (log V)^(O(c*sqrt(d))^(d-1))),,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
k: min number of vertices to visit
eps: error parameter",V,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,EPRAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(V^(d+1)k (log V)^(O(c*sqrt(d))^(d-1))),,,[http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf Arora [Derandomized] (1998)],Arora [Derandomized],Arora,Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems,1998,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,,,,,,7,V: 7,2.9,O(V^(d+1)k (log V)^(O(c*sqrt(d))^(d-1))),,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
k: min number of vertices to visit
eps: error parameter",V,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
14.1,k Minimum Spanning Tree (k-MST),1,0,0,Euclidean k-MST (Approximate),,,,1,0,O(V^(O(m)))?,,,[http://www.cs.haifa.ac.il/~golumbic/courses/seminar-2010approx/mitchell99.pdf Mitchell (1999)],Mitchell,Mitchell,"Guillotine Subdivisions Approximate Polygonal Subdivisions: A Simple Polynomial-Time Approximation Scheme for Geometric TSP, k-MST, and Related Problems",1999,http://www.cs.haifa.ac.il/~golumbic/courses/seminar-2010approx/mitchell99.pdf,,,,,,7,V: 7,2,O(V^(O(m)))?,,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: error/guillotine parameter; m = 2sqrt(2)/eps",V,http://www.cs.haifa.ac.il/~golumbic/courses/seminar-2010approx/mitchell99.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
15,Closest Pair Problem,0.001,1,0,"k-dimensional space, $l_m$ (or $l_\infty$) norm",,,,,,$O(n^{1+\log{p_1}/\log{p_2}}\log{n})$,,,[https://ieeexplore.ieee.org/abstract/document/8215599 ACPP1 (2017)],ACPP1,"Rajasekaran, Saha, Cai",Novel Exact and Approximate Algorithms for the Closest Pair Problem,2017,https://ieeexplore.ieee.org/abstract/document/8215599,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0.001,1,0,"k-dimensional space, $l_m$ (or $l_\infty$) norm",,,,,,,,,[https://ieeexplore.ieee.org/abstract/document/8215599 ACPP2 (2017)],ACPP2,"Rajasekaran, Saha, Cai",Novel Exact and Approximate Algorithms for the Closest Pair Problem,2017,https://ieeexplore.ieee.org/abstract/document/8215599,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,range closest-pair (RCP),,,,,,,,,[https://link.springer.com/article/10.1007/s00778-021-00680-7  (2022)],,"Zheng, Zhao, Weng, Nguyen, Liu, Jensen ",PM-LSH: a fast and accurate in-memory framework for high-dimensional approximate NN and closest pair search,2022,https://link.springer.com/article/10.1007/s00778-021-00680-7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0.001,1,0,,,,,,,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0925772120300481  (2020)],,"Xue, Li, Janardan",Approximate range closest-pair queries,2020,https://www.sciencedirect.com/science/article/abs/pii/S0925772120300481,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,1,0,"k-dimensional space, $l_m$ (or $l_\infty$) norm",,,,,0,,,,[https://dl.acm.org/doi/abs/10.1145/1806907.1806912  (2010)],,"Tao, Yi, Sheng, Kalnis",Efficient and accurate nearest neighbor and closest pair search in high-dimensional space,2010,https://dl.acm.org/doi/abs/10.1145/1806907.1806912,,,,,,4.5,n: 4.5,3,O((kn/B)^1.5),16,"k: number of dimensions
n: number points
B: number of words on each external memory page
assumes k=O(B)",n,,,I/O-model,words,,,,,,,,,,1,4,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://link.springer.com/chapter/10.1007/978-3-319-93040-4_13  (2018)],,"Cai, Rajasekaran, Zhang ",Efficient Approximate Algorithms for the Closest Pair Problem in High Dimensional Spaces,2018,https://link.springer.com/chapter/10.1007/978-3-319-93040-4_13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0169023X04001508  (2005)],,"Angiulli, Pizzuti",An approximate algorithm for top-k closest pairs join query in large high dimensional data,2005,https://www.sciencedirect.com/science/article/abs/pii/S0169023X04001508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://www.tandfonline.com/doi/abs/10.1080/23799927.2020.1862302  (2020)],,"Mesrikhani, Farshi, Iranfar",A progressive algorithm for the closest pair problem,2020,https://www.tandfonline.com/doi/abs/10.1080/23799927.2020.1862302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://link.springer.com/chapter/10.1007/978-3-540-27836-8_66  (2004)],,"Indyk, Lewenstein, Lipsky, Porat ",Closest Pair Problems in Very High Dimensions,2004,https://link.springer.com/chapter/10.1007/978-3-540-27836-8_66,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://dl.acm.org/doi/abs/10.1145/2728167  (2015)],,Valiant,"Finding Correlations in Subquadratic Time, with Applications to Learning Parities and the Closest Pair Problem",2015,https://dl.acm.org/doi/abs/10.1145/2728167,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://dl.acm.org/doi/abs/10.1145/177424.177621  (1994)],,"Kapoor, Smid",New techniques for exact and approximate dynamic closest-point problems,1994,https://dl.acm.org/doi/abs/10.1145/177424.177621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://www.sciencedirect.com/science/article/pii/S092577211200137X  (2014)],,"Kamousi, Chan, Suri",Closest pair and the post office problem for stochastic points,2014,https://www.sciencedirect.com/science/article/pii/S092577211200137X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,0,1,0,,,,,,,,,,[https://dl.acm.org/doi/abs/10.1145/335191.335414  (2000)],,"Corral, Manolopoulos,
Theodoridis, Vassilakopoulos",Closest pair queries in spatial databases,2000,https://dl.acm.org/doi/abs/10.1145/335191.335414,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,1,0,Weighted Undirected SSSP,,,,,,O(sqrt(V)/eps^2 log V log* V),,,[https://dl.acm.org/doi/abs/10.1145/129712.129785  (1992)],,"Klein, Subramanian",A parallel randomized approximation scheme for shortest paths,1992,https://dl.acm.org/doi/abs/10.1145/129712.129785,,,,,,2.5,V: 2.5,3,O(sqrt(V)/eps^2 log V log* V),6.101,"V: number of vertices
E: number of edges
eps: approximation parameter",V,https://dl.acm.org/doi/abs/10.1145/129712.129785,0,CREW PRAM?,words,,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,1,(E log V)/eps^2,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,,,,,,,2,,,Combinatorics
16,Shortest Path (Directed Graphs),1,1,0,Weighted Undirected SSSP,,,,,,O(poly(log V)),,,[https://dl.acm.org/doi/10.1145/331605.331610  (2000)],,Cohen,Polylog-time and near-linear work approximation scheme for undirected shortest paths,2000,https://dl.acm.org/doi/10.1145/331605.331610,,,,,,2,V: 2,2.9,O(poly(log V)),5,"V: number of vertices
E: number of edges
eps: approximation parameter",V,https://dl.acm.org/doi/abs/10.1145/3357713.3384268,0,CREW PRAM?,words,,,,,,,,1,Monte Carlo,1,1+O(1/(poly(log n))),1,1,0,multiplicative,no,n/a,factor off from optimal,0,1,O(E^(1+eps)/poly(log V)),0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,,,,,,,2,O(E^(1+eps)) work,,Combinatorics
16,Shortest Path (Directed Graphs),1,1,0,Weighted Undirected SSSP,,,,,,O(poly(log V)/eps^2),,,[https://dl.acm.org/doi/abs/10.1145/3357713.3384268  (2020)],,Li,Faster parallel algorithm for approximate shortest path,2020,https://dl.acm.org/doi/abs/10.1145/3357713.3384268,,,,,,2,V: 2,2.9,O(poly(log V)/eps^2),5,"V: number of vertices
E: number of edges
eps: approximation parameter",V,https://dl.acm.org/doi/abs/10.1145/3357713.3384268,0,CREW PRAM?,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,1,O(E poly(log V))?,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,,,,,,,2,,,Combinatorics
16,Shortest Path (Directed Graphs),0.001,1,0,Distributed Weighted Undirected SSSP,,,,,,O((V^(1/2 + 1/(2k)) + D) poly(log V)),,,[https://arxiv.org/abs/1210.5774  (2012)],,"Lenzen, Patt-Shamir",Fast Routing Table Construction Using Small Messages,2012,https://arxiv.org/abs/1210.5774,,,,,,3,V: 3,2.9,O((V^(1/2 + 1/(2k)) + D) poly(log V)),,"V: number of vertices
E: number of edges
D: unweighted diameter of graph
k: any positive integer",V,https://dl.acm.org/doi/abs/10.1145/2591796.2591850,0,Word RAM,words,,,,,,,,0,,1,8k*ceil(log(k+1))-1,4,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,,,,,,,2,,,Combinatorics
16,Shortest Path (Directed Graphs),0.001,1,0,Distributed Weighted Undirected SSSP,,,,,,O((V^(1/2)D^(1/4) + D) poly(log V)),,,[https://dl.acm.org/doi/abs/10.1145/2591796.2591850  (2014)],,Nanongkai,Distributed approximation algorithms for weighted shortest paths,2014,https://dl.acm.org/doi/abs/10.1145/2591796.2591850,,,,,,3,V: 3,2.9,O((V^(1/2)D^(1/4) + D) poly(log V)),,"V: number of vertices
E: number of edges
D: unweighted diameter of graph",V,https://dl.acm.org/doi/abs/10.1145/2591796.2591850,0,Word RAM,words,,,,,,,,0,,1,1+o(1),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, weighted, undirected, no FMM (Approximate)",,,,1,0,O(mt+nt^2)n^(64/t)(log n)+tn^(2+32/t)(log log n)),,,"[https://ieeexplore.ieee.org/document/366823 Awerbuch, Berger, Cohen, Peleg (1993)]","Awerbuch, Berger, Cohen, Peleg","Awerbuch, Berger, Cohen, Peleg",Near-linear cost sequential and distributed constructions of sparse neighborhood covers,1993,https://ieeexplore.ieee.org/document/366823,,,,,,5.01,n: 5.01,3,O(mt+nt^2)n^(64/t)(log n)+tn^(2+32/t)(log log n)),25.02,"$n$: number of vertices
$m$: number of edges
t: any even positive integer at most log(n)",n,https://ieeexplore.ieee.org/document/366823,0,Word RAM,words,,,,,,,,0,,1,t,2.6,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^(2+(2+eps)/(t+eps)*poly(log(n))),,,[https://ieeexplore.ieee.org/document/366822 Cohen (1993)],Cohen,Cohen,Fast algorithms for constructing t-spanners and paths with stretch t,1993,https://ieeexplore.ieee.org/document/366822,,,,,,5.01,n: 5.01,2.9,O(n^(2+(2+eps)/(t+eps))*poly(log(n))),25.02,"$n$: number of vertices
$m$: number of edges
eps: error parameter
t: any even positive integer at most log(n)",n,https://ieeexplore.ieee.org/document/366822,0,Word RAM,words,,,,,,,,1,Las Vegas,1,t + eps,2.6,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^(2+2(1+eps+log(m)/log(n))/(t+eps)*poly(log n)),,,[https://ieeexplore.ieee.org/document/366822 Cohen (1993)],Cohen,Cohen,Fast algorithms for constructing t-spanners and paths with stretch t,1993,https://ieeexplore.ieee.org/document/366822,,,,,,5.01,n: 5.01,2.9,O(n^(2+2(1+eps+log(m)/log(n))/(t+eps))*poly(log(n))),25.02,"$n$: number of vertices
$m$: number of edges
eps: error parameter
t: any even positive integer at most log(n)",n,https://ieeexplore.ieee.org/document/366822,0,Word RAM,words,,,,,,,,0,,1,t + eps,2.6,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, weighted, undirected, no FMM (Approximate)",,,,1,0,O(m^(2/3)n log n + n^2),,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-stacs05.pdf Baswana, Goyal, Sen (2009)]","Baswana, Goyal, Sen","Baswana, Goyal, Sen",All-Pairs Nearly 2-Approximate Shortest Paths in O(n^2 polylog n) Time,2009,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-stacs05.pdf,,,,,,5.33,n: 5.33,3,O(m^(2/3)n log n + n^2),20,"$n$: number of vertices
$m$: number of edges",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-stacs05.pdf,0,Word RAM,words,,,,,,,,1,Las Vegas,1,"(2, 1)",2.4,3,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^(3 - r) + n^(w(r))(1/eps)^(O(1)) log W) (currently O(n^(2.214)(1/eps)^(O(1)) log W)),,,"[https://arxiv.org/abs/2307.09258 Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos (2023)]","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos",Fast 2-Approximate All-Pairs Shortest Paths,2023,https://arxiv.org/abs/2307.09258,,,,,,5.21,n: 5.21,3,O(n^(3 - r) + n^(w(r))(1/eps)^(O(1)) log W) (currently O(n^(2.214)(1/eps)^(O(1)) log W)),25.3,"$n$: number of vertices
$m$: number of edges
$r$: any real in the interval $[0, 1]$
$w(r)$: exponent on runtime for multiplying $n\times n^r$ by $n^r\times n$ matrices
eps: error parameter
$W$: max weight of any edge",n,https://arxiv.org/abs/2307.09258,0,Word RAM,words,,,,,,,,1,Las Vegas,1,2 + eps,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2 (log n)^(3/2)),,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-stacs05.pdf Baswana, Goyal, Sen (2009)]","Baswana, Goyal, Sen","Baswana, Goyal, Sen",All-Pairs Nearly 2-Approximate Shortest Paths in O(n^2 polylog n) Time,2009,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-stacs05.pdf,,,,,,5.01,n: 5.01,3,O(n^2 (log n)^(3/2)),21.5,"$n$: number of vertices
$m$: number of edges",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-stacs05.pdf,0,Word RAM,words,,,,,,,,1,Las Vegas,1,"(2, 3)",2.4,3,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2.5 sqrt(log n)),,,"[http://i.stanford.edu/pub/cstr/reports/cs/tn/96/34/CS-TN-96-34.pdf Aingworth, Chekuri, Indyk, Motwani (1999)]","Aingworth, Chekuri, Indyk, Motwani","Aingworth, Chekuri, Indyk, Motwani",Fast Estimation of Diameter and Shortest Paths (without Matrix Multiplication),1999,http://i.stanford.edu/pub/cstr/reports/cs/tn/96/34/CS-TN-96-34.pdf,,,,,,5.5,n: 5.5,3,O(n^2.5 sqrt(log n)),26.55,"$n$: number of vertices
$m$: number of edges",n,http://i.stanford.edu/pub/cstr/reports/cs/tn/96/34/CS-TN-96-34.pdf,0,Word RAM,words,,,,,,,,0,,1,2,2,0,2,additive,no,n/a,additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(n^(3/2)m^(1/2), n^(7/3))*poly(log n))",,,"[https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf Dor, Halperin, Zwick [APASP_2] (2000)]","Dor, Halperin, Zwick [APASP_2]","Dor, Halperin, Zwick",All Pairs Almost Shortest Paths,2000,https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf,,,,,,5.33,n: 5.33,2.9,"O(min(n^(3/2)m^(1/2), n^(7/3))*poly(log n))",25,"$n$: number of vertices
$m$: number of edges",n,https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf,0,Word RAM,words,,,,,,,,0,,1,2,2,0,2,additive,no,n/a,additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(n^(2 - 2/(t+2))m^(2/(t+2)), n^(2 + 2/(3t-2)))*poly(log n))",,,"[https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf Dor, Halperin, Zwick [APASP_k] (2000)]","Dor, Halperin, Zwick [APASP_k]","Dor, Halperin, Zwick",All Pairs Almost Shortest Paths,2000,https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf,,,,,,5.01,n: 5.01,2.9,"O(min(n^(2 - 2/(t+2))m^(2/(t+2)), n^(2 + 2/(3t-2)))*poly(log n))",25.02,"$n$: number of vertices
$m$: number of edges
t: any even positive integer at most log(n)",n,https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf,0,Word RAM,words,,,,,,,,0,,1,t,2.6,0,3,additive,yes,n/a,additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2 poly(log n)),,,"[https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf Dor, Halperin, Zwick [APASP_infty] (2000)]","Dor, Halperin, Zwick [APASP_infty]","Dor, Halperin, Zwick",All Pairs Almost Shortest Paths,2000,https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf,,,,,,5.01,n: 5.01,2.9,O(n^2 poly(log n)),25,"$n$: number of vertices
$m$: number of edges",n,https://theory.stanford.edu/~virgi/cs267/papers/dorhalperinzwick.pdf,0,Word RAM,words,,,,,,,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(n^(3/2)m^(1/2), n^(2.29))*poly(log n))",,,"[https://drops.dagstuhl.de/opus/volltexte/2022/16391/pdf/LIPIcs-ICALP-2022-50.pdf Deng, Kirkpatrick, Rong, V. Williams, Zhong (2022)]","Deng, Kirkpatrick, Rong, V. Williams, Zhong","Deng, Kirkpatrick, Rong, V. Williams, Zhong",New Additive Approximations for Shortest Paths and Cycles,2022,https://drops.dagstuhl.de/opus/volltexte/2022/16391/pdf/LIPIcs-ICALP-2022-50.pdf,,,,,,5.29,n: 5.29,2.9,"O(min(n^(3/2)m^(1/2), n^(2.29))*poly(log n))",25,"$n$: number of vertices
$m$: number of edges",n,https://drops.dagstuhl.de/opus/volltexte/2022/16391/pdf/LIPIcs-ICALP-2022-50.pdf,0,Word RAM,words,,,,,,,,1,Las Vegas,1,2,2,0,2,additive,no,n/a,additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(n^(1/2)m, n^(9/4))*poly(log n))",,,[https://dl.acm.org/doi/abs/10.1145/3564246.3585197 Roditty (2023)],Roditty,Roditty,New Algorithms for All Pairs Approximate Shortest Paths,2023,https://dl.acm.org/doi/abs/10.1145/3564246.3585197,,,,,,5.25,n: 5.25,2.9,"O(min(n^(1/2)m, n^(9/4))*poly(log n))",16.24,"$n$: number of vertices
$m$: number of edges",n,https://dl.acm.org/doi/abs/10.1145/3564246.3585197,0,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, with FMM (Approximate)",,,,1,0,O((n^(2.5 - r) + n^(w(r))) poly(log n)) (currently O(n^(2.032))),,,"[https://arxiv.org/abs/2307.09258 Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos [Theorem 1.3] (2023)]","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos [Theorem 1.3]","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos",Fast 2-Approximate All-Pairs Shortest Paths,2023,https://arxiv.org/abs/2307.09258,,,,,,5.04,n: 5.04,2.9,O((n^(2.5 - r) + n^(w(r))) poly(log n)) (currently O(n^(2.032))),25.2,"$n$: number of vertices
$m$: number of edges
$r$: any real in the interval $[0, 1]$
$w(r)$: exponent on runtime for multiplying $n\times n^r$ by $n^r\times n$ matrices",n,https://arxiv.org/abs/2307.09258,0,Word RAM,words,,,,,,,,1,Las Vegas,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"APSP, unweighted, undirected, with FMM (Approximate)",,,,1,0,O((n^(2+2(1-r)/(k+2)) + n^(w(r))/eps) poly(log n)),,,"[https://arxiv.org/abs/2307.09258 Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos [Theorem 1.7] (2023)]","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos [Theorem 1.7]","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos",Fast 2-Approximate All-Pairs Shortest Paths,2023,https://arxiv.org/abs/2307.09258,,,,,,7,n: 7,2.9,O((n^(2+2(1-r)/(k+2)) + n^(w(r))/eps) poly(log n)),400,"$n$: number of vertices
$m$: number of edges
$r$: any real in the interval $[0, 1]$
$w(r)$: exponent on runtime for multiplying $n\times n^r$ by $n^r\times n$ matrices
$k$: any positive even integer
eps: error parameter",n,https://arxiv.org/abs/2307.09258,0,Word RAM,words,,,,,,,,0,,1,"(1+eps, k)",2,2,2,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^(3/2)m^(1/2) log n + q),,,"[https://dl.acm.org/doi/pdf/10.5555/314161.314190 Cohen, Zwick [STRETCH_2] (2001)]","Cohen, Zwick [STRETCH_2]","Cohen, Zwick",All-Pairs Small-Stretch Paths,2001,https://dl.acm.org/doi/pdf/10.5555/314161.314190,,,,,,5.5,n: 5.5,3,O(n^(3/2)m^(1/2) log n + q),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,5,n: 5,O(n^2),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,0,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^(7/3) log n + q),,,"[https://dl.acm.org/doi/pdf/10.5555/314161.314190 Cohen, Zwick [STRETCH_7/3] (2001)]","Cohen, Zwick [STRETCH_7/3]","Cohen, Zwick",All-Pairs Small-Stretch Paths,2001,https://dl.acm.org/doi/pdf/10.5555/314161.314190,,,,,,5.33,n: 5.33,3,O(n^(7/3) log n + q),25.51,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,5,n: 5,O(n^2),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,0,,0,,1,7/3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2 log n + q),,,"[https://dl.acm.org/doi/pdf/10.5555/314161.314190 Cohen, Zwick [STRETCH_3] (2001)]","Cohen, Zwick [STRETCH_3]","Cohen, Zwick",All-Pairs Small-Stretch Paths,2001,https://dl.acm.org/doi/pdf/10.5555/314161.314190,,,,,,5.01,n: 5.01,3,O(n^2 log n + q),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,5,n: 5,O(n^2),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,0,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(kmn^(1/k) + qk),,,"[https://www.cs.jhu.edu/~baruch/teaching/600.427/Papers/oracle-STOC-try.pdf Thorup, Zwick (2005)]","Thorup, Zwick","Thorup, Zwick",Approximate Distance Oracles,2005,https://www.cs.jhu.edu/~baruch/teaching/600.427/Papers/oracle-STOC-try.pdf,,,,,,5.01,n: 5.01,3,O(kmn^(1/k) + qk),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $1$ and less than $\log n$",n,https://www.cs.jhu.edu/~baruch/teaching/600.427/Papers/oracle-STOC-try.pdf,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://www.cs.jhu.edu/~baruch/teaching/600.427/Papers/oracle-STOC-try.pdf,0,1,,0,,1,2k-1,2.6,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2 log n + q),,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf Baswana, Kavitha [Theorem 3.3] (2010)]","Baswana, Kavitha [Theorem 3.3]","Baswana, Kavitha",Faster Algorithms for All-Pairs Approximate Shortest Paths in Undirected Graphs,2010,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,,,,,,5.01,n: 5.01,3,O(n^2 log n + q),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$W$: max weight of any edge",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,5,n: 5,O(n^2),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,1,,0,,1,"(2, W)",2.4,3,3,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(m*sqrt(n), kn^(2+(1/2k))) + qk)",,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf Baswana, Kavitha [Theorem 4.3] (2010)]","Baswana, Kavitha [Theorem 4.3]","Baswana, Kavitha",Faster Algorithms for All-Pairs Approximate Shortest Paths in Undirected Graphs,2010,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,,,,,,5.01,n: 5.01,3,"O(min(m*sqrt(n), kn^(2+(1/2k))) + qk)",21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $1$ and less than $\log n$",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,4.5,n: 4.5,O(n^(3/2)),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,1,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(n^2, kmn^(1/k)) + qk)",,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf Baswana, Kavitha [Theorem 6.6] (2010)]","Baswana, Kavitha [Theorem 6.6]","Baswana, Kavitha",Faster Algorithms for All-Pairs Approximate Shortest Paths in Undirected Graphs,2010,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,,,,,,5.01,n: 5.01,3,"O(min(n^2, kmn^(1/k)) + qk)",21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $1$ and less than $\log n$",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,1,,0,,1,2k-1,2.6,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O((m*sqrt(n) + n^2) log n + q),,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf Baswana, Kavitha [Algorithm 9] (2010)]","Baswana, Kavitha [Algorithm 9]","Baswana, Kavitha",Faster Algorithms for All-Pairs Approximate Shortest Paths in Undirected Graphs,2010,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,,,,,,5.5,n: 5.5,3,O((m*sqrt(n) + n^2) log n + q),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,5,n: 5,O(n^2),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,1,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O((m^(2/3)*n + n^2) log n + q),,,"[https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf Baswana, Kavitha [Algorithm 10] (2010)]","Baswana, Kavitha [Algorithm 10]","Baswana, Kavitha",Faster Algorithms for All-Pairs Approximate Shortest Paths in Undirected Graphs,2010,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,,,,,,5.33,n: 5.33,3,O((m^(2/3)*n + n^2) log n + q),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,Word RAM,words,5,n: 5,O(n^2),https://www.cse.iitk.ac.in/users/sbaswana/Papers-published/journal-focs06.pdf,0,1,,0,,1,7/3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),1,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(m^(1/3)n^(4/3) + q)?,,,"[https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf Patrascu, Roditty (2010)]","Patrascu, Roditty","Patrascu, Roditty",Distance Oracles Beyond the Thorup–Zwick Bound,2010,https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf,,,,,,5,n: 5,3,O(m^(1/3)n^(4/3) + q)?,20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf,0,Word RAM,words,5,n: 5,O(m^(1/3)n^(4/3)),https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf,0,1,,1,Las Vegas,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(km+kn^(1+1/sqrt(k)+eps) + qk),,,[https://arxiv.org/abs/1109.4156 Wulff-Nilsen [Theorem 1] (2012)],Wulff-Nilsen [Theorem 1],Wulff-Nilsen,Approximate Distance Oracles with Improved Preprocessing Time,2012,https://arxiv.org/abs/1109.4156,,,,,,5,n: 5,3,O(km+kn^(1+1/sqrt(k)+eps) + qk),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $1$
$eps$: any positive constant",n,https://arxiv.org/abs/1109.4156,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://arxiv.org/abs/1109.4156,0,1,,0,,1,(2k-1)*ceil(1/eps),4,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(m*sqrt(k)+kn^(1+c/sqrt(k)) + qk),,,[https://arxiv.org/abs/1109.4156 Wulff-Nilsen [Theorem 3] (2012)],Wulff-Nilsen [Theorem 3],Wulff-Nilsen,Approximate Distance Oracles with Improved Preprocessing Time,2012,https://arxiv.org/abs/1109.4156,,,,,,5,n: 5,3,O(m*sqrt(k)+kn^(1+c/sqrt(k)) + qk),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $1$
$c$: a universal constant",n,https://arxiv.org/abs/1109.4156,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://arxiv.org/abs/1109.4156,0,1,,0,,1,2k-1,2.6,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,"O(min(kmn^(1/k), m*sqrt(k)+kn^(1+c/sqrt(k))) + q log k)",,,[https://arxiv.org/abs/1202.2336 Wulff-Nilsen [Theorem 1] (2013)],Wulff-Nilsen [Theorem 1],Wulff-Nilsen,Approximate Distance Oracles with Improved Query Time,2013,https://arxiv.org/abs/1202.2336,,,,,,5,n: 5,3,"O(min(kmn^(1/k), m*sqrt(k)+kn^(1+c/sqrt(k))) + q log k)",20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $1$
$c$: a universal constant",n,https://arxiv.org/abs/1202.2336,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://arxiv.org/abs/1202.2336,0,1,,0,,1,2k-1,2.6,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(kmn^(1/k) + kn^(1+1/k) log n + mn^(1/(Ck))(log n)^3 + (q log C)/eps),,,[https://arxiv.org/abs/1202.2336 Wulff-Nilsen [Theorem 3] (2013)],Wulff-Nilsen [Theorem 3],Wulff-Nilsen,Approximate Distance Oracles with Improved Query Time,2013,https://arxiv.org/abs/1202.2336,,,,,,5.01,n: 5.01,3,O(kmn^(1/k) + kn^(1+1/k) log n + mn^(1/(Ck))(log n)^3 + (q log C)/eps),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $2$
$C$: any positive integer greater than $1$
$eps$: any positive constant less than or equal to $1$",n,https://arxiv.org/abs/1202.2336,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://arxiv.org/abs/1202.2336,0,1,,0,,1,(2+eps)k,2.6,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(kmn^(1/k) + kn^(1+1/k) log n + mn^(1/(Ck))(log n)^3 + q),,,[https://arxiv.org/abs/1305.3314 Chechik (2014)],Chechik,Chechik,Approximate Distance Oracle with Constant Query Time,2014,https://arxiv.org/abs/1305.3314,,,,,,5.01,n: 5.01,3,O(kmn^(1/k) + kn^(1+1/k) log n + mn^(1/(Ck))(log n)^3 + q),21,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $2$
$C$: any positive integer greater than $1$",n,https://arxiv.org/abs/1305.3314,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://arxiv.org/abs/1305.3314,0,1,,0,,1,2k-1,2.6,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2 + m*sqrt(n) + q),,,[https://u.cs.biu.ac.il/~rodittl/p1-chechik.pdf Chechik (2015)],Chechik,Chechik,Approximate Distance Oracles with Improved Bounds,2015,https://u.cs.biu.ac.il/~rodittl/p1-chechik.pdf,,,,,,5.5,n: 5.5,3,O(n^2 + m*sqrt(n) + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://u.cs.biu.ac.il/~rodittl/p1-chechik.pdf,0,Word RAM,words,4.01,n: 4.01,O(n^(1+1/k)),https://u.cs.biu.ac.il/~rodittl/p1-chechik.pdf,0,1,,0,,1,2k-1,2.6,4.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, weighted, undirected, no FMM (Approximate)",,,,1,0,O(mn^(2/3) poly(log n) + q),,,"[https://arxiv.org/abs/2307.09258 Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos (2023)]","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos","Dory, Forster, Kirkpatrick, Nazari, V. Williams, de Vos",Fast 2-Approximate All-Pairs Shortest Paths,2023,https://arxiv.org/abs/2307.09258,,,,,,5.66,n: 5.66,2.9,O(mn^(2/3) poly(log n) + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://arxiv.org/abs/2307.09258,0,Word RAM,words,5,n: 5,O(mn^(2/3) poly(log n)),https://arxiv.org/abs/2307.09258,0,1,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(mn^(2/3) + q),,,"[https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf Patrascu, Roditty (2010)]","Patrascu, Roditty","Patrascu, Roditty",Distance Oracles Beyond the Thorup–Zwick Bound,2010,https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf,,,,,,5.66,n: 5.66,3,O(mn^(2/3) + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf,0,Word RAM,words,4.66,n: 4.66,O(n^(5/3)),https://theory.stanford.edu/~virgi/cs267/papers/pr-grow.pdf,0,1,,1,Las Vegas,1,"(2, 1)",2.4,3,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(m + n^(23/12) + q),,,"[https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50 Baswana, Gaur, Sen, Upadhyay [Theorem 4] (2008)]","Baswana, Gaur, Sen, Upadhyay [Theorem 4]","Baswana, Gaur, Sen, Upadhyay",Distance Oracles for Unweighted Graphs: Breaking the Quadratic Barrier with Constant Additive Error,2008,https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50,,,,,,5,n: 5,3,O(m + n^(23/12) + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50,0,Word RAM,words,4.5,n: 4.5,O(n^(3/2)),https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50,0,1,,1,Las Vegas,1,"(3, 8)",2.4,4,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(kn^(3/2 + 1/(2k) + 1/(2k-2)) + m + q),,,"[https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50 Baswana, Gaur, Sen, Upadhyay [Theorem 5] (2008)]","Baswana, Gaur, Sen, Upadhyay [Theorem 5]","Baswana, Gaur, Sen, Upadhyay",Distance Oracles for Unweighted Graphs: Breaking the Quadratic Barrier with Constant Additive Error,2008,https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50,,,,,,5,n: 5,3,O(kn^(3/2 + 1/(2k) + 1/(2k-2)) + m + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer greater than $2$",n,https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50,0,Word RAM,words,4.01,n: 4.01,O(kn^(1+1/k)),https://link.springer.com/chapter/10.1007/978-3-540-70575-8_50,0,1,,0,,1,"(2k-1, 2)",2.6,4.5,2,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(n^2 poly(log n) + q),,,[https://drops.dagstuhl.de/opus/volltexte/2016/6335/pdf/LIPIcs-ICALP-2016-55.pdf Sommer (2016)],Sommer,Sommer,All-Pairs Approximate Shortest Paths and Distance Oracle Preprocessing,2016,https://drops.dagstuhl.de/opus/volltexte/2016/6335/pdf/LIPIcs-ICALP-2016-55.pdf,,,,,,5.01,n: 5.01,2.9,O(n^2 poly(log n) + q),25,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://drops.dagstuhl.de/opus/volltexte/2016/6335/pdf/LIPIcs-ICALP-2016-55.pdf,0,Word RAM,words,4.66,n: 4.66,O(n^(5/3) poly(log n)),https://drops.dagstuhl.de/opus/volltexte/2016/6335/pdf/LIPIcs-ICALP-2016-55.pdf,0,1,,0,,1,"(2, 1)",2.4,3,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(m poly(log n) + n^(2-Omega(eps)) + q/eps),,,"[https://dl.acm.org/doi/pdf/10.5555/3381089.3381090 Akav, Roditty (2020)]","Akav, Roditty","Akav, Roditty",An almost 2-approximation for all-pairs of shortest paths in subquadratic time,2020,https://dl.acm.org/doi/pdf/10.5555/3381089.3381090,,,,,,5.01,n: 5.01,2.9,O(m poly(log n) + n^(2-Omega(eps)) + q/eps),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://dl.acm.org/doi/pdf/10.5555/3381089.3381090,0,Word RAM,words,4.83,n: 4.83,O(n^(11/6) poly(log n)),https://dl.acm.org/doi/pdf/10.5555/3381089.3381090,0,1,,0,,1,"(2(1+eps), 5)",2.4,3.01,2,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O((m + n^(1.987)) poly(log n) + q),,,"[https://epubs.siam.org/doi/10.1137/1.9781611977073.26 Chechik, Zhang [Theorem 1.1] (2022)]","Chechik, Zhang [Theorem 1.1]","Chechik, Zhang",Nearly 2-Approximate Distance Oracles in Subquadratic Time,2022,https://epubs.siam.org/doi/10.1137/1.9781611977073.26,,,,,,5.01,n: 5.01,2.9,O((m + n^(1.987)) poly(log n) + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)",n,https://epubs.siam.org/doi/10.1137/1.9781611977073.26,0,Word RAM,words,4.66,n: 4.66,O(n^(5/3) poly(log n)),https://epubs.siam.org/doi/10.1137/1.9781611977073.26,0,1,,1,Las Vegas,1,"(2, 3)",2.4,3,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O((m + n^(1.75 + eps)) poly(log n) + q/eps),,,"[https://epubs.siam.org/doi/10.1137/1.9781611977073.26 Chechik, Zhang [Theorem 1.2] (2022)]","Chechik, Zhang [Theorem 1.2]","Chechik, Zhang",Nearly 2-Approximate Distance Oracles in Subquadratic Time,2022,https://epubs.siam.org/doi/10.1137/1.9781611977073.26,,,,,,5.01,n: 5.01,2.9,O((m + n^(1.75 + eps)) poly(log n) + q/eps),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$eps$: any constant in the interval $(0, 1)$",n,https://epubs.siam.org/doi/10.1137/1.9781611977073.26,0,Word RAM,words,4.66,n: 4.66,O(n^(5/3) poly(log n)),https://epubs.siam.org/doi/10.1137/1.9781611977073.26,0,1,,0,,1,"(2, O(1/eps))",2.4,3,1.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, unweighted, undirected, no FMM (Approximate)",,,,1,0,O((m + n^(5/3 + eps)) poly(log n) + q),,,"[https://epubs.siam.org/doi/10.1137/1.9781611977073.26 Chechik, Zhang [Theorem 1.3] (2022)]","Chechik, Zhang [Theorem 1.3]","Chechik, Zhang",Nearly 2-Approximate Distance Oracles in Subquadratic Time,2022,https://epubs.siam.org/doi/10.1137/1.9781611977073.26,,,,,,5.01,n: 5.01,2.9,O((m + n^(5/3 + eps)) poly(log n) + q),20,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$eps$: any constant in the interval $(0, 1)$",n,https://epubs.siam.org/doi/10.1137/1.9781611977073.26,0,Word RAM,words,4.66,n: 4.66,O(n^(5/3) poly(log n)),https://epubs.siam.org/doi/10.1137/1.9781611977073.26,0,1,,0,,1,"(2 + eps, 2^(O(1/eps)))",4,3.01,1.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, Path-Reporting, weighted, undirected, no FMM (Approximate)",,,,1,0,O(tm(log Delta)/(log n) + q(n + log(t(log Delta)/(log n)))),,,"[https://arxiv.org/abs/1410.0768 Elkin, Neiman, Wulff-Nilsen [Theorem 2] (2016)]","Elkin, Neiman, Wulff-Nilsen [Theorem 2]","Elkin, Neiman, Wulff-Nilsen",Space-Efficient Path-Reporting Approximate Distance Oracles,2016,https://arxiv.org/abs/1410.0768,,,,,,6,n: 6,3,O(tm(log Delta)/(log n) + q(n + log(t(log Delta)/(log n)))),30,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$\Delta$: diameter of graph
$t$: any positive integer",n,https://arxiv.org/abs/1410.0768,0,Word RAM,words,3,n: 3,O(tn(log Delta)/(log n)),https://arxiv.org/abs/1410.0768,0,1,,0,,1,O(sqrt(t) * n^(2/sqrt(t))),4,7.01,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, Path-Reporting, weighted, undirected, no FMM (Approximate)",,,,1,0,O(mn poly(log n) + q log log n),,,"[https://arxiv.org/abs/1506.08392 Elkin, Pettie [Theorem 6.6] (2016)]","Elkin, Pettie [Theorem 6.6]","Elkin, Pettie",A Linear-Size Logarithmic Stretch Path-Reporting Distance Oracle for General Graphs,2016,https://arxiv.org/abs/1506.08392,,,,,,6.01,n: 6.01,3,O(mn poly(log n) + q log log n),25,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$h$: any positive integer",n,https://arxiv.org/abs/1506.08392,0,Word RAM,words,3.01,n: 3.01,O(n log log n) expected,https://arxiv.org/abs/1506.08392,0,1,,1,Las Vegas,1,O((log n)^((log 7)/(log(4/3)))),4,7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, Path-Reporting, weighted, undirected, no FMM (Approximate)",,,,1,0,O(mn poly(log n) + qn^(eps + 1/k)),,,"[https://arxiv.org/abs/1506.08392 Elkin, Pettie [Theorem 6.7] (2016)]","Elkin, Pettie [Theorem 6.7]","Elkin, Pettie",A Linear-Size Logarithmic Stretch Path-Reporting Distance Oracle for General Graphs,2016,https://arxiv.org/abs/1506.08392,,,,,,6.01,n: 6.01,2.9,O(mn poly(log n) + qn^(eps + 1/k)),25.02,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer between $(\log n)/(\log \log n)$ and $\log n$
$eps$: any positive constant",n,https://arxiv.org/abs/1506.08392,0,Word RAM,words,4.01,n: 4.01,O(n^(1+1/k)),https://arxiv.org/abs/1506.08392,0,1,,1,Las Vegas,1,O(k),4,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, Path-Reporting, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(tmn^(1/t) + qn),,,"[https://arxiv.org/abs/1410.0768 Elkin, Neiman, Wulff-Nilsen [Theorem 3] (2016)]","Elkin, Neiman, Wulff-Nilsen [Theorem 3]","Elkin, Neiman, Wulff-Nilsen",Space-Efficient Path-Reporting Approximate Distance Oracles,2016,https://arxiv.org/abs/1410.0768,,,,,,6,n: 6,3,O(tmn^(1/t) + qn),30,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k, t, p$: any positive integers",n,https://arxiv.org/abs/1410.0768,0,Word RAM,words,4.01,n: 4.01,O(kn + tn^(1+1/t)/p),https://arxiv.org/abs/1410.0768,0,1,,0,,1,"(O(tkn^(1/k)), O(pkn^(1/k)))",4,7.01,4.01,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
17,All-Pairs Shortest Paths (APSP),2,1,0,"Approximate Distance Oracle, Path-Reporting, unweighted, undirected, no FMM (Approximate)",,,,1,0,O(k^(O(log log k))n^(2+1/k) + qn^(eps)),,,"[https://arxiv.org/abs/1506.08392 Elkin, Pettie [Theorem 6.8] (2016)]","Elkin, Pettie [Theorem 6.8]","Elkin, Pettie",A Linear-Size Logarithmic Stretch Path-Reporting Distance Oracle for General Graphs,2016,https://arxiv.org/abs/1506.08392,,,,,,5.01,n: 5.01,3,O(k^(O(log log k))n^(2+1/k) + qn^(eps)),25.02,"$n$: number of vertices
$m$: number of edges
$q$: number of queries (if for APSP, then $q=O(n^2)$)
$k$: any positive integer
$eps$: any positive constant",n,https://arxiv.org/abs/1506.08392,0,Word RAM,words,4.01,n: 4.01,O(k^(O(log log k))n^(1+1/k)),https://arxiv.org/abs/1506.08392,0,1,,1,Las Vegas,1,"(O(1), k^(O(log log k)))",4,4,2,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices 
(or nodes) in a graph such that the sum of the weights of
 its constituent edges is minimized.",,,"V:E
0.5:1",,,,,,,,,,,,,,,,2,,,Combinatorics
20,LU Decomposition,1,1,0,Approximate Rectangular Matrix LU Decomposition,211,,,1,0,O(l^2m+k^3+k^2n),,,[https://www.sciencedirect.com/science/article/pii/S1063520316300069 Randomized LU Decomposition (2018)],Randomized LU Decomposition,"Shabat, Shmueli, Aizenbud, Averbuch",Randomized LU decomposition,2018,https://www.sciencedirect.com/science/article/pii/S1063520316300069,,,,0,0,4.5,mn: 4.5,3,O(l^2m+k^3+k^2n),16,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$l$: number of columns chosen to use in the decomposition ($l \geq k$)
$k$: desired rank of decomposition
epsilon: error requirement",mn,,0,Word RAM,words,3,"n: 3,
m: 3,
l: 3,
mn: 3",$\tilde{O}(nl + ml)$,Derived: Two intermediate auxiliary matrices of sizes $n \times l$ and $m \times l$ for the input matrix of size $m \times n$,1,0,,1,Monte Carlo,1,O(k(n-k)sqrt(nl)*sigma_(k+1)) where sigma_(k+1) is the (k+1)th singular value,4,0,7,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"lower–upper (LU) decomposition or factorization factors a matrix as the product
 of a lower triangular matrix and an upper triangular matrix.",,,,,,,,,,1000000000,1,,,,,,,,3,There are 4 different algorithms in this paper,,Numerical Analysis
20,LU Decomposition,1,1,0,Approximate Rectangular Matrix LU Decomposition,,,,1,0,O(mn*log(l)+kl(m+n)+k^2(m+k)),,,[https://www.sciencedirect.com/science/article/pii/S1063520316300069 Randomized LU Decomposition (2018)],Randomized LU Decomposition,"Shabat, Shmueli, Aizenbud, Averbuch",Randomized LU decomposition,2018,https://www.sciencedirect.com/science/article/pii/S1063520316300069,,,,0,0,4.5,mn: 4.5,3,O(mn*log(l)+kl(m+n)+k^2(m+k)),16,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$l$: number of columns chosen to use in the decomposition ($l \geq k$)
$k$: desired rank of decomposition
epsilon: error requirement",mn,,0,Word RAM,words,,,,,1,0,,1,Monte Carlo,1,O((k(n-k)/sqrt(l) + sqrt(nk(n-k)/l))*sigma_(k+1)) where sigma_(k+1) is the (k+1)th singular value,4,0,7,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"lower–upper (LU) decomposition or factorization factors a matrix as the product
 of a lower triangular matrix and an upper triangular matrix.",,,,,,,,,,1000000000,1,,,,,,,,3,There are 4 different algorithms in this paper,,Numerical Analysis
20,LU Decomposition,1,1,0,Approximate Rectangular Matrix LU Decomposition,,,,1,0,O(nnz + mk_1^2 + nk_2^2 + m l_1 log(k_1) + n l_2 log(k_2) + k_1 l_2 log(k_2)),,,[https://www.sciencedirect.com/science/article/pii/S0898122116305260 Randomized LU decomposition using sparse projections (2016)],Randomized LU decomposition using sparse projections,"Shabat, Aizenbud, Averbuch",Randomized LU decomposition using sparse projections,2016,https://www.sciencedirect.com/science/article/pii/S0898122116305260,,,,,,4.5,mn: 4.5,3,O(nnz + mk_1^2 + nk_2^2 + m l_1 log(k_1) + n l_2 log(k_2) + k_1 l_2 log(k_2)),16,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$l_1$: number of rows in first embedding matrix 
$l_2$: number of rows in second embedding matrix 
$k_1$: number of rows in first projection matrix 
$k_2$: number of rows in second projection matrix
$k_1 < l_1$, $k_2 < l_2$, $k_1 < k_2$",mn,,0,Word RAM,words,,"n: 3
m: 3
l_2: 3
",O(m l_2 + l_1 n),,1,0,0,1,Monte Carlo,1,"O(sqrt{sum_{i=0}^{min(m,n)} sigma_i^2})",4,0,5,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"lower–upper (LU) decomposition or factorization factors a matrix as the product
 of a lower triangular matrix and an upper triangular matrix.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
20,LU Decomposition,0.001,1,0,Approximate Rectangular Matrix LU Decomposition,,,,1,0,O(s * (m+n) * i),,,[https://epubs.siam.org/doi/epdf/10.1137/140968896 Approximate Rectangular Matrix LU Decomposition (2015)],Approximate Rectangular Matrix LU Decomposition,"Chow, Patel",Approximate Rectangular Matrix LU Decomposition,2015,https://epubs.siam.org/doi/epdf/10.1137/140968896,,,,,,5,mn: 5,3,"O(s * (m+n) * min(m,n))",,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$s$: desired number of nonzero entries in factorization
$i$: number of iterations",mn,,0,Word RAM,words,,s:3,O(s),,1,0,0,0,,1,,,,,additive,yes,,Magnitude of error (from obtained solution to real solution),0,1,up to s,0,0,,"lower–upper (LU) decomposition or factorization factors a matrix as the product
 of a lower triangular matrix and an upper triangular matrix.",,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
20,LU Decomposition,0,1,0,Approximate Rectangular Matrix LU Decomposition,,,,,,,,,,,,Approximate Rectangular Matrix LU Decomposition,2001,https://epubs.siam.org/doi/abs/10.1137/S0895479899354251,,,,,,,,,,,,mn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,LU Decomposition,0,1,0,Approximate Rectangular Matrix LU Decomposition,,,,,,,,,,,,Single-pass randomized algorithms for LU decomposition☆,2020,https://www.sciencedirect.com/science/article/abs/pii/S0024379520301051,,,,,,,,,,,,mn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
20.1,Singular Value Decomposition,1,0,0,Approximate Rectangular Matrix SVD,,,,1,0,O(mn*log(l)+l^2(m+n)),,,"[http://www.cvc.yale.edu/publications/techreports/tr1380.pdf Woolfe, Liberty, Rokhlin, Tygert [Section 5.2] (2007)]","Woolfe, Liberty, Rokhlin, Tygert [Section 5.2]","Woolfe, Liberty, Rokhlin, Tygert",,2007,http://www.cvc.yale.edu/publications/techreports/tr1380.pdf,,,,0,0,4.5,mn: 4.5,3,O(mn*log(l)+l^2(m+n)),,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$l$: number of columns chosen to use in the decomposition ($l \geq k$)
$k$: desired rank of decomposition
epsilon: error requirement",mn,,0,Word RAM,words,,,,,1,0,,1,Monte Carlo,1,O(sqrt(ml)*sigma_(k+1)) where sigma_(k+1) is the (k+1)th singular value,4,0,5,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
20.1,Singular Value Decomposition,1,0,0,Approximate Rectangular Matrix SVD,,,,1,0,O(mn*log(l)+lkn*log(n)+k^2m),,,"[http://www.cvc.yale.edu/publications/techreports/tr1380.pdf Woolfe, Liberty, Rokhlin, Tygert [Section 5.3] (2007)]","Woolfe, Liberty, Rokhlin, Tygert [Section 5.3]","Woolfe, Liberty, Rokhlin, Tygert",A fast randomized algorithm for the approximation of matrices — preliminary report,2007,http://www.cvc.yale.edu/publications/techreports/tr1380.pdf,,,,0,0,4.5,mn: 4.5,3,O(mn*log(l)+lkn*log(n)+k^2m),,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$l$: number of columns chosen to use in the decomposition ($l \geq k$)
$k$: desired rank of decomposition
epsilon: error requirement",mn,,0,Word RAM,words,,,,,1,0,,1,Monte Carlo,1,O(sqrt(klmn)*sigma_(k+1)) where sigma_(k+1) is the (k+1)th singular value,4,0,6,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Numerical Analysis
22,String Search,0.001,1,0,,,,,1,0,O(nk \lceil m/w \rceil),,,"[https://dl.acm.org/doi/pdf/10.1145/135239.135244 Wu and Manber, Fuzzy String Matching (1992)]","Wu and Manber, Fuzzy String Matching","Wu, Manber",Fast Text Searching Allowing Errors,1992,https://dl.acm.org/doi/pdf/10.1145/135239.135244,,,,,,5,m+n: 5,3,O(nk \lceil m/w \rceil),20,"m: pattern length
n: text length
k: allowable errors
w: word size
s: alphabet size",m+n,,,not mentioned,,,"m: 3,
s: 3,
k: 3,
n: 3",O(ms +  k \lceil m/w \rceil),https://dl.acm.org/doi/pdf/10.1145/135239.135244,,,,0,,0,,,,,,,,,0,0,,0,0,,"try to find a place where one or several strings (also called patterns) are
 found within a larger string or text.",,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment",,,,,,,,,,"Bafna, Lawler, Pevzner (1)","Bafna, Lawler, Pevzner",Approximation algorithms for multiple sequence alignment,1997,https://www.sciencedirect.com/science/article/pii/S0304397597000236,,,,,,7,m+n: 7,3,"O(k^3 g(2l+5,n))",,"k: number of sequences
n: sequence length
l: size of subset of sequences (l<k)
g(k,n): running time required to obtain an optimal solution
to the weighted sum-of-pairs problem for k sequences of length n. ",m+n,,,assuming Word RAM (not mentioned),,,,,,,,,0,,1,2-l/k,2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,1,0,"Edit Distance, constant-size alphabet",,,,,,,,,,"Bafna, Lawler, Pevzner (2)","Bafna, Lawler, Pevzner",Approximation algorithms for multiple sequence alignment,1997,https://www.sciencedirect.com/science/article/pii/S0304397597000236,,,,,,7,m+n: 7,3,"O(k^2 \lceil \log{k/\epsilon \rceil g(2l,n))",,"k: number of sequences
n: sequence length
l: size of subset of sequences (l<k)
g(k,n): running time required to obtain an optimal solution
to the weighted sum-of-pairs problem for k sequences of length n.
\epsilon>0",m+n,,,assuming Word RAM (not mentioned),,,,,,,,,1,,1,2-l/k,2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment",,,,,,,,,,SP,Gusfield,Efficient methods for multiple sequence alignment with guaranteed error bounds,1993,https://www.sciencedirect.com/science/article/abs/pii/S0092824005800667,,,,,,,,,,,"For any r> 1, e(r)=expected # randomly chosen centers (?) before value of best resulting alignment is within approximation factor, r=>e(r)",,,,,,,,,,,,,1,,1,2+1/(r-1),2,2.99,0,multiplicative,no,n/a,factor off from optimal,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment",,,,,,,,,,Tree Alignment (TA),Gusfield,Efficient methods for multiple sequence alignment with guaranteed error bounds,1993,https://www.sciencedirect.com/science/article/abs/pii/S0092824005800667,,,,,,,,,,,,,,,,,,,,,,,,,,1,2(k-1)/k ?,2,2.99,0,multiplicative,no,n/a,factor off from optimal,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,,,,,,,,,,,,"Chan, Wong, Chiu",A survey of multiple sequence comparison methods,1992,https://link.springer.com/article/10.1007/BF02459635,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,"Edit Distance, constant-size alphabet",,,,,,,,,,,"Arslan, Eğecioğlu",Dynamic Programming Based Approximation Algorithms for Sequence Alignment with Constraints,2004,https://pubsonline.informs.org/doi/abs/10.1287/ijoc.1040.0097,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,,,,,,,,,,,,"Siegmund, Yakir",Approximate p-Values for Local Sequence Alignments,2000,https://www.jstor.org/stable/2674048,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,,,,,,,,,,,,Cai,Approximate Sequence Alignment,2013,https://www.proquest.com/docview/2674919304?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment",,,,,,,,,,,"Akutsu, Arimura, Shimoromo",On approximation algorithms for local multiple alignment,2000,https://dl.acm.org/doi/abs/10.1145/332306.332311,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,proves NP-Hard and APX-Hard,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment",,,,,,,,,,Kalign,"Lassmann, Sonnhammer",Kalign – an accurate and fast multiple sequence alignment algorithm,2005,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-6-298,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,,,,,,,,,,,,"Storey, Siegmund",Approximate P-Values for Local Sequence Alignments: Numerical Studies,2004,https://www.liebertpub.com/doi/abs/10.1089/106652701753216530,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment",,,,,,,,,,QAOA-MSA,"Madsen, Marqversen, Rasmussen, Zinner",Multi-sequence alignment using the Quantum Approximate Optimization Algorithm,2023,https://arxiv.org/abs/2308.12103,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,1,0,"Edit Distance, constant-size alphabet; Multiple Sequence Alignment; K-MSA",,,,,,,,,,"Parida, Floratos, Rigoutsos ","Parida, Floratos, Rigoutsos ",An Approximation Algorithm for Alignment of Multiple Sequences using Motif Discovery,1999,https://link.springer.com/article/10.1023/A:1009841927822,,,,,,,,1,polynomial ?,,"N: number of sequences
n: length of sequences",,,,,,,,,,,,,,,1,1+6\ln{nN},4,6,,multiplicative ?,yes,,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,0,0,,,,,,,,,,,,Notredame,Recent progress in multiple sequence alignment: a survey,2004,https://www.futuremedicine.com/doi/abs/10.1517/14622416.3.1.131,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0,0,0,,,,,,,,,,,,"Katoh, Kuma, Toh, Miyata",MAFFT version 5: improvement in accuracy of multiple sequence alignment,2005,https://academic.oup.com/nar/article/33/2/511/2549118,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,1,0,Approximate Multiplication,,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/6748013  (2014)],,"Momeni, Han, Montuschi, Lombardi",Design and Analysis of Approximate Compressors for Multiplication,2014,https://ieeexplore.ieee.org/abstract/document/6748013,,,,,,,,,,,"n: length of one of the integers, in bits",n,,,Word RAM,bits,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,"Multiplication is one of the four elementary mathematical operations of arithmetic;
with the others being addition; subtraction and division.",,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
27,Multiplication,0.001,1,0,Approximate Multiplication,,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/7434040  (2016)],,"Zervakis, Tsoumanis, Xydis, Soudris, Pekmestzi",Design-Efficient Approximate Multiplication Circuits Through Partial Product Perforation,2016,https://ieeexplore.ieee.org/abstract/document/7434040,,,,,,,,,,,"n: length of one of the integers, in bits",n,,,Word RAM,bits,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,"Multiplication is one of the four elementary mathematical operations of arithmetic;
with the others being addition; subtraction and division.",,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
27,Multiplication,0.001,1,0,Approximate Multiplication,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/3316781.3317774  (2019)],,"Imani, Sokolova, Garcia, Huang, Wu, Aksanli, Rosing",ApproxLP: Approximate Multiplication with Linearization and Iterative Error Control,2019,https://dl.acm.org/doi/abs/10.1145/3316781.3317774,,,,,,,,,,,"n: length of one of the integers, in bits",n,,,Word RAM,bits,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,"Multiplication is one of the four elementary mathematical operations of arithmetic;
with the others being addition; subtraction and division.",,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
28,Maximum Cardinality Matching,1,1,0,MCM in Bipartite Graphs (Approximate),,,,1,0,O(E/eps),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4569670 Hopcroft, Karp (implicit) (1971)]","Hopcroft, Karp (implicit)","Hopcroft, Karp",A n^(5/2) Algorithm for Maximum Matching in Bipartite Graphs,1971,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4569670,,,,,,5,V: 5,3,O(E/eps),10,"V: number of vertices
E: number of edges
eps: error parameter",V,https://dl.acm.org/doi/10.1145/2529989,0,Word RAM,words,3,V: 3,O(V)?,Keep track of current matching + augmenting path,1,0,,0,,1,1-eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/2529989,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM, General (Approximate)",286,,,1,0,O(E/eps),,,[https://ieeexplore.ieee.org/document/4567800 Micali and Vazirani (implicit) (1980)],Micali and Vazirani (implicit),Micali and Vazirani,An $O(\sqrt{|v|}\cdot |E|)$ algoithm for finding maximum matching in general graphs,1980,https://ieeexplore.ieee.org/document/4567800,,,,,,5,V: 5,3,O(E/eps),10,"V: number of vertices
E: number of edges
eps: error parameter",V,https://dl.acm.org/doi/10.1145/2529989,0,Word RAM?,words,3,V: 3,O(V),https://link.springer.com/content/pdf/10.1007/PL00009186.pdf,0,0,,0,,1,1-eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/2529989,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(Delta^(O(log(Delta/eps)))),,,"[https://www.sciencedirect.com/science/article/pii/S0304397507003696 Parnas, Ron (implicit?) (2005)]","Parnas, Ron (implicit?)","Parnas, Ron",Approximating the minimum vertex cover in sublinear time and a connection to distributed algorithms,2005,https://www.sciencedirect.com/science/article/pii/S0304397507003696,,,,,,8,V: 8,2,O(Delta^(O(log(Delta/eps)))),500,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2006.05490,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(O(1), eps*V)",4,4,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,https://arxiv.org/abs/2006.05490,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(2^(O(Delta))/eps^2),,,"[https://ieeexplore.ieee.org/document/4690966 Nguyen, Onak [Corollary 2] (2008)]","Nguyen, Onak [Corollary 2]","Nguyen, Onak",Constant-Time Approximation Algorithms via Local Improvements,2008,https://ieeexplore.ieee.org/document/4690966,,,,,,8,V: 8,2,O(2^(O(Delta))/eps^2),,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://ieeexplore.ieee.org/document/4690966,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*V)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(2^(Delta^(O(1/eps)))),,,"[https://ieeexplore.ieee.org/document/4690966 Nguyen, Onak [Corollary 9] (2008)]","Nguyen, Onak [Corollary 9]","Nguyen, Onak",Constant-Time Approximation Algorithms via Local Improvements,2008,https://ieeexplore.ieee.org/document/4690966,,,,,,8,V: 8,2,O(2^(Delta^(O(1/eps)))),,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://ieeexplore.ieee.org/document/4690966,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,eps*V,4,0,5.99,additive,yes,n/a,additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(Delta^4/eps^2),,,"[https://epubs.siam.org/doi/10.1137/110828691 Yoshida, Yamamoto, Ito [Theorem 3.1] (2009)]","Yoshida, Yamamoto, Ito [Theorem 3.1]","Yoshida, Yamamoto, Ito",Improved Constant-Time Approximation Algorithms for Maximum Matchings and Other Optimization Problems,2009,https://epubs.siam.org/doi/10.1137/110828691,,,,,,7,V: 7,3,O(Delta^4/eps^2),40,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://epubs.siam.org/doi/10.1137/110828691,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*V)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(Delta^(O(k^2))/eps^2),,,"[https://epubs.siam.org/doi/10.1137/110828691 Yoshida, Yamamoto, Ito [Theorem 3.7] (2009)]","Yoshida, Yamamoto, Ito [Theorem 3.7]","Yoshida, Yamamoto, Ito",Improved Constant-Time Approximation Algorithms for Maximum Matchings and Other Optimization Problems,2009,https://epubs.siam.org/doi/10.1137/110828691,,,,,,8,V: 8,2,O(Delta^(O(k^2))/eps^2),,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter
k: any positive integer less than V/2",V,https://epubs.siam.org/doi/10.1137/110828691,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(1 + 1/k, eps*V)",4,2,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(Delta^(O(1/eps^2))),,,"[https://epubs.siam.org/doi/10.1137/110828691 Yoshida, Yamamoto, Ito [Corollary 3.8] (2009)]","Yoshida, Yamamoto, Ito [Corollary 3.8]","Yoshida, Yamamoto, Ito",Improved Constant-Time Approximation Algorithms for Maximum Matchings and Other Optimization Problems,2009,https://epubs.siam.org/doi/10.1137/110828691,,,,,,7,V: 7,2,O(Delta^(O(1/eps^2))),400,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://epubs.siam.org/doi/10.1137/110828691,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,eps*V,4,0,5.99,additive,yes,n/a,additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,O(Delta^2/eps^2 * poly(log(Delta/eps))),,,"[https://arxiv.org/abs/1110.1079 Onak, Ron, Rosen, Rubinfeld (implicit) (2011)]","Onak, Ron, Rosen, Rubinfeld (implicit)","Onak, Ron, Rosen, Rubinfeld",A Near-Optimal Sublinear-Time Algorithm for Approximating the Minimum Vertex Cover Size,2011,https://arxiv.org/abs/1110.1079,,,,,,5.01,V: 5.01,2.9,O(Delta^2/eps^2 * poly(log(Delta/eps))),25,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2006.05490,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*V)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,https://arxiv.org/abs/2006.05490,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,0.001,1,0,"MCM Size, General (Approximate)",,,,1,0,O(Delta/eps^2 * poly(log(V*Delta/eps))),,,"[https://arxiv.org/abs/1907.05725 Kapralov, Mitrovic, Norouzi-Fard, Tardos (2019)]","Kapralov, Mitrovic, Norouzi-Fard, Tardos","Kapralov, Mitrovic, Norouzi-Fard, Tardos",Space Efficient Approximation to Maximum Matching Size from Uniform Edge Samples,2019,https://arxiv.org/abs/1907.05725,,,,,,4,V: 4,2.9,O(Delta/eps^2 * poly(log(V*Delta/eps))),,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2006.05490,0,Word RAM (with access to iid edge samples),bits,2.01,V: 2.01,O((log V)^2),https://arxiv.org/abs/1907.05725,0,1,,1,Monte Carlo,1,O(1),4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(V^1.5 poly(log V))),,,"[https://arxiv.org/abs/2006.05490 Chen, Kannan, Khanna (2020)]","Chen, Kannan, Khanna","Chen, Kannan, Khanna",Sublinear Algorithms and Lower Bounds for Metric TSP Cost Estimation,2020,https://arxiv.org/abs/2006.05490,,,,,,4.5,V: 4.5,2.9,O(V^1.5 poly(log V))),16.24,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2006.05490,0,Word RAM (adj. matrix model),words,,,,,,,,1,Monte Carlo,1,"(2, eps*V)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,"O(V + Delta/eps^2 * polylog(V, Delta, 1/eps))",,,[https://arxiv.org/abs/2106.02942 Behnezhad [Theorem 1.2] (2021)],Behnezhad [Theorem 1.2],Behnezhad,Time-Optimal Sublinear Algorithms for Matching and Vertex Cover,2021,https://arxiv.org/abs/2106.02942,,,,,,4,V: 4,2.9,"O(V + Delta/eps^2 * polylog(V, Delta, 1/eps))",15,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2106.02942,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,2 + eps,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,"O(d/eps^2 * polylog(d, 1/eps))",,,[https://arxiv.org/abs/2106.02942 Behnezhad [Theorem 1.3] (2021)],Behnezhad [Theorem 1.3],Behnezhad,Time-Optimal Sublinear Algorithms for Matching and Vertex Cover,2021,https://arxiv.org/abs/2106.02942,,,,,,4,V: 4,2.9,"O(d/eps^2 * polylog(d, 1/eps))",15,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2106.02942,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*V)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,"O(V/eps^3 * polylog(V, eps))",,,[https://arxiv.org/abs/2106.02942 Behnezhad [Theorem 1.4] (2021)],Behnezhad [Theorem 1.4],Behnezhad,Time-Optimal Sublinear Algorithms for Matching and Vertex Cover,2021,https://arxiv.org/abs/2106.02942,,,,,,4,V: 4,2.9,"O(V/eps^3 * polylog(V, eps))",15,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://arxiv.org/abs/2106.02942,0,Word RAM (adj. matrix model),words,,,,,,,,1,Monte Carlo,1,"(2, eps*V)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,"O((V + Delta^(1+eps)) * polylog(V, Delta, 1/eps))",,,"[https://arxiv.org/abs/2206.13057 Behnezhad, Roghani, Rubinstein, Saberi [Theorem 1.1-1] (2021)]","Behnezhad, Roghani, Rubinstein, Saberi [Theorem 1.1-1]","Behnezhad, Roghani, Rubinstein, Saberi",Beating Greedy Matching in Sublinear Time,2021,https://arxiv.org/abs/2206.13057,,,,,,4.01,V: 4.01,2.9,"O((V + Delta^(1+eps)) * polylog(V, Delta, 1/eps))",15.015,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: error parameter
r: some constant larger than 2^(-O(1/eps)) (see paper)",V,https://arxiv.org/abs/2206.13057,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,1/(1/2 + delta),2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, Sparse (Approximate)",,,,1,0,"O(d * Delta^eps * polylog(d, 1/eps))",,,"[https://arxiv.org/abs/2206.13057 Behnezhad, Roghani, Rubinstein, Saberi [Theorem 1.1-2] (2021)]","Behnezhad, Roghani, Rubinstein, Saberi [Theorem 1.1-2]","Behnezhad, Roghani, Rubinstein, Saberi",Beating Greedy Matching in Sublinear Time,2021,https://arxiv.org/abs/2206.13057,,,,,,4.01,V: 4.01,2.9,"O(d * Delta^eps * polylog(d, 1/eps))",15.015,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: error parameter
r: some constant larger than 2^(-O(1/eps)) (see paper)",V,https://arxiv.org/abs/2206.13057,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(1/(1/2 + delta), o(V))",4,3.01,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(V^(1+eps)),,,"[https://arxiv.org/abs/2206.13057 Behnezhad, Roghani, Rubinstein, Saberi [Theorem 1.1-3] (2021)]","Behnezhad, Roghani, Rubinstein, Saberi [Theorem 1.1-3]","Behnezhad, Roghani, Rubinstein, Saberi",Beating Greedy Matching in Sublinear Time,2021,https://arxiv.org/abs/2206.13057,,,,,,4.01,V: 4.01,3,O(V^(1+eps)),15.015,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: error parameter
r: some constant larger than 2^(-O(1/eps)) (see paper)",V,https://arxiv.org/abs/2206.13057,0,Word RAM (adj. matrix model),words,,,,,,,,1,Monte Carlo,1,"(1/(1/2 + delta), o(V))",4,3.01,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(V^(2-Omega_eps(1))),,,"[https://dl.acm.org/doi/10.1145/3564246.3585231 Behnezhad, Roghani, Rubinstein [Theorem 1.2-1] (2023)]","Behnezhad, Roghani, Rubinstein [Theorem 1.2-1]","Behnezhad, Roghani, Rubinstein",Sublinear Time Algorithms and Complexity of Approximate Maximum Matching,2023,https://dl.acm.org/doi/10.1145/3564246.3585231,,,,,,4.99,V: 4.99,2.9,O(V^(2-Omega_eps(1))),20,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://dl.acm.org/doi/10.1145/3564246.3585231,0,Word RAM (adj. list format with degree queries),words,,,,,,,,0,,1,2/3 - eps,2,2.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(V^(2-Omega_eps(1))),,,"[https://dl.acm.org/doi/10.1145/3564246.3585231 Behnezhad, Roghani, Rubinstein [Theorem 1.2-2] (2023)]","Behnezhad, Roghani, Rubinstein [Theorem 1.2-2]","Behnezhad, Roghani, Rubinstein",Sublinear Time Algorithms and Complexity of Approximate Maximum Matching,2023,https://dl.acm.org/doi/10.1145/3564246.3585231,,,,,,4.99,V: 4.99,2.9,O(V^(2-Omega_eps(1))),20,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,https://dl.acm.org/doi/10.1145/3564246.3585231,0,Word RAM (adj. matrix model),words,,,,,,,,0,,1,"(2/3 - eps, o(V))",4,2.5,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(V^(2-Omega(1))),,,"[https://dl.acm.org/doi/10.1145/3564246.3585231 Behnezhad, Roghani, Rubinstein [Theorem 1.4-1] (2023)]","Behnezhad, Roghani, Rubinstein [Theorem 1.4-1]","Behnezhad, Roghani, Rubinstein",Sublinear Time Algorithms and Complexity of Approximate Maximum Matching,2023,https://dl.acm.org/doi/10.1145/3564246.3585231,,,,,,4.99,V: 4.99,2.9,O(V^(2-Omega(1))),20,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex",V,https://dl.acm.org/doi/10.1145/3564246.3585231,0,Word RAM (adj. list format with degree queries),words,,,,,,,,0,,1,2/3 + Omega(1),2,2.49,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(V^(2-Omega(1))),,,"[https://dl.acm.org/doi/10.1145/3564246.3585231 Behnezhad, Roghani, Rubinstein [Theorem 1.4-2] (2023)]","Behnezhad, Roghani, Rubinstein [Theorem 1.4-2]","Behnezhad, Roghani, Rubinstein",Sublinear Time Algorithms and Complexity of Approximate Maximum Matching,2023,https://dl.acm.org/doi/10.1145/3564246.3585231,,,,,,4.99,V: 4.99,2.9,O(V^(2-Omega(1))),20,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex",V,https://dl.acm.org/doi/10.1145/3564246.3585231,0,Word RAM (adj. matrix model),words,,,,,,,,0,,1,"(2/3 + Omega(1), o(V))",4,2.49,5.99,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
28,Maximum Cardinality Matching,0.001,1,0,?,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/3188745.3188764 Czumaj et al. (2018)],Czumaj et al.,"Czumaj, Lacki, Madry, Mitrovic, Onak, Sankowski",Round compression for parallel matching algorithms,2018,https://dl.acm.org/doi/abs/10.1145/3188745.3188764,,,,,,,,,,,"V: number of vertices
E: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",V,,,MPC,words,,,,,,,,,,1,,,,,,,,,0,1,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,0.001,0,0,?,,,,,,,,,"[https://proceedings.neurips.cc/paper/2021/hash/8ca696ca160520b1cf5a569b4be525e8-Abstract.html Lahn, Raghvendra, Ye (2021)]","Lahn, Raghvendra, Ye","Lahn, Raghvendra, Ye",A Faster Maximum Cardinality Matching Algorithm with Applications in Machine Learning,2021,https://proceedings.neurips.cc/paper/2021/hash/8ca696ca160520b1cf5a569b4be525e8-Abstract.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(E/eps),,,"[https://scholarship.libraries.rutgers.edu/esploro/outputs/technicalDocumentation/Approximation-Schemes-For-Maximum-Cardinality-Matching/991031549966804646#file-0 Kalantari, Shokoufandeh (1995)]","Kalantari, Shokoufandeh","Kalantari, Shokoufandeh",Approximation Schemes For Maximum Cardinality Matching,1995,https://scholarship.libraries.rutgers.edu/esploro/outputs/technicalDocumentation/Approximation-Schemes-For-Maximum-Cardinality-Matching/991031549966804646#file-0,,,,,,5,V: 5,3,O(E/eps),10,"V: number of vertices
E: number of edges
eps: multiplicative error parameter",V,,,Word RAM,words,,,,,,,,0,,1,1-eps,1,2,0,multiplicative,no,FPTAS,Factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,,,,Combinatorics
28,Maximum Cardinality Matching,1,1,0,"MCM Size, General (Approximate)",,,,1,0,O(E/(eps log eps)),,,"[https://dl.acm.org/doi/abs/10.1145/2529989 Duan, Pettie (2014)]","Duan, Pettie","Duan, Pettie",Linear-Time Approximation for Maximum Weight Matching,2014,https://dl.acm.org/doi/abs/10.1145/2529989,,,,,,6,V: 6,3,O(E/(eps log eps)),10,"V: number of vertices
E: number of edges
eps: multiplicative error parameter",V,,,Word RAM,words,,,,,,,,0,,1,1-eps,1,2,0,multiplicative,no,FPTAS,Factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,,,,Combinatorics
28,Maximum Cardinality Matching,0.001,0,0,Dynamic MCM,,,,0,0,,,,[https://ieeexplore.ieee.org/abstract/document/6686191  (2013)],,"Gupta, Peng",Fully Dynamic (1+ e)-Approximate Matchings,2013,https://ieeexplore.ieee.org/abstract/document/6686191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,0,0,Dynamic MCM,,,,0,0,,,,[https://arxiv.org/abs/1810.01073  (2018)],,,Fully dynamic 3/2 approximate maximum cardinality matching in O(n‾√) update time,2018,https://arxiv.org/abs/1810.01073,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,0,0,Weighted Sparse MCM,,,,0,0,,,,,,,Linear Time 1/2-Approximation Algorithm for Maximum Weighted Matching in General Graphs,1999,https://link.springer.com/chapter/10.1007/3-540-49116-3_24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,0,0,Dynamic MCM,,,,0,0,,,,,,,Fully Dynamic Approximate Maximum Matching and Minimum Vertex Cover in O(log3 n) Worst Case Update Time,2017,https://epubs.siam.org/doi/abs/10.1137/1.9781611974782.30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,1,0,Geometric MCM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
31,SDD Systems Solvers,2,1,0,Inexact Laplacian Solver,306,Spectral Sparsification,,1,0,O(m log^c n),,,"[https://dl.acm.org/doi/pdf/10.1145/1007352.1007372?casa_token=k60CrC_UJp0AAAAA:yGVve4fRNbftRM0P7aaEbq8OIlxa4nRy8-CjZErlGrBwBfPEt0ECHGYc8Ei48rdA9W9NoY73xC2W Spielman, Teng  (2004)]","Spielman, Teng ","Spielman, Teng ","Nearly-Linear Time Algorithms for Graph Partitioning, Graph Sparsification, and Solving Linear Systems",2004,https://dl.acm.org/doi/pdf/10.1145/1007352.1007372?casa_token=k60CrC_UJp0AAAAA:yGVve4fRNbftRM0P7aaEbq8OIlxa4nRy8-CjZErlGrBwBfPEt0ECHGYc8Ei48rdA9W9NoY73xC2W,,,,0,0,4,"m: 3,
n: 5.01,
n^2: 4",2.9,O(m \log^c n),15,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),Derived: Uses spanning trees and sparse Cholesky factorization which both take $O(n)$ space,1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://pdfs.semanticscholar.org/9038/1cb96bcee79a8bfab06def49b762baee8da3.pdf,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
31,SDD Systems Solvers,0.001,1,0,Inexact Laplacian Solver,307,Using maximum-weight spanning trees,,1,0,O(mn^{(3/4)}),,,[ Vaidya (1990)],Vaidya,Vaidya,,1990,,,,,1,0,4.375,"n: 5.75,
m: 3,
n^2: 4.375",3,O(mn^{(3/4)}),,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),Derived: Uses a spanning tree (size $O(n)$),1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://pdfs.semanticscholar.org/9038/1cb96bcee79a8bfab06def49b762baee8da3.pdf,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,2732020.846,Inf,,2732020845645,Inf,,2.73202E+18,Inf,,1,,,Numerical Analysis
31,SDD Systems Solvers,1,1,0,Inexact Laplacian Solver,308,Support Tree Conjugate Gradients (STCG),,1,0,O(n^2),,,[https://www.cs.cmu.edu/~glmiller/Publications/Papers/GrMiZa94-tr.pdf Gremban; Miller; Zagha (1995)],Gremban; Miller; Zagha,Gremban; Miller; Zagha,Performance Evaluation of a New Parallel Preconditioner,1995,https://www.cs.cmu.edu/~glmiller/Publications/Papers/GrMiZa94-tr.pdf,,,,1,3->4,3,"n: 5,
n^2: 3",3,O(n^2),10,"n: dimension of matrix
epsilon: error requirement",n^2,,,Word RAM,words,3,"n: 5,
n^2: 3",O(n^2),https://www.cs.cmu.edu/~glmiller/Publications/Papers/GrMiZa94-tr.pdf,0,1,,0,,1,\epsilon?,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,1000000,Inf,,1000000000000,Inf,,1E+18,Inf,,1,,,Numerical Analysis
31,SDD Systems Solvers,1,1,0,Inexact Laplacian Solver,310,,,1,0,$\tilde{O}(mn^{(1/2)})$,,,[https://epubs.siam.org/doi/10.1137/S0895479801390637 Boman; Hendrickson (2003)],Boman; Hendrickson,Boman; Hendrickson,Support Theory for Preconditioning,2003,https://epubs.siam.org/doi/10.1137/S0895479801390637,,,,1,0,4.25,"n: 5.5,
m: 3,
n^2: 4.25",2.9,$\tilde{O}(mn^{(1/2)})$,15.25,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,#VALUE!,,,,,,,0,,1,\epsilon?,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://pdfs.semanticscholar.org/9038/1cb96bcee79a8bfab06def49b762baee8da3.pdf,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,3316.983346,Inf,,4316983.346,Inf,,4901945847,Inf,,1,,,Numerical Analysis
31,SDD Systems Solvers,1,1,0,Inexact Laplacian Solver,311,Maximum-weight-basis (MWB) preconditioners,,1,0,O(n  log(1/ϵ) ),,,[https://onlinelibrary.wiley.com/doi/abs/10.1002/nla.343 Boman; Chen; Hendrickson; Toledo (2004)],Boman; Chen; Hendrickson; Toledo,Boman; Chen; Hendrickson; Toledo,Maximum-weight-basis preconditioners,2004,https://onlinelibrary.wiley.com/doi/abs/10.1002/nla.343,,,,0,0,2.5,"n: 3,
n^2: 2.5",3,O(n  \log(1/ϵ) ),6,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),Derived: The preconditioners used have $O(n)$ non-zero entries,1,0,,0,,1,\epsilon?,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
31,SDD Systems Solvers,2,1,0,Inexact Laplacian Solver,312,Incremental sparsifier,,1,0,$\tilde{O}(m log n)$,,,[https://arxiv.org/abs/1102.4842 Koutis; Miller and Peng (2010)],Koutis; Miller and Peng,Koutis; Miller; Peng,A nearly-mlogn time solver for SDD linear systems,2010,https://arxiv.org/abs/1102.4842,,,,0,0,4,"m: 3,
n: 5.01,
n^2: 4",2.9,$\tilde{O}(m \log n)$,11,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),"Derived: Uses an auxiliary chain of graphs, which can be kept track of with a single spanning tree",1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
31,SDD Systems Solvers,2,1,0,Inexact Laplacian Solver,313,Incremental sparsifier,,1,0,$\tilde{O}(m log n)$,,,[https://arxiv.org/abs/1003.2958 Koutis; Miller and Peng (2011)],Koutis; Miller and Peng,Koutis; Miller; Peng,A nearly-mlogn time solver for SDD linear systems,2011,https://arxiv.org/abs/1003.2958,,,,0,0,4,"m: 3,
n: 5.01,
n^2: 4",2.9,$\tilde{O}(m \log n)$,11,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),"Derived: Uses an auxiliary chain of graphs, which can be kept track of with a single spanning tree",1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://pdfs.semanticscholar.org/9038/1cb96bcee79a8bfab06def49b762baee8da3.pdf,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
31,SDD Systems Solvers,1,1,0,Inexact Laplacian Solver,314,Combinatorial multigrid,,1,0,O(n logn),,,[https://ieeexplore.ieee.org/document/5644892 Blelloch; Koutis;  Miller; Tangwongsan (2010)],Blelloch; Koutis;  Miller; Tangwongsan,Blelloch; Koutis;  Miller; Tangwongsan,Hierarchical Diagonal Blocking and Precision Reduction Applied to Combinatorial Multigrid,2010,https://ieeexplore.ieee.org/document/5644892,,,,1,4->5,2.51,"n: 4,
n^2: 2.51",3,O(n \log n),6.1,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5,
m: 3",m + O(n/\log n),https://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/jkoutis/papers/SC10-paper.pdf,0,1,,0,,1,\epsilon?,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,9965.784285,Inf,,19931568.57,Inf,,29897352854,Inf,,1,,,Numerical Analysis
31,SDD Systems Solvers,2,1,0,Inexact Laplacian Solver,316,Low-stretch spanning tree,,1,0,$O(m log^2 (n) loglogn log(1/ϵ) )$,,,[https://arxiv.org/pdf/1301.6628.pdf Kelner; Orecchia; Sidford; Zhu (2013)],Kelner; Orecchia; Sidford; Zhu,Kelner; Orecchia; Sidford; Zhu,"A Simple, Combinatorial Algorithm for Solving SDD Systems in Nearly-Linear Time",2013,https://arxiv.org/pdf/1301.6628.pdf,,,,0,0,4.011,"n: 5.021,
m: 3,
n^2: 4.011",3,O(m \log^2 (n) \log \log n),12.1,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),Derived: Uses a spanning tree of the graph that the Laplacian is for,1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
31,SDD Systems Solvers,2,1,0,Inexact Laplacian Solver,317,Recursive algorithm with sparse Cholesky factorization of Laplacian,,1,0,O(m),,,[https://arxiv.org/abs/1506.08204 Lee; Peng; Spielman [Theorem 5.10] (2015)],Lee; Peng; Spielman [Theorem 5.10],Lee; Peng; Spielman,Sparsified Cholesky Solvers for SDD linear systems,2015,https://arxiv.org/abs/1506.08204,2,1,https://arxiv.org/pdf/1506.08204.pdf,0,0,3,"m: 3,
n: 5,
n^2: 3",3,O(m),10,"n: dimension of matrix
m: number of non-zero entries times $\log(1/\epsilon)$
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),Derived: Uses an auxiliary sparse Cholesky decomposition which has $O(n)$ non-zero entries,1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,1000,Inf,,1000000,Inf,,1000000000,Inf,,1,,,Numerical Analysis
31,SDD Systems Solvers,2,1,0,Inexact Laplacian Solver,318,Support Theory (Trusses and Stiffness Matrices),,1,0,$O(n^{5/4} (log^2 (n) loglogn)^{3/4} log(1/ϵ))$,,,[https://arxiv.org/abs/cs/0703119 Daitch; Spielman (2007)],Daitch; Spielman,Daitch; Spielman,Support-Graph Preconditioners for 2-Dimensional Trusses,2007,https://arxiv.org/abs/cs/0703119,,,,0,0,2.635,"n: 4.25,
n^2: 2.635",3,O(n^{5/4} (\log^2 (n) \log\log n)^{3/4} \log(1/ϵ)),6.6,"n: dimension of matrix
epsilon: error requirement",n^2,,,Word RAM,words,2.5,"n: 3,
n^2: 2.5",O(n),Derived: Uses an auxiliary sparse Cholesky decomposition which has $O(n)$ non-zero entries,1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,"In mathematics, a square matrix is said to be diagonally dominant if, for every row of the matrix, the magnitude of the diagonal entry in a row is larger than or equal to the sum of the magnitudes of all the other (non-diagonal) entries in that row.",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
34,Convex Optimization (Non-linear),1,1,0,ILP;MILPs,330,,0,1,0,"O(2^n*poly(n, m))? (previously O(n^3))",,,[https://www.cs.uleth.ca/~benkoczi/OR/read/cutting-stock-LP.pdf Gomory's cutting method (1953)],Gomory's cutting method,"Gilmore, Gomory",A Linear Programming Approach to the Cutting-Stock Problem,1953,https://www.cs.uleth.ca/~benkoczi/OR/read/cutting-stock-LP.pdf,2,1,http://www.math.wsu.edu/faculty/genz/364/lessons/l603.pdf,1,0,8,"n: 8,
m: 7",2,"O(2^n*poly(n, m))? (previously O(n^3))",1045,"n: number of variables
m: number of constraints
L: length of input, in bits
epsilon: error requirement",n,,,Word/Real RAM,words,3,"n: 3,
m: 5",O(nm+m^2),"See simplex algorithm, but also O(m) variables and constraints are introduced",1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://en.wikipedia.org/wiki/Ralph_E._Gomory,Convex optimization is a subfield of mathematical optimization that studies the problem of minimizing convex functions over convex sets.,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
34,Convex Optimization (Non-linear),1,1,0,"General, Constrained optimization",331,,0,1,0,O(n^4),,,[https://link.springer.com/content/pdf/10.1007/BFb0120703.pdf Wolfe; Lemaréchal; Kiwiel (1964)],Wolfe; Lemaréchal; Kiwiel,Wolfe; Lemaréchal; Kiwiel,A Method of Conjugate Subgradients for Minimizing Nondifferentiable Functions,1964,https://link.springer.com/content/pdf/10.1007/BFb0120703.pdf,,,,0,0,7,n: 7,3,O(n^4),40,"n: number of variables
m: number of constraints
L: length of input, in bits
epsilon: error requirement",n,,,Word RAM,words,3,"n: 3,
L: 3",O(n+L)??,"keeps track of current guess x^{(k)}, and computes bundle G^{(k)}, direction d^{(k)}, and scalar t^{(k)}?",1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,Convex optimization is a subfield of mathematical optimization that studies the problem of minimizing convex functions over convex sets.,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
34,Convex Optimization (Non-linear),1,1,0,"General, Constrained optimization",332,,0,1,0,O(n^2 logn),,,[https://www.sciencedirect.com/science/article/abs/pii/0041555380900610 Ellipsoid method (1971)],Ellipsoid method,Khachiyan,Polynomial algorithms in linear programming,1971,https://www.sciencedirect.com/science/article/abs/pii/0041555380900610,,,,1,0,5.01,n: 5.01,3,O(n^2 \log n),21,"n: number of variables
m: number of constraints
L: length of input, in bits
epsilon: error requirement",n,,,Word RAM,words,3,"n: 3,
m: 3,
L: 3",O(nmL),see orginal paper (noting that O(alpha*log(H*alpha)) = O(L)),0,1,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://en.wikipedia.org/wiki/Ellipsoid_method,Convex optimization is a subfield of mathematical optimization that studies the problem of minimizing convex functions over convex sets.,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
34,Convex Optimization (Non-linear),1,1,0,"General, Constrained optimization",333,,0,1,0,O(n^2 ),,,[https://www.springer.com/gp/book/9783642821202 Subgradient method (1981)],Subgradient method,Shor,Minimization Methods for Non-Differentiable Functions,1981,https://www.springer.com/gp/book/9783642821202,1,1,https://en.wikipedia.org/wiki/Subgradient_method,1,3->4,5,n: 5,3,O(n^2 ),20,"n: number of variables
m: number of constraints
L: length of input, in bits
epsilon: error requirement",n,,,Word/Real RAM,words,3,"n: 3,
L: 3",O(n+L)?,"keep track of current guess x^{(k)}, and needs to compute subgradient g^{(k)}",1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,,Convex optimization is a subfield of mathematical optimization that studies the problem of minimizing convex functions over convex sets.,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
34,Convex Optimization (Non-linear),1,1,0,Stochastic optimization,334,,0,1,0,O(n^2),,,[ Dual subgradients and the drift-plus-penalty method (1993)],Dual subgradients and the drift-plus-penalty method,,,1993,,,,,0,0,5,n: 5,3,O(n^2),20,"n: number of variables
m: number of constraints
V: weight parameter (and average queue size)
L: length of input, in bits
epsilon: error requirement",n,,,Word/Real RAM,words,3,"n: 3,
m: 3,
V: 3",O(Vmn)????,involves minimizing an expression with up to O(Vmn) terms per iteration?,1,0,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error (from obtained solution to real solution),0,0,,0,0,https://en.wikipedia.org/wiki/Drift_plus_penalty,Convex optimization is a subfield of mathematical optimization that studies the problem of minimizing convex functions over convex sets.,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
35,Gröbner Bases,0.001,1,0,Approximate Gröbner Bases,,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/6169497  (2011)],,Sasaki,A Theory and an Algorithm of Approximate Gröbner Bases,2011,https://ieeexplore.ieee.org/abstract/document/6169497,,,,0,0,,,,,,n: number of variables in each polynomial,n,,,Word RAM,words,,,,,,,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error on coefficients of polynomials?,0,0,,0,0,,"In mathematics, and more specifically in computer algebra, computational algebraic geometry, and computational commutative algebra, a Gröbner basis is a particular kind of generating set of an ideal in a polynomial ring K[x1, ..,xn] over a field K. ",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
35,Gröbner Bases,0.001,1,0,Approximate Gröbner Bases,,,,1,0,,,,[https://link.springer.com/chapter/10.1007/978-1-4612-0351-3_10  (1993)],,Shirayanagi,An Algorithm to Compute Floating Point Groebner Bases,1993,https://link.springer.com/chapter/10.1007/978-1-4612-0351-3_10,,,,0,0,,,,,,n: number of variables in each polynomial,n,,,Word RAM,words,,,,,,,,0,,1,\epsilon,1,0,1.99,additive,yes,n/a,Magnitude of error on coefficients of polynomials?,0,0,,0,0,,"In mathematics, and more specifically in computer algebra, computational algebraic geometry, and computational commutative algebra, a Gröbner basis is a particular kind of generating set of an ideal in a polynomial ring K[x1, ..,xn] over a field K. ",,,,,,,,,,,,,,,,,,,1,,,Numerical Analysis
38,Optimal Binary Search Trees,1,1,0,Approximate OBST,348,,,1,0,O(n),,,[https://people.mpi-inf.mpg.de/~mehlhorn/ftp/mehlhorn3.pdf Melhorn's Approximation algorithm (1975)],Melhorn's Approximation algorithm,Melhorn,Nearly Optimal Binary Search Trees,1975,https://people.mpi-inf.mpg.de/~mehlhorn/ftp/mehlhorn3.pdf,,,,0,0,3,n: 3,3,$O(n)$,10,"H: entropy of the distribution
P_opt:
P_balanced: 
n: number of elements",n,,,,,3,n: 3,O(n),"https://people.mpi-inf.mpg.de/~mehlhorn/ftp/mehlhorn3.pdf, storing left/right subtrees' weights",0,1,,0,,1,~2.285 + 2/H (H denotes entropy of probability distribution),2.4,4,0,multiplicative,no,n/a,Ratio of found cost to optimal cost,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,2,1,0,Approximate OBST,350,,,1,0,O(n^0.6),,,[https://dl.acm.org/doi/10.5555/313852.313880 Karpinski (1996)],Karpinski,"Karpinski, Larmore, Rytter",Sequential and parallel subquadratic work algorithms for constructing approximately optimal binary search trees,1996,https://dl.acm.org/doi/10.5555/313852.313880,,,,0,0,2.6,n: 2.6,3,O(n^{0.6}),6.5,"n: number of elements
eps: approximation parameter; eps = 1/n^k",n,,0,,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,Difference between found cost and optimal cost,0,1,n,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,2,1,0,Approximate OBST,352,,,1,0,O(n^1.6),,,[https://www.sciencedirect.com/science/article/pii/0196677487900526 Larmore [Corollary 1.4] (1987)],Larmore [Corollary 1.4],Larmore,A subquadratic algorithm for constructing approximately optimal binary search trees,1987,https://www.sciencedirect.com/science/article/pii/0196677487900526,,,,0,0,4.6,n: 4.6,3,O(n^{1.6}),16.4,"n: number of elements
eps: approximation parameter; eps = 1/n^k",n,,0,,,3,n: 3,O(n),"Derived: Computing and storing f_{d,l} for each n elements",1,0,,0,,1,eps,1,0,1.99,additive,yes,n/a,Difference between found cost and optimal cost,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,63095,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,2,1,0,Approximate OBST,,,,1,0,O(n^(1+r)),,,[https://www.sciencedirect.com/science/article/pii/0196677487900526 Larmore [Theorem 1.3] (1987)],Larmore [Theorem 1.3],Larmore,A subquadratic algorithm for constructing approximately optimal binary search trees,1987,https://www.sciencedirect.com/science/article/pii/0196677487900526,,,,0,0,4.6,n: 4.6,3,O(n^(1+r)),15.019,"n: number of elements
r: any real number between 0 and 1",n,,0,,,3,n: 3,O(n),"Derived: Computing and storing f_{d,l} for each n elements",1,0,,0,,1,O(n*(n^r/log n)^(-(1-log(phi)))),1,0,1,additive,yes,n/a,Difference between found cost and optimal cost,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,63095,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,1,1,0,Approximate OBST,,,,1,0,O(n),,,[https://dl.acm.org/doi/pdf/10.1145/800116.803774 Fredman [min-max tree] (1975)],Fredman [min-max tree],Fredman,Two Applications of a Probabilistic Search Technique: Sorting X+Y and Building Balanced Search Trees,1975,https://dl.acm.org/doi/pdf/10.1145/800116.803774,,,,0,0,3,n: 3,3,O(n),10,n: number of elements,n,,,,,,,,,,,,0,,1,O(log P_(opt)) where P_(opt) is the optimal cost,2.4,0,3,additive,yes,n/a,Difference between found cost and optimal cost,0,0,,0,0,https://www.sciencedirect.com/science/article/pii/0196677487900526 (for approximation error),an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,63095,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,2,1,0,Approximate OBST,353,,,1,0,O(n),,,[https://www.sciencedirect.com/science/article/pii/0304397589901345 Levcopoulos; Lingas; Sack (1989)],Levcopoulos; Lingas; Sack,Levcopoulos; Lingas; Sack,Heuristics for optimum binary search trees and minimum weight triangulation problems,1989,https://www.sciencedirect.com/science/article/pii/0304397589901345,,,,1,5->6,3,n: 3,3,O(n),10,n: number of elements,n,,,Word RAM,words,3,n: 3,$O(n)$,Derived: Uses an auxiliary list of initial size $4n$,1,0,,0,,1,$1 + \epsilon$,1,2,0,multiplicative,yes,FPTAS,Ratio of found cost to optimal cost,1,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,1,1,0,Approximate OBST,354,,,1,0,O(n),,,[https://www.sciencedirect.com/science/article/pii/002001909390212R de Prisco (1993)],de Prisco,"de Prisco, de Santis",On binary search trees,1993,https://www.sciencedirect.com/science/article/pii/002001909390212R,,,,0,0,3,n: 3,3,O(n),10,"$n$: number of elements
$H$: entropy of the given distribution
$p_0$: first element
$p_n$: last element
$p_{max}$: largest element",n,,,Word RAM,words,3,n: 3,$O(n)$,"Derived: Uses an auxiliary probability distribution, and three phases that alter a single tree that eventually is the result",1,0,,0,,1,Upper bound: $H + 1 - p_0 - p_n + p_{max}$,2.4,0,3,additive,no,n/a,Difference between found cost and optimal cost,1,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,1,1,0,Approximate OBST,,,,1,0,O(log(n) log(1/eps)),,,[https://dl.acm.org/doi/pdf/10.1145/72935.72980  (1989)],,"Atallah, Kosaraju, Larmore, Miller, Teng",Constructing Trees in Parallel,1989,https://dl.acm.org/doi/pdf/10.1145/72935.72980,,,,0,0,2.01,n: 2.01,3,O(log(n) log(1/eps)),1,"n: number of elements
eps: approximation parameter; 0 < eps < 1/n",n,https://dl.acm.org/doi/pdf/10.1145/72935.72980,0,Word RAM,words,#VALUE!,,,,,,,0,,1,eps,1,0,1.99,additive,yes,n/a,Difference between found cost and optimal cost,0,1,n^2/(log n)^2,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,1,0,0,"Approximate OBST, different costs, equiprobable elements",,,,1,0,O(nh),,,[https://link.springer.com/chapter/10.1007/3-540-48481-7_21  (1999)],,"Laber, Milidiu, Pessoa",Strategies for Searching with Different Access Costs,1999,https://link.springer.com/chapter/10.1007/3-540-48481-7_21,,,,0,0,4,n: 4,3,O(nh),10,"n: number of elements
h: height of tree produced at end of algorithm",n,https://link.springer.com/chapter/10.1007/3-540-48481-7_21,0,Word RAM,words,3,n: 3,O(n),https://link.springer.com/chapter/10.1007/3-540-48481-7_21,0,1,,0,,1,4*ln(1+n),4,6,0,multiplicative,no,n/a,Ratio of found cost to optimal cost,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,0.001,1,0,Approximate OBST,,,,1,0,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0196677496900048  (1996)],,"Cohen, Fredman",Weighted Binary Trees for Concurrent Searching,1996,https://www.sciencedirect.com/science/article/abs/pii/S0196677496900048,,,,0,0,#VALUE!,,,,,n: number of elements,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,0.001,1,0,Approximate OBST,,,,1,0,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0096300307001877  (2007)],,"Fatemi, Zamanifar, NematBakhsh",A new genetic approach to construct near-optimal binary search trees,2007,https://www.sciencedirect.com/science/article/abs/pii/S0096300307001877,,,,0,0,#VALUE!,,,,,n: number of elements,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
38,Optimal Binary Search Trees,0.001,0,0,Approximate OSTT,,,,1,0,,,,[https://arxiv.org/abs/2209.08024  (2022)],,"Berendsohn, Golinsky, Kaplan, Kozma",Fast approximation of search trees on trees with centroid trees,2022,https://arxiv.org/abs/2209.08024,,,,0,0,#VALUE!,,,,,n: number of elements,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,an optimal binary search tree (Optimal BST); sometimes called a weight-balanced binary tree; is a binary search tree which provides the smallest possible search time (or expected search time) for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
39,Nash Equilibria,1,1,0,2-player,356,,0,1,0,O(n^{(O(log n/eps^2))} (previously O(n^2 logn)????),,,[https://dl.acm.org/doi/10.1145/779928.779933 Lipton; Mehta (2003)],Lipton; Mehta,"Lipton, Markakis, Mehta",https://dl.acm.org/doi/10.1145/779928.779933,2003,https://dl.acm.org/doi/10.1145/779928.779933,,,,1,0,8,"n: 8,
m: 8,
mn: 8",2,O(n^{(O(log n/eps^2))} (previously O(n^2 logn)????),500,"n: dimension of payoff matrices
epsilon: (additive) tolerance error",mn,,0,Word RAM,words,#VALUE!,,(see sheet 2),,1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual equilibria values,0,0,,0,0,,"In game theory, the Nash equilibrium, named after the mathematician John Forbes Nash Jr., is a proposed solution of a non-cooperative game involving two or more players in which each player is assumed to know the equilibrium strategies of the other players, and no player has anything to gain by changing only his own strategy.",,,,,,,,,,9965784,0.0001003433348,,19931568569324,0,,2.98974E+19,0,,2,,,Robotics
38,Nash Equilibria,0,1,0,,,,,,,,,,[https://journals.flvc.org/FLAIRS/article/view/130546 Ganzfried (2022)],Ganzfried,Ganzfried,"Best Response Computation in Multiplayer
Imperfect-Information Stochastic Games",2022,https://journals.flvc.org/FLAIRS/article/view/130546,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,1,0,,,,,,,,,,[https://link.springer.com/chapter/10.1007/978-3-030-64096-5_1  (2020)],,"Ganzfried, Laughlin, Morefield ",Parallel Algorithm for Nash Equilibrium in Multiplayer Stochastic Games with Application to Naval Strategic Planning,2020,https://link.springer.com/chapter/10.1007/978-3-030-64096-5_1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,1,0,2-player,,,,,,,,,,"Daskalakis, Mehta, Papadimitriou (2006)","Daskalakis, Mehta, Papadimitriou ",A Note on Approximate Nash Equilibria,2006,https://link.springer.com/chapter/10.1007/11944874_27,,,,,,,,2,n^o(1/eps^2),,"n: dimension of payoff matrices
eps: (additive tolerance error), eps>0",,,,Word RAM,words,,,,,,0,,,,1,(3-5^0.5)/2 + eps,2.4,0,2,additive,yes,n/a,error from actual equilibria values,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,0,0,n-Player,,,,,,,,,,,"Inoue, Kobayashi ",An Additive Approximation Scheme for the Nash Social Welfare Maximization with Identical Additive Valuations,2022,https://link.springer.com/chapter/10.1007/978-3-031-06678-8_25,,,,,,,,,(nm/eps)^o(1/eps),,"n: numper of agents
m: number of goods
eps: approx factor",,,,Word RAM,words,,,,,,,,,,1,1 + eps,,2,0,multiplicative,yes,PTAS,factor from optimal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,n-player,,,,,,,,,,"Ortiz, Irfan","Ortiz, Irfan",FPTAS for Mixed-Strategy Nash Equilibria in Tree Graphical Games and Their Generalizations,2016,https://arxiv.org/abs/1602.05237,,,,,,,,,(n(mkk'/eps)^{mk'})^O(w),,"n: number of agents
m: maximum number of actions (bounded by a constant)
k: maximum local-hyperedge-set size
k': size of biggest hyperedge across all players
w: hypertree width",,,,Word RAM,words,,,O(nkm^k'),,,1,,,,1,1+ eps ?,,2,0,multiplicative ?,yes,FPTAS ?,error from actual equilibria values,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,n-player,,,,,,,,,,"Barman, Ligett, Piliouras ","Barman, Ligett, Piliouras ",Approximating Nash Equilibria in Tree Polymatrix Games,2015,https://link.springer.com/chapter/10.1007/978-3-662-48433-3_22,,,,,,8,mn: 8,,m^O(\log{m}(\log{m}+\log{n}-\log{eps})/eps^4),600,"n: number of agents
m: number of actions (bounded by constant)
eps: approx factor",mn,,,Word RAM,words,,,,,,,,1,Las Vegas,1,eps,1,0,1.99,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Chan, Ortiz",Computing Nash Equilibrium in Interdependent Defense Games,2015,https://ojs.aaai.org/index.php/AAAI/article/view/9302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Daskalakis, Mehta, Papadimitriou (2009)","Daskalakis, Mehta, Papadimitriou ",A Note on Approximate Nash Equilibria,2009,https://www.sciencedirect.com/science/article/pii/S0304397508009018,,,,,,3,n^2: 3,1,linear,10,"nxn: size of payoff matrix, values normalized to [0,1]",n^2,,,Word RAM,words,,,,,,,,,,1,1/2,2,0,2,additive,no,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Kontogiannis, Panagopoulou, Spirakis (1)","Kontogiannis, Panagopoulou, Spirakis ",Polynomial Algorithms for Approximating Nash Equilibria of Bimatrix Games,2006,https://link.springer.com/chapter/10.1007/11944874_26,,,,,,7,n^2: 7,1,polynomial,400,"nxn: size of payoff matrix, values normalized to [0,1]",n^2,,,Word RAM,words,,,,,,,,,,1,3/4,2,0,2,additive,no,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Kontogiannis, Panagopoulou, Spirakis (2)","Kontogiannis, Panagopoulou, Spirakis ",Polynomial Algorithms for Approximating Nash Equilibria of Bimatrix Games,2006,https://link.springer.com/chapter/10.1007/11944874_26,,,,,,7,n^2: 7,1,polynomial (n),400,"nxn: size of payoff matrix, values normalized to [0,1]
\lambda: minimum expected payoff",n^2,,,Word RAM,words,,,,,,,,,,1,(2+\lambda)/4,2,0,2,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Lipton, Markakis, Mehta","Lipton, Markakis, Mehta",Playing large games using simple strategies,2003,https://dl.acm.org/doi/abs/10.1145/779928.779933,,,,,,8,n^2: 8,2,n^O(ln n),500,nxn: size of payoff matrix,n^2,,,Word RAM,words,,,,,,,,,,1,eps,1,0,1.99,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Tsaknakis, Spirakis (2007)","Tsaknakis, Spirakis ",An Optimization Approach for Approximate Nash Equilibria,2007,https://link.springer.com/chapter/10.1007/978-3-540-77105-0_8,,,,,,7,n^2: 7,1,polynomial,400,"nxn: size of payoff matrix, values normalized to [0,1]",n^2,,,Word RAM,words,,,,,,,,,,1,0.3393,2.4,0,2,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Hazan, Krauthgamer",How Hard Is It to Approximate the Best Nash Equilibrium?,2011,https://epubs.siam.org/doi/abs/10.1137/090766991,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Laine, Fridovich-Keil, Chiu, Tomlin",The Computation of Approximate Generalized Feedback Nash Equilibria,2023,https://epubs.siam.org/doi/full/10.1137/21M142530X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,n-player,,,,,,,,,,"Daskalakis, Papadimitriou (2015)","Daskalakis, Papadimitriou ",Approximate Nash equilibria in anonymous games,2015,https://www.sciencedirect.com/science/article/pii/S0022053114000209,,,,,,,,1,"polynomial (n,m); exponential (1\eps)",,"n: number of players
m: number of strategies, normalized to [0,1], bounded by constant",,,,Word RAM,words,,,,,,,,,,1,eps,,0,1.99,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,n-player,,,,,,,,,,Daskalakis (2008),Daskalakis,An Efficient PTAS for Two-Strategy Anonymous Games,2008,https://link.springer.com/chapter/10.1007/978-3-540-92185-1_26,,,,,,,,1,poly(n)*(1/eps)^O(1/eps^2),,"n: number of players
ONLY 2 STRATEGIES!!",,,,Word RAM,words,,,,,,,,,,1,eps,,0,1.99,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,n-player,,,,,,,,,,"Daskalakis, Papadimitriou (2007) - 1","Daskalakis, Papadimitriou",Computing Equilibria in Anonymous Games,2007,https://ieeexplore.ieee.org/abstract/document/4389482,,,,,,,,1,linear,,"n: players
m: number of strategies (fixed)
\lambda: Lipschitz constant (might be <=1/n??)",,,,Word RAM,words,,,O(n^{m+1}),,,,,1,monte carlo ?,1,O(m^2 \lambda),,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,n-player,,,,,,,,,,"Daskalakis, Papadimitriou (2007) - 2","Daskalakis, Papadimitriou",Computing Equilibria in Anonymous Games,2007,https://ieeexplore.ieee.org/abstract/document/4389482,,,,,,,,3,O(n^{1/eps^2}),,"n: number of players
PNLY 2 STRATEGIES!!",,,,Word RAM,words,,,O(n^3) ?,,,,,1,monte carlo ?,1,eps,,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,n-player,,,,,,,,,,"Daskalakis, Papadimitriou (2008)","Daskalakis, Papadimitriou",Discretized Multinomial Distributions and Nash Equilibria in Anonymous Games,2008,https://ieeexplore.ieee.org/abstract/document/4690937,,,,,,,,2,N^O(\log{\log{N}/eps}),,"N: description size (i think thats n^{m+1} or nm^n where n is # players and m is # of strategies, maybe); also, this is a result for ""normal form games""",,,,Word RAM,words,,,,,,,,1,monte carlo ?,1,eps,,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,n-player,,,,,,,,,,"Babichenko, Barman, Peretz","Babichenko, Barman, Peretz",Simple approximate equilibria in large games,2014,https://dl.acm.org/doi/abs/10.1145/2600057.2602873,,,,,,,,3,O((nm^n)^{\log{\log{nm^n}}}),,"n: number of players
m: number of strategies",,,,Word RAM,words,,,nm^n,,,,,1,monte carlo,1,O(\log{n}+\log{m}),,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,0,0,n-player,,,,,,,,,,"Caragiannis, Fanelli, Gravin, Skopalik","Caragiannis, Fanelli, Gravin, Skopalik",Efficient Computation of Approximate Pure Nash Equilibria in Congestion Games,2011,https://ieeexplore.ieee.org/abstract/document/6108214,,,,,,,,1,"polynomial(n, e, 1/eps)",,"n: number of players
e: number of resources
eps: included in approx factor",,,,Word RAM,words,,,,,,,,,,1,2+eps,,,,multiplicative,yes,FPTAS ?,actual cost is optimal times factor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,"Anshelevich, Caskurlu","Anshelevich, Caskurlu",Exact and approximate equilibria for optimal group network formation,2011,https://www.sciencedirect.com/science/article/pii/S0304397511004725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Bhalgat, Chakraborty, Khanna","Approximating pure nash equilibrium in cut, party affiliation, and satisfiability games",2010,https://dl.acm.org/doi/abs/10.1145/1807342.1807353,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Christodoulou, Koutsoupias, Spirakis ",On the Performance of Approximate Equilibria in Congestion Games,2010,https://link.springer.com/article/10.1007/s00453-010-9449-2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Christodoulou, Mirrokni, Sidiropoulos ",Convergence and Approximation in Potential Games,2006,https://link.springer.com/chapter/10.1007/11672142_28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Nguyen, Tardos ",Approximate Pure Nash Equilibria via Lovász Local Lemma,2009,https://link.springer.com/chapter/10.1007/978-3-642-10841-9_16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Awasthi, Balcan, Blum, Sheffet, Vempala ",On Nash-Equilibria of Approximation-Stable Games,2010,https://link.springer.com/chapter/10.1007/978-3-642-16170-4_8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,n-player,,,,,,,,,,"Hémon, Rougemont, Santha ","Hémon, Rougemont, Santha ",Approximate Nash Equilibria for Multi-player Games,2008,https://link.springer.com/chapter/10.1007/978-3-540-79309-0_24,,,,,,,,1,polynomial,,n: number of players,,,,Word RAM,words,,,,,,,,1,monte carlo,1,(n-1)/n,,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Babichenko, Rubinstein",Communication complexity of approximate Nash equilibria,2017,https://dl.acm.org/doi/abs/10.1145/3055399.3055407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Ponsen, de Jong, Lanctot",Computing Approximate Nash Equilibria and Robust Best-Responses Using Sampling,2011,https://www.jair.org/index.php/jair/article/view/10734,,,,,,,,,,,,,,,,,,,,,,,,1,monte carlo,1,,,,,additive,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,n-player,,,,,,,,,,Barman,Barman,Approximating Nash Equilibria and Dense Subgraphs via an Approximate Version of Carathéodory's Theorem,2018,https://epubs.siam.org/doi/abs/10.1137/15M1050574,,,,,,,,2,n^O(\log{s}/eps^2),,"nxn: size of playoff matrices, entries normalized to [0,1]
s: number of nonzero entries
eps: approximation factor",,,,Word RAM,words,,,,,,,,,,1,eps,,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,n-player,,,,,,,,,,,"Briest, Goldberg, Roeglin",Approximate Equilibria in Games with Few Players,2008,https://arxiv.org/abs/0804.4524,,,,,,,,1,polynomial(n),,"k: number of players (SMALL, CONSTANT)
n: number of strategies for each player",,,,Word RAM,words,,,kn^k,,,,,,,1,1-1/k,,,,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,,0,,,,,,,,,,,,"Czumaj, Fasoulakis, Jurdziński ",Approximate Well-Supported Nash Equilibria in Symmetric Bimatrix Games,2014,https://link.springer.com/chapter/10.1007/978-3-662-44803-8_21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,,0,,,,,,,,,,,,"Fearnley, Goldberg, Savani, Sørensen ",Approximate Well-supported Nash Equilibria Below Two-thirds,2016,https://link.springer.com/article/10.1007/s00453-015-0029-3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,,0,,,,,,,,,,,,"Govindan, Wilson","Computing Nash equilibria by iterated polymatrix approximation
Author links open overlay panel",2004,https://www.sciencedirect.com/science/article/pii/S0165188903001088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,n-player,,,,,,,,,,"Deligkas, Fearnley, Savani, Spirakis ","Deligkas, Fearnley, Savani, Spirakis ",Computing Approximate Nash Equilibria in Polymatrix Games,2015,https://link.springer.com/article/10.1007/s00453-015-0078-7,,,,,,7,n^2: 7,1,poly * O(1/eps^2),400,"n: number of players
eps: approx factor, 0<eps<0.5
m: number of strategies, payoffs normalized to [0,1]",n^2,,,,,,,,,,,,,,1,0.5 + eps,2,0,2,additive,yes,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,0,0,,,,,,,,,,,,"Mcaleer, Lanier, Fox, Baldi",Pipeline PSRO: A Scalable Approach for Finding Approximate Nash Equilibria in Large Games,2020,https://proceedings.neurips.cc/paper/2020/hash/e9bcd1b063077573285ae1a41025f5dc-Abstract.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,1,0,2-player,,,,,,,,,,Barman,Barman,Approximating Nash Equilibria and Dense Bipartite Subgraphs via an Approximate Version of Caratheodory's Theorem,2015,https://dl.acm.org/doi/abs/10.1145/2746539.2746566,,,,,,,,2,n^O(\log{s}/epsilon^2),,"nxn: size of the payoff matrices
s: upper bound on nonzero entries (s<=n)",,,,Word RAM,word,,,,,,,,0,,1,epsilon,,0,1.99,additive,yes,PTAS ?,utility can be incresead at most by the factor if players choose different strategy,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Bosse, Byrka, Markakis (2007) (1)","Bosse, Byrka, Markakis ",New Algorithms for Approximate Nash Equilibria in Bimatrix Games,2007,https://link.springer.com/chapter/10.1007/978-3-540-77105-0_6,,,,,,7,n^2: 7,1,polynomial,400,"nxn: size of the payoff matrices, they are normalized to have values in [0,1]
epsilon>0: part of approximation factor",n^2,,,Word RAM,word,,,,,,,,,,1,0.38197+epsilon,2.4,0,2,additive,yes,n/a,utility can be incresead at most by the factor if players choose different strategy,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Bosse, Byrka, Markakis (2007) (2)","Bosse, Byrka, Markakis ",New Algorithms for Approximate Nash Equilibria in Bimatrix Games,2007,https://link.springer.com/chapter/10.1007/978-3-540-77105-0_6,,,,,,7,n^2: 7,1,polynomial,400,"nxn: size of the payoff matrices, they are normalized to have values in [0,1]
epsilon>0: part of approximation factor",n^2,,,Word RAM,word,,,,,,,,,,1,0.36392+epsilon,2.4,0,2,additive,yes,n/a,utility can be incresead at most by the factor if players choose different strategy,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0,,0,,,,,,,,,,,"Bosse, Byrka, Markakis (2010)","Bosse, Byrka, Markakis",New algorithms for approximate Nash equilibria in bimatrix games,2010,https://www.sciencedirect.com/science/article/pii/S0304397509006719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,,0,,,,,,,,,,,"Daskalakis, Papadimitriou (2009)","Daskalakis, Papadimitriou",On oblivious PTAS's for nash equilibrium,2009,https://dl.acm.org/doi/abs/10.1145/1536414.1536427,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Feder, Nazerzadeh, Saberi","Feder, Nazerzadeh, Saberi",Approximating nash equilibria using small-support strategies,2007,https://dl.acm.org/doi/abs/10.1145/1250910.1250961,,,,,,7,n^2: 7,1,polynomial,400,epsilon: part of approximation factor,n^2,,,Word RAM,word,,,,,,,,0,,1,1/2(1+epsilon),2.4,0,2,additive,yes,n/a,utility can be incresead at most by the factor if players choose different strategy,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,1,1,0,2-player,,,,,,,,,,"Kontogiannis, Spirakis ","Kontogiannis, Spirakis ",Efficient Algorithms for Constant Well Supported Approximate Equilibria in Bimatrix Games,2007,https://link.springer.com/chapter/10.1007/978-3-540-73420-8_52,,,,,,7,mn: 7,,polynomial,400,"mxn: size of payoff matrix, values normalized to [0,1]",mn,,,,,,,,,,,,,,1,0.658,2,0,2,additive,no,n/a,max incentive to deviate from startegy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Nash Equilibria,0.001,0,0,,,,,,,,,,,"Tsaknakis, Spirakis (2010)","Tsaknakis, Spirakis ",Practical and Efficient Approximations of Nash Equilibria for Win-Lose Games Based on Graph Spectra,2010,https://link.springer.com/chapter/10.1007/978-3-642-17572-5_31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E log V),,,[- Greedy (-)],Greedy,,,-,-,,,,,,5.01,n: 5.01,3,O(m log n),11,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/10.1145/2529989,0,Word RAM,words,#N/A,E: 3,O(E),Requires keeping a sorted list of edge weights,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/2529989,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,MWM in Bipartite Graphs (Approximate),,,,1,0,O(E*sqrt(V)*log(V/eps)),,,"[https://epubs.siam.org/doi/epdf/10.1137/0218069 Gabow, Tarjan (implicit) (1989)]","Gabow, Tarjan (implicit)","Gabow, Tarjan",Faster Scaling Algorithms for Network Problems,1989,https://epubs.siam.org/doi/epdf/10.1137/0218069,,,,,,5.5,n: 5.5,3,O(m*sqrt(n)*log(n/eps)),16.1,"n: number of vertices
m: number of edges
eps: error parameter",n,https://dl.acm.org/doi/10.1145/2529989,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1-eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/2529989,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E*sqrt(V log V)*log(V/eps)),,,"[https://web.eecs.umich.edu/~pettie/matching/Gabow-Tarjan-scaling-general-graph-matching.pdf Gabow, Tarjan (implicit) (1991)]","Gabow, Tarjan (implicit)","Gabow, Tarjan",Faster Scaling Algorithms for General Graph-Matching Problems,1991,https://web.eecs.umich.edu/~pettie/matching/Gabow-Tarjan-scaling-general-graph-matching.pdf,,,,,,5.5,n: 5.5,3,O(m*sqrt(n log n)*log(n/eps)),16.2,"n: number of vertices
m: number of edges
eps: error parameter",n,https://dl.acm.org/doi/10.1145/2529989,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1-eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/2529989,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E),,,[https://link.springer.com/chapter/10.1007/3-540-49116-3_24 Preis (1999)],Preis,Preis,Linear Time 1/2-Approximation Algorithm for Maximum Weighted Matching in General Graphs,1999,https://link.springer.com/chapter/10.1007/3-540-49116-3_24,,,,,,5,n: 5,3,O(m),10,"n: number of vertices
m: number of edges",n,https://link.springer.com/chapter/10.1007/3-540-49116-3_24,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E/eps),,,"[https://link.springer.com/chapter/10.1007/978-3-540-45198-3_2 Drake, Hougardy (2003)]","Drake, Hougardy","Drake, Hougardy",Improved Linear Time Approximation Algorithms for Weighted Matchings,2003,https://link.springer.com/chapter/10.1007/978-3-540-45198-3_2,,,,,,5,n: 5,3,O(m/eps),10,"n: number of vertices
m: number of edges
eps: error parameter",n,https://dl.acm.org/doi/10.1145/2529989,0,Word RAM,words,#VALUE!,,,,,,,0,,1,2/3 - eps,2,2.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/2529989,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E log(1/eps)),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0020019004001565 Pettie, Sanders (2004)]","Pettie, Sanders","Pettie, Sanders",A simpler linear time 2/3−ε approximation for maximum weight matching,2004,https://www.sciencedirect.com/science/article/abs/pii/S0020019004001565,,,,,,5,n: 5,3,O(m log(1/eps)),10,"n: number of vertices
m: number of edges
eps: error parameter",n,https://www.sciencedirect.com/science/article/abs/pii/S0020019004001565,0,Word RAM,words,#VALUE!,,,,,,,0,,1,2/3 - eps,2,2.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,0.001,1,0,"MWM, General (Approximate)",,,,1,0,O(log V),,,[https://arxiv.org/abs/cs/0410047 Hoepman (2004)],Hoepman,Hoepman,Simple Distributed Weighted Matchings,2004,https://arxiv.org/abs/cs/0410047,,,,,,2,n: 2,3,O(log n) expected,,"n: number of vertices
m: number of edges",n,https://link.springer.com/chapter/10.1007/978-3-540-68111-3_74,0,CREW PRAM,words,#VALUE!,,,,,,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,1,O(E)?,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E/eps^2 (log V)^3),,,"[https://web.eecs.umich.edu/~pettie/papers/ApproxMWM.pdf Duan, Pettie [Theorem 1] (2010)]","Duan, Pettie [Theorem 1]","Duan, Pettie",Approximating Maximum Weight Matching in Near-linear Time,2010,https://web.eecs.umich.edu/~pettie/papers/ApproxMWM.pdf,,,,,,5.01,n: 5.01,3,O(m/eps^2 (log n)^3),13,"n: number of vertices
m: number of edges
eps: error parameter",n,https://web.eecs.umich.edu/~pettie/papers/ApproxMWM.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E(log V)(log(1/eps))),,,"[https://web.eecs.umich.edu/~pettie/papers/ApproxMWM.pdf Duan, Pettie [Theorem 2] (2010)]","Duan, Pettie [Theorem 2]","Duan, Pettie",Approximating Maximum Weight Matching in Near-linear Time,2010,https://web.eecs.umich.edu/~pettie/papers/ApproxMWM.pdf,,,,,,5.01,n: 5.01,3,O(m(log n)(log(1/eps))),11,"n: number of vertices
m: number of edges
eps: error parameter",n,https://web.eecs.umich.edu/~pettie/papers/ApproxMWM.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/4 - eps,2,2.33,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E(log V)(log(1/eps))),,,"[https://www.or.uni-bonn.de/~hougardy/paper/43matching.pdf Hanke, Hougardy [Theorem 9] (2010)]","Hanke, Hougardy [Theorem 9]","Hanke, Hougardy",New Approximation Algorithms for the Weighted Matching Problem,2010,https://www.or.uni-bonn.de/~hougardy/paper/43matching.pdf,,,,,,5.01,n: 5.01,3,O(m(log n)(log(1/eps))),11,"n: number of vertices
m: number of edges
eps: error parameter",n,https://www.or.uni-bonn.de/~hougardy/paper/43matching.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/4 - eps,2,2.33,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E(log V)^2(log(1/eps))^2)?,,,"[https://www.or.uni-bonn.de/~hougardy/paper/43matching.pdf Hanke, Hougardy [Theorem 10] (2010)]","Hanke, Hougardy [Theorem 10]","Hanke, Hougardy",New Approximation Algorithms for the Weighted Matching Problem,2010,https://www.or.uni-bonn.de/~hougardy/paper/43matching.pdf,,,,,,5.01,n: 5.01,3,O(m(log n)^2(log(1/eps))^2)?,12,"n: number of vertices
m: number of edges
eps: error parameter",n,https://www.or.uni-bonn.de/~hougardy/paper/43matching.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,4/5 - eps,2,2.25,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O(E/eps * log(1/eps)),,,"[https://arxiv.org/abs/1112.0790 Duan, Pettie, Su (2011)]","Duan, Pettie, Su","Duan, Pettie, Su",Scaling algorithms for approximate and exact maximum weight matching,2011,https://arxiv.org/abs/1112.0790,,,,,,5,n: 5,3,O(m/eps * log(1/eps)),10,"n: number of vertices
m: number of edges
eps: error parameter",n,https://arxiv.org/abs/1112.0790,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General, Integer Weights (Approximate)",,,,1,0,O(E/eps * log N),,,"[https://arxiv.org/abs/1112.0790 Duan, Pettie, Su (2011)]","Duan, Pettie, Su","Duan, Pettie, Su",Scaling algorithms for approximate and exact maximum weight matching,2011,https://arxiv.org/abs/1112.0790,,,,,,5,n: 5,3,O(m/eps * log N),10,"n: number of vertices
m: number of edges
eps: error parameter
N: largest edge weight",n,https://arxiv.org/abs/1112.0790,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,1,1,0,"MWM, General (Approximate)",,,,1,0,O((log V)^2),,,"[https://link.springer.com/chapter/10.1007/978-3-642-40047-6_66 Birn, Osipov, Sanders, Schulz, Sitchinava (2013)]","Birn, Osipov, Sanders, Schulz, Sitchinava","Birn, Osipov, Sanders, Schulz, Sitchinava",Efficient Parallel and External Matching,2013,https://link.springer.com/chapter/10.1007/978-3-642-40047-6_66,,,,,,2,n: 2,3,O((log n)^2),2,"n: number of vertices
m: number of edges",n,https://link.springer.com/chapter/10.1007/978-3-642-40047-6_66,0,CREW PRAM,words,#VALUE!,,,,,,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,1,O(E)?,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
40,Maximum-Weight Matching,0.001,1,0,,,,,1,0,,,,[https://www.osti.gov/biblio/1454500 Azad et al. (2018)],Azad et al.,"Azad, Buluc, Li, Wang, Langguth",A distributed-memory approximation algorithm for maximum weight perfect bipartite matching,2018,https://www.osti.gov/biblio/1454500,,,,,,,,,,,"n: number of vertices
m: number of edges",n,,,,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,,,,,,,4,,,Combinatorics
42,Discrete Fourier Transform,1,1,0,Nonequispaced Fourier Transform,,,,1,0,O(n log n + n log(1/eps)),,,"[https://epubs.siam.org/doi/10.1137/0914081 Dutt, Rohklin (1993)]","Dutt, Rohklin","Dutt, Rohklin",Fast Fourier Transforms for Nonequispaced Data,1993,https://epubs.siam.org/doi/10.1137/0914081,,,,,,4,n: 4,3,O(n log n + n log(1/eps)),11,"n: number of nodes
eps: precision",n,,0,Word RAM,words,3,"n: 3
eps: 2",O(n log(1/eps)),,1,0,0,0,,1,eps,1,0,1.99,additive,yes,n/a,floating point precision,0,0,,0,0,,"In mathematics, the discrete Fourier transform (DFT) converts a finite sequence of equally-spaced samples of a function into a same-length sequence of equally-spaced samples of the discrete-time Fourier transform (DTFT), which is a complex-valued function of frequency.",,,,,,,,,,,,,,,,,,,,,,Signal Processing
47,Eigenvalues (Iterative Methods),2,1,0,Eigenpair with the Largest Eigenvalue,397,,0,1,0,O(n^2) per iteration,,,[https://onlinelibrary.wiley.com/doi/pdf/10.1002/zamm.19290090105?casa_token=xSwK6PkV010AAAAA:j_1-JKs0GG-KuwUUyM_dIt8kmOa5z6lvp_GABgDryAYxKdYvChyNGA9VA5CZLyAurWOVYPRn45geRTFk Power Iteration (1929)],Power Iteration,"Mises, Pollaczek-Geiringer",,1929,https://onlinelibrary.wiley.com/doi/pdf/10.1002/zamm.19290090105?casa_token=xSwK6PkV010AAAAA:j_1-JKs0GG-KuwUUyM_dIt8kmOa5z6lvp_GABgDryAYxKdYvChyNGA9VA5CZLyAurWOVYPRn45geRTFk,1,1,https://en.wikipedia.org/wiki/Power_iteration,1,0,3,"n: 5,
n^2: 3",3,$O(n^2)$ per iteration,20,n: dimension of matrix,n^2,,,Word RAM,words,,"n: 3,
n^2: 2.5",O(n),Derived: Stores an auxiliary vector,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual equilibria values,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),2,1,0,Eigenpair closest to mu; Any eigenpair; Any eigenvalue,398,,0,1,0,O(n^2) per iteration,,,[https://onlinelibrary.wiley.com/doi/abs/10.1002/zamm.19210010104 Inverse iteration (1921)],Inverse iteration,Pohlhausen,Berechnung der Eigenschwingungen statisch-bestimmter Fachwerke,1921,https://onlinelibrary.wiley.com/doi/abs/10.1002/zamm.19210010104,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2) per iteration,20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2),Need to compute and store $(A-mu*I)^{(-1)}$,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),2,1,0,Any eigenpair; Any eigenvalue,399,,0,1,0,O(n^2) per iteration,,,[- Rayleigh quotient iteration (1940)],Rayleigh quotient iteration,,,1940,-,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2) per iteration,20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2),Need to compute and store $(A-mu_i*I)^{(-1)}$,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,https://en.wikipedia.org/wiki/Rayleigh_quotient_iteration#Algorithm,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,Eigenpair closest to mu; Any eigenpair; Any eigenvalue,400,,0,1,0,O(n^2),,,[- LOBPCG algorithm (1948)],LOBPCG algorithm,,,1948,-,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2),20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 3,
n^2: 2.5",O(n)?,Requires only a constant number of $O(n)$-sized vectors per iteration,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,https://en.wikipedia.org/wiki/LOBPCG,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,Any eigenvalue,401,,0,1,0,O(n^2) per iteration,,,[- Bisection method (1985)],Bisection method,,,1985,-,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2) per iteration,20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2)?,Computing characteristic polynomial takes $O(n^2)$ space (via e.g. Faddeev–LeVerrier algorithm); rest of algo can be done in $O(n)$ space (related to root computation),1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,Any eigenvalue,402,,0,1,0,O(n^2) per iteration,,,[- Laguerre iteration (1940)],Laguerre iteration,,,1940,-,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2) per iteration,20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2)?,^ see above,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,https://archive.org/details/numericalmethods00form,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,All eigenvalues; Any eigenvalue,403,,0,1,0,O(n^2),,,[https://academic.oup.com/comjnl/article/4/4/332/432033 QR algorithm (1962)],QR algorithm,Francis,The QR Transformation—Part 2,1962,https://academic.oup.com/comjnl/article/4/4/332/432033,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2),20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2),Computes and stores QR factorization at each iteration,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,All eigenvalues; Any eigenvalue,404,,0,1,0,O(n^2),,,[https://gdz.sub.uni-goettingen.de/id/PPN243919689_0030 Jacobi eigenvalue algorithm (1846)],Jacobi eigenvalue algorithm,,,1846,https://gdz.sub.uni-goettingen.de/id/PPN243919689_0030,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2),20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2)?,Computes and stores results of GSG^T iterations,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,All eigenvalues; Any eigenvalue,405,,0,1,0,O(nlogn),,,[https://link.springer.com/content/pdf/10.1007/BF01389480.pdf Divide-and-conquer (1986)],Divide-and-conquer,"Krishnakumar, Morf",Eigenvalues of a Symmetric Tridiagonal Matrix: A Divide-and-Conquer Approach ,1986,https://link.springer.com/content/pdf/10.1007/BF01389480.pdf,,,,1,4->5,2.51,"n: 4,
n^2: 2.51",3,O(n \log n),11,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2),Stores reduction to tridiagonal form; recursion (S(n)=2S(n/2)+O(n^2)) should work out to O(n^2),1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,All eigenpairs; Eigenpair closest to mu; Any eigenpair; Any eigenvalue; All eigenvalues,406,,0,1,0,O(n^2),,,[https://www.scirp.org/(S(czeh2tfqyw2orz553k1w0r45))/reference/ReferencesPapers.aspx?ReferenceID=530065 Homotopy method (1992)],Homotopy method,Liao,The Proposed Homotopy Analysis Technique for the Solution of Nonlinear Problems,1992,https://www.scirp.org/(S(czeh2tfqyw2orz553k1w0r45))/reference/ReferencesPapers.aspx?ReferenceID=530065,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2),20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2)??,Conservative bound on space used per iteration,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,Eigenpair closest to mu; Any eigenpair; Any eigenvalue,407,,0,1,0,O(n^2),,,[https://journals.aps.org/pr/abstract/10.1103/PhysRev.46.828 Folded spectrum method (1934)],Folded spectrum method,MacDonald,On the Modified Ritz Variation Method,1934,https://journals.aps.org/pr/abstract/10.1103/PhysRev.46.828,,,,0,0,3,"n: 5,
n^2: 3",3,O(n^2),20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 3,
n^2: 2.5",O(n)?,Requires only a constant number of O(n)-sized vectors per iteration; matrix-to-vector multiplication only requires O(n) aux space,1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),2,1,0,Any eigenpair; Any eigenvalue,408,,0,1,0,O(n),,,[https://www.cs.utexas.edu/users/inderjit/public_papers/DesignMRRR_toms06.pdf MRRR algorithm (1999)],MRRR algorithm,"Dhillon, Parlett, Vomel",The Design and Implementation of the MRRR Algorithm,1999,https://www.cs.utexas.edu/users/inderjit/public_papers/DesignMRRR_toms06.pdf,2,1,http://www.cs.utexas.edu/~inderjit/public_papers/DesignMRRR_toms06.pdf,1,5->6,2.5,"n: 3,
n^2: 2.5",3,O(n),10,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2),Need to compute and store some matrix of the form $(A-mu*I)^{(-1)}$ (for inverse iteration-like uses),1,0,,0,,0,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
47,Eigenvalues (Iterative Methods),1,1,0,Any eigenvalue,,,,1,0,O(n^2) per iteration,,,,Rayleigh-Ritz method,,,1908?,-,,,,,,3,"n: 5,
n^2: 3",3,O(n^2) per iteration,20,n: dimension of matrix,n^2,,,Word/Real RAM,words,,"n: 5,
n^2: 3",O(n^2),Stores orthonormal basis,1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual eigenvalue(s),0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,409,,0,1,0,O(log((b-a)/epsilon),,,[- Bisection method (1820)],Bisection method,,,1820,-,,,,0,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store current endpoint values; iterations take $O(1)$ time and thus $O(1)$ space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Bisection_method,,,,,,,,,,,1000,,,,,,,,,6,,,Numerical Analysis
48,Root Computation,1,1,0,General Root Computation,410,,0,1,0,O(n),,,[- False position method (1690)],False position method,,,1690,-,1,1,https://www.geeksforgeeks.org/program-for-method-of-false-position/,1,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store current endpoint values; iterations take $O(1)$ time and thus $O(1)$ space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://archive.org/details/historyofmathema031897mbp,,,,,,,,,,,1000,1,,1000000,1,,1000000000,1,,6,,,Numerical Analysis
48,Root Computation,1,1,0,Root Computation with continuous first derivative,411,,0,1,0,(order of convergence = 2),,,[ Newton's method (1940)],Newton's method,,,1940,,,,,0,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store current estimate $x_i$ and the derivative $f'$ (assuming this takes $O(1)$ space); iterations take $O(1)$ time and thus $O(1)$ space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,,,,,,,,,,,,1000,,,,,,,,,6,,,Numerical Analysis
48,Root Computation,1,1,0,Root Computation with continuous second derivative,412,,0,1,0,(order of convergence = 3),,,[- Halley's method (1940)],Halley's method,,,1940,-,,,,0,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store current estimate x_i and the derivatives f' and f'' (assuming this takes O(1) space); iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Halley%27s_method,,,,,,,,,,,1000,,,,,,,,,6,,,Numerical Analysis
48,Root Computation,1,1,0,General Root Computation,413,,0,1,0,(order of convergence = phi~1.618),,,[- Secant method (1940)],Secant method,,,1940,-,,,,0,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store previous 2 estimates x_i and x_{i-1}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Secant_method,,,,,,,,,,,1000,,,,,,,,,6,,,Numerical Analysis
48,Root Computation,1,1,0,General Root Computation,414,,0,1,0,(order of convergence = sqrt(2)),,,[https://ieeexplore.ieee.org/document/1084580/ Ridders' method (1979)],Ridders' method,Ridders,A new algorithm for computing a single root of a real continuous function,1979,https://ieeexplore.ieee.org/document/1084580/,,,,0,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store previous 2 estimates x_i and x_{i-1}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,,,,,,,,,,,,1000,,,,,,,,,6,,,Numerical Analysis
48,Root Computation,1,1,0,General Root Computation,415,,0,1,0,(order of convergence ~ 1.84),,,[https://www.jstor.org/stable/2001916 Muller's method (1956)],Muller's method,Muller,A Method for Solving Algebraic Equations Using an Automatic Computer,1956,https://www.jstor.org/stable/2001916,,,,0,0,3,n_max: 3,3,O(n_{max}),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,1,"a: 1,
b: 1,
n_max: 1",O(1),"Store previous 3 estimates x_i, x_{i-1}, and x_{i-2}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",1,0,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,,,,,,,,,,,,1000000,,,,,,,,,6,,,Numerical Analysis
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,(order of convergence ~ 1.442),,,[https://link.springer.com/article/10.1007/BF01934364 Illinois Algorithm (1971)],Illinois Algorithm,"Dowell, Jarratt",A modified regula falsi method for computing the root of an equation,1971,https://link.springer.com/article/10.1007/BF01934364,,,,,,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,O(1),"Store current endpoint values; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Regula_falsi,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,?,,,[https://link.springer.com/article/10.1007/BF01951936 Anderson–Björck algorithm (1973)],Anderson–Björck algorithm,"Anderson, Björck",A new high order method of regula falsi type for computing a root of an equation,1973,https://link.springer.com/article/10.1007/BF01951936,,,,,,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,O(1),"Store current endpoint values; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Regula_falsi,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,(order of convergence = sqrt(k_2) under certain conditions),,,[- ITP Method (1940?)],ITP Method,,,1940?,-,,,,,,3,n_max: 3,3,O(n_0+log((b-a)/epsilon)),10,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
k_1, k_2: truncation parameters; requires k_1>0 and k_2 in [1, 1+phi)
n_0: projection parameter; requires n_0 >= 0",n_max,,1,Word/Real RAM,words,,,O(1),"Store current endpoint values; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/ITP_method,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,Root Computation with continuous derivatives (up to d),,,0,1,0,(order of convergence = d+1),,,[- Householder's Method (1940(?))],Householder's Method,,,1940(?),-,,,,0,0,3,n_max: 3,3,O(d*n_max)?,10,"epsilon: (additive) tolerance error
d: number of derivatives being used
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,O(d),"Store current estimate x_i and the derivatives f' through f^{(d)} (assuming these take O(1) space each); iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Halley%27s_method,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,"(order of convergence = 2, but under very specific conditions)",,,[ Steffensen's method (1940(?))],Steffensen's method,,,1940(?),,,,,0,0,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,O(1),"Store previous estimate x_i; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Steffensen%27s_method,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,(order of convergence ~ 1.84),,,[ Inverse quadratic interpolation (1940(?))],Inverse quadratic interpolation,,,1940(?),,,,,0,0,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,O(1),"Store previous 3 estimates x_i, x_{i-1}, and x_{i-2} along with function values f_i, f_{i-1}, f_{i-2}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Inverse_quadratic_interpolation,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,,,,[https://books.google.com/books?vid=ISBN0130223352 Brent-Dekker Method (1973)],Brent-Dekker Method,Brent,Algorithms for Minimization Without Derivatives,1973,https://books.google.com/books?vid=ISBN0130223352,,,,0,0,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,O(1),"Store previous 3 estimates x_i, x_{i-1}, and x_{i-2} along with function values f_i, f_{i-1}, f_{i-2}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,https://en.wikipedia.org/wiki/Brent%27s_method,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,0,0,"General Root Computation, given initial intervals?",,,0,1,0,(order of convergence ~ 1?),,,[https://dl.acm.org/doi/abs/10.1145/1993886.1993920  (2011)],,"Kerber, Sagraloff",Efficient real root approximation,2011,https://dl.acm.org/doi/abs/10.1145/1993886.1993920,,,,0,0,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,,,,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,1,0,General Root Computation,,,0,1,0,(order of convergence ~ 3?),,,[https://www.researchgate.net/profile/Muhammad-Noor-8/publication/266261349_Variational_Iteration_Technique_and_Some_Methods_for_the_Approximate_Solution_of_Nonlinear_Equations/links/542b8cc20cf29bbc126a8986/Variational-Iteration-Technique-and-Some-Methods-for-the-Approximate-Solution-of-Nonlinear-Equations.pdf?_sg%5B0%5D=started_experiment_milestone&origin=journalDetail&_rtd=e30%3D  (2014)],,"Shah, Noor",Variational Iteration Technique and Some Methods for the Approximate Solution of Nonlinear Equations,2014,https://www.researchgate.net/profile/Muhammad-Noor-8/publication/266261349_Variational_Iteration_Technique_and_Some_Methods_for_the_Approximate_Solution_of_Nonlinear_Equations/links/542b8cc20cf29bbc126a8986/Variational-Iteration-Technique-and-Some-Methods-for-the-Approximate-Solution-of-Nonlinear-Equations.pdf?_sg%5B0%5D=started_experiment_milestone&origin=journalDetail&_rtd=e30%3D,,,,0,0,3,n_max: 3,3,O(n_max),10,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",n_max,,1,Word/Real RAM,words,,,,,,,,0,,1,epsilon,1,0,1.99,additive,yes,n/a,error from actual root,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,k-ANNS,419,,,1,0,O(nlogn),,,[https://doi.org/10.1109/TPAMI.2018.2889473 Hierarchical Navigable Small World (HNSW) (2018)],Hierarchical Navigable Small World (HNSW),"Malkov, Yashunin",Efficient and Robust Approximate Nearest Neighbor Search Using Hierarchical Navigable Small World Graphs,2018,https://doi.org/10.1109/TPAMI.2018.2889473,,,,0,0,4,n: 4,3,O(nlogn),11,"n: number of elements
M: heuristic choice -- number of closest neighbors for a part of the algo",n,,,,bytes of memory,1,"n: 1,
M: 3",O(M),"https://arxiv.org/abs/1603.09320, ""Memory usage is proportional to choice of M""",0,1,,0,,1,1-O(1)?,2,2.9,0,multiplicative,yes?,n/a,proportion of the true K nearest neighbors found,1,0,,0,0,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
49,Nearest Neighbor Search,1,1,0,k-ANNS,420,,,1,0,"O(nLkt) [pre-processing]
O(L(kt+dnP_2^k)) [query-time]",,,[http://infolab.stanford.edu/~ullman/mmds/ch3n.pdf Locality-sensitive hashing (2010)],Locality-sensitive hashing,"Leskovec, Rajaraman, Ullman",3 - Finding Similar Items,2010,http://infolab.stanford.edu/~ullman/mmds/ch3n.pdf,,,,0,0,3,"n: 3,
k: 3,
L: 3,
t: 3,
d: 3",3,"$O(nLkt)$ [pre-processing]
$O(L(kt+dnP_2^k))$ [query-time]",10,"$n$: number of elements
$L$: number of hash tables
$k$: width parameter
$t$: time to evaluate a function
$d$: dimensionality of the data
$P_1, P_2$: Probabilities inherent in the hash functions
$c$: approximation factor",n,,0,,hash table cells,3,"n: 3,
L: 3",O(nL),https://en.wikipedia.org/wiki/Locality-sensitive_hashing#LSH_algorithm_for_nearest_neighbor_search,0,0,,0,,1,1-O(1)?,2,2.9,0,multiplicative,yes?,n/a,proportion of the true K nearest neighbors found,0,0,,0,0,https://www.cambridge.org/core/books/mining-of-massive-datasets/finding-similar-items/FDDA225F039792324F28D73D26950E89,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
49,Nearest Neighbor Search,1,1,0,k-ANNS for a dense 3D map of geometric points,421,,,1,0,O(k),,,[http://www.araa.asn.au/acra/acra2013/papers/pap148s1-file1.pdf Projected radial search (2013)],Projected radial search,"Bewley, Upcroft",Advantages of Exploiting Projection Structure for Segmenting Dense 3D Point Clouds,2013,http://www.araa.asn.au/acra/acra2013/papers/pap148s1-file1.pdf,,,,0,0,3,k: 3,3,O(k),10,k: number of neighbors to find,n,,,Word RAM,words,1,n: 1,O(1),Derived: There are 5 local variables and no tables or lists aside from input/output,1,0,,0,,1,1-O(1)?,2,2.9,0,multiplicative,yes?,n/a,proportion of the true K nearest neighbors found,0,0,,0,0,,,,,,,,,,,,1000,,,,,,,,,4,,,Combinatorics
49,Nearest Neighbor Search,1,1,0,k-ANNS,422,,,1,0,Varies by codebook structure,,,[ Compression/Clustering [Vector Quantization] (1992)],Compression/Clustering [Vector Quantization],,,1992,,,,,1,5->6,3,n: 3,1,Varies by codebook structure,10,n: number of elements,n,,,,,#VALUE!,,Varies by codebook structure,Table 2,0,0,,0,,1,1-O(1)?,2,2.9,0,multiplicative,yes?,n/a,proportion of the true K nearest neighbors found,0,0,,0,0,,,,,,,,,,,,1000,,,,,,,,,4,,,Combinatorics
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,[https://dl.acm.org/doi/abs/10.1145/1806907.1806912 NN1 (2010)],NN1,"Tao, Yi, Sheng, Kalnis",Efficient and accurate nearest neighbor and closest pair search in high-dimensional space,2010,https://dl.acm.org/doi/abs/10.1145/1806907.1806912,,,,,,2.5,n: 2.5,3,O(E(dn/B)^0.5),6,"E: height of LSB tree
d: number of dimensions
n: number points
B: number of words on each external memory page
assumes d=O(B)""",n,,,I/O-model,words,,,O((dn/B)^1.5) ?,https://dl.acm.org/doi/abs/10.1145/1806907.1806912,0,1,,1,? probabalistic,1,4,2.4,4,0,multiplicative,no,n/a,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,"[https://dl.acm.org/doi/abs/10.1145/1806907.1806912 KNN - Tao, Yi, Sheng, Kalnis (2010)]","KNN - Tao, Yi, Sheng, Kalnis","Tao, Yi, Sheng, Kalnis",Efficient and accurate nearest neighbor and closest pair search in high-dimensional space,2010,https://dl.acm.org/doi/abs/10.1145/1806907.1806912,,,,,,2.5,n: 2.5,3,O(E(dn/B)^0.5 \log{n}) ?,,"E: height of LSB tree
d: number of dimensions
n: number points
B: number of words on each external memory page
assumes d=O(B)""",n,,,I/O-model,words,,,,,,,,1,? probabalistic,1,4,2.4,4,0,multiplicative,no,n/a,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,[https://dl.acm.org/doi/10.1145/3589282  (2023)],,"Gao, Long",High-Dimensional Approximate Nearest Neighbor Search: with Reliable and Efficient Distance Comparison Operations,2023,https://dl.acm.org/doi/10.1145/3589282,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,[https://ieeexplore.ieee.org/document/10268927  (2023)],,"Liu, Yinchai, Wei, Han, Tao, Zhao, Li, Sun",Secure Cloud-Aided Approximate Nearest Neighbor Search on High-Dimensional Data,2023,https://ieeexplore.ieee.org/document/10268927,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,ANNS,,,,,,,,,[https://ieeexplore.ieee.org/document/9942356  (2022)],,"Li, Wang, Zhang, Wang, Fan, Li, Wang",Deep Learning for Approximate Nearest Neighbour Search: A Survey and Future Directions,2022,https://ieeexplore.ieee.org/document/9942356,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,ANNS,,,,,,,,,[https://ieeexplore.ieee.org/document/9101839  (2020)],,"Li, Zhang, Sun, Wang, Tsang, Lin",I/O Efficient Approximate Nearest Neighbour Search based on Learned Functions,2020,https://ieeexplore.ieee.org/document/9101839,,,,,,,,,,,,,,,I/O model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,[https://proceedings.mlr.press/v89/lejeune19a.html adaptive kNN algorithm (2019)],adaptive kNN algorithm,"LeJeune, Heckel, Baraniuk",0.001,2019,https://proceedings.mlr.press/v89/lejeune19a.html,,,,,,,,,O(n) + O(k\log{n}) ?,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,ANNS,,,,,,,,,[https://dl.acm.org/doi/abs/10.1145/3318464.3380600  (2020)],,"Li, Zhang, Andersen, He",Improving Approximate Nearest Neighbor Search through Learned Adaptive Early Termination,2020,https://dl.acm.org/doi/abs/10.1145/3318464.3380600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,,,,,,,,,,[https://dl.acm.org/doi/abs/10.1145/3318464.3386131  (2020)],,"Yang, Li, Fang, Wei",PASE: PostgreSQL Ultra-High-Dimensional Approximate Nearest Neighbor Search Extension,2020,https://dl.acm.org/doi/abs/10.1145/3318464.3386131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,"[https://openaccess.thecvf.com/content_cvpr_2013/html/Ge_Optimized_Product_Quantization_2013_CVPR_paper.html Ge, He, Ke, Sun (2013)]","Ge, He, Ke, Sun","Ge, He, Ke, Sun",Optimized Product Quantization for Approximate Nearest Neighbor Search,2013,https://openaccess.thecvf.com/content_cvpr_2013/html/Ge_Optimized_Product_Quantization_2013_CVPR_paper.html,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,[https://ieeexplore.ieee.org/abstract/document/5432202  (2011)],,"Jégou, Douze, Schmid",Product Quantization for Nearest Neighbor Search,2011,https://ieeexplore.ieee.org/abstract/document/5432202,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,k-ANNS,,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/258533.258653 Kleinberg (1) (1997)],Kleinberg (1),Kleinberg,"Two Algorithms for Nearest-Neighbor Search
in High Dimensions",1997,https://dl.acm.org/doi/pdf/10.1145/258533.258653,,,,,,7,n: 7,1,O(k+(d\log^2{d})(d+\log{n})) + O(f(n)^d))?,400,"k: number of neighbors to search for
n: number of elements
d: number of dimensions (in euclidean space)",n,https://dl.acm.org/doi/pdf/10.1145/258533.258653,0,(Motwani and Raghavan's) RAM,words,,,O(n\log{d})^{2d}),https://dl.acm.org/doi/pdf/10.1145/258533.258653,0,1,,1,Monte Carlo,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/258533.258653 Kleinberg (2) (1997)],Kleinberg (2),Kleinberg,"Two Algorithms for Nearest-Neighbor Search
in High Dimensions",1997,https://dl.acm.org/doi/pdf/10.1145/258533.258653,,,,,,4,n: 4,3,O(d^2 n \log^2{n} (\log^2{d} + \log{d} \log{\log{n})) + O(n+d \log^3{n}) ,12.1,"n: number of elements
d: number of dimensions (in euclidean space)",n,https://dl.acm.org/doi/pdf/10.1145/258533.258653,0,(Motwani and Raghavan's) RAM,words,,,O(dn \log^2{n} (\log^2{d} + \log{d} \log{\log{n})),https://dl.acm.org/doi/pdf/10.1145/258533.258653,0,1,,1,Monte Carlo,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,"[https://dl.acm.org/doi/abs/10.1145/293347.293348 ANNS - Arya, Mount, Netanyahu, Silverman, Wu

 (1998)]","ANNS - Arya, Mount, Netanyahu, Silverman, Wu

","Arya, Mount, Netanyahu, Silverman, Wu

",An optimal algorithm for approximate nearest neighbor searching fixed dimensions,1998,https://dl.acm.org/doi/abs/10.1145/293347.293348,,,,,,4,n: 4,3,O(dn \log{n})+O(e^d \epsilon^{-d} \log{n}),11,"n: number of elements
d: number of dimensions (in euclidean space)
epsilon: approximation factor",n,https://dl.acm.org/doi/pdf/10.1145/258533.258653,0,"""algebraic
decision tree model of computation""",,,,O(dn),https://dl.acm.org/doi/abs/10.1145/293347.293348,0,1,,0,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,k-ANNS,,,,,,,,,"[https://dl.acm.org/doi/abs/10.1145/293347.293348 k-ANNS - Arya, Mount, Netanyahu, Silverman, Wu

 (1998)]","k-ANNS - Arya, Mount, Netanyahu, Silverman, Wu

","Arya, Mount, Netanyahu, Silverman, Wu

",An optimal algorithm for approximate nearest neighbor searching fixed dimensions,1998,https://dl.acm.org/doi/abs/10.1145/293347.293348,,,,,,4,n: 4,3,O(dn \log{n})+O(e^d \epsilon^{-d} \log{n} + kd\log{n}),11,"k: number of neighbors to search for
n: number of elements
d: number of dimensions (in euclidean space)
epsilon: approximation factor",n,https://dl.acm.org/doi/abs/10.1145/293347.293348,0,"""algebraic
decision tree model of computation""",,,,O(dn),https://dl.acm.org/doi/abs/10.1145/293347.293348,0,1,,0,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,expected O(n^2\log{n} + n^2c) + O(cn^{1/d} \log^{1/d}{n}/r),uniform distribution ,,,Navigating Spreading-out Graph (NSG),"Fu, Xiang, Wang, Cai",Fast Approximate Nearest Neighbor Search With The Navigating Spreading-out Graph,2017,https://arxiv.org/abs/1707.00143,,,,,,,,3,expected O(n^2\log{n} + n^2c) + O(cn^{1/d} \log^{1/d}{n}/r),21,"n: number of elements
d: number of dimensions (in euclidean space)
c: max degree of NSG (independent of n)
r: function of n (decreases slowly as n increases)",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,EFANNA,"Fu, Cai",EFANNA : An Extremely Fast Approximate Nearest Neighbor Search Algorithm Based on kNN Graph,2016,https://arxiv.org/abs/1609.07228,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,PANNG,Iwasaki,Pruned Bi-directed K-nearest Neighbor Graph for Proximity Search,2016,https://link.springer.com/chapter/10.1007/978-3-319-46759-7_2,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,"Malkov, Ponomarenko, Logvinov, Krylov (2014)","Malkov, Ponomarenko, Logvinov, Krylov",Approximate nearest neighbor algorithm based on navigable small world graphs,2014,https://www.sciencedirect.com/science/article/abs/pii/S0306437913001300,,,,,,,,,,,,,,,,,,,,,,,,1,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,"Hierarchical Navigable
Small World (Hierarchical NSW, HNSW)","Malkov, Yashunin",Efficient and Robust Approximate Nearest Neighbor Search Using Hierarchical Navigable Small World Graphs,2018,https://ieeexplore.ieee.org/abstract/document/8594636,,,,,,,,3,O(n\log{n})+O(\log{n}),11,n: number of elements,,https://ieeexplore.ieee.org/abstract/document/8594636,0,,,,,experimental,,,,,1,randomly picks layers?,1,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,"Wieschollek, Wang, Sorkine-Hornung, Lensch","Wieschollek, Wang, Sorkine-Hornung, Lensch",Efficient Large-Scale Approximate Nearest Neighbor Search on the GPU,2016,https://openaccess.thecvf.com/content_cvpr_2016/html/Wieschollek_Efficient_Large-Scale_Approximate_CVPR_2016_paper.html,,,,,,,,3,scales with O(\log^2{n}) ?,,,,,,,,,,,,,,,,,1,,,,,,,,,1,,,,1,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,"Malkov, Ponomarenko, Logvinov, Krylov (2012)","Malkov, Ponomarenko, Logvinov, Krylov ","
Scalable Distributed Algorithm for Approximate Nearest Neighbor Search Problem in High Dimensional General Metric Spaces",2012,https://link.springer.com/chapter/10.1007/978-3-642-32153-5_10,,,,,,,,,,,,,,,,,,,,,,,,,,1,1+epsilon,1,2,0,multiplicative,yes,,optimal times the factor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,Collision Counting LSH (C2LSH),"Gan, Feng, Fang, Ng",Locality-sensitive hashing scheme based on dynamic collision counting,2012,https://dl.acm.org/doi/abs/10.1145/2213836.2213898,,,,,,4,n: 4,3,O(d\log{n}+n\log{n}),11,"n: number of elements
d: number of dimensions",n,https://dl.acm.org/doi/abs/10.1145/2213836.2213898,0,I/O model,,,,O(dn+n\log{n}),https://dl.acm.org/doi/abs/10.1145/2213836.2213898,0,1,,1,Monte Carlo ?,1,c^2,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,Query-aware LSH (QALSH),"Huang, Feng, Zhang, Fang, Ng",Query-aware locality-sensitive hashing for approximate nearest neighbor search,2015,https://dl.acm.org/doi/abs/10.14778/2850469.2850470,,,,,,4,n: 4,3,O(d\log{n}+n\log{n}),11,"n: number of elements
d: number of dimensions",n,https://dl.acm.org/doi/abs/10.14778/2850469.2850470,0,I/O model,,,,O(dn+n\log{n}),https://dl.acm.org/doi/abs/10.14778/2850469.2850470,0,1,,1,Monte Carlo ?,1,c^2,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,Virtual Hypersphere Partitioning (VHP),"Keijing, Hongya, Wei, Mineichi",VHP: Approximate Nearest Neighbor Search via Virtual Hypersphere Partitioning,2020,https://eprints.lib.hokudai.ac.jp/dspace/handle/2115/79717,,,,,,3,n: 3,3,O(nd),10,"n: number of elements
d: number of dimensions",n,https://eprints.lib.hokudai.ac.jp/dspace/handle/2115/79717,0,I/O model,,,,O(n(m+d)),https://eprints.lib.hokudai.ac.jp/dspace/handle/2115/79717,0,1,,1,Monte Carlo ?,1,c,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,O(n^2)+O(\log^3{n}),,,,"Arya, Mount","Arya, Mount",Approximate Nearest Neighbor Queries in Fixed Dimensions∗,1993,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8d360171533201c6883c26ec889f5a56864c0c98,"""too large to
make this approach practically competitive for moderately high dimensions (e.g. d ≥ 8) and reasonably small
error factors (e.g. ǫ ≤ 0.1)""",,,,,5,n: 5,3,expected? O(n^2)+O(\log^3{n}),20,n: number of elements,n,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8d360171533201c6883c26ec889f5a56864c0c98,0,Word RAM ?,words ?,,,O(n\log{n}),https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8d360171533201c6883c26ec889f5a56864c0c98,0,1,,1,Monte Carlo ?,1,1+epsilon,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,"Sun, Wang, Qin, Zhang, Lin","Sun, Wang, Qin, Zhang, Lin",SRS: Solving c-approximate nearest neighbor queries in high dimensional Euclidean space with a tiny index,2014,https://opus.lib.uts.edu.au/handle/10453/32995,,,,,,3,n: 3,3,O(n),10,n: number of elements,n,https://opus.lib.uts.edu.au/handle/10453/32995,,I/O model,,,,O(n) ? ,https://opus.lib.uts.edu.au/handle/10453/32995,0,1,,1,Monte Carlo ?,1,c,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,"(t,epsilon)-AVD","Arya, Malamatos, Mount

 ",Space-time tradeoffs for approximate nearest neighbor searching,2009,https://dl.acm.org/doi/abs/10.1145/1613676.1613677,,,,,,3,n: 3,3,O(ny^{d-1} \log{1/\epsilon} /(\epsilon y)^{(d-1)/2}) + O(\log{ny} + 1/(\epsilon y)^{(d-1)/2}),10,"n: number of elements
d: number of dimensions
2<=y<=1/epsilon: tradeoff parameter
epsilon: approximation factor",n,https://dl.acm.org/doi/abs/10.1145/1613676.1613677,,Word RAM ?,words,,,O(ny^{d-1} \log{1/\epsilon}),https://dl.acm.org/doi/abs/10.1145/1613676.1613677,0,1,,0,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,k-ANNS,,,,,,,,,,PM-LSH,"Zheng, Xi, Weng, Hung, Liu, Jensen",PM-LSH: A fast and accurate LSH framework for high-dimensional approximate NN search,2020,https://dl.acm.org/doi/10.14778/3377369.3377374,,,,,,3,n: 3,3,O(\log{n}+\beta n),10,"n: number of elements
\beta << 1",n,https://dl.acm.org/doi/10.14778/3377369.3377374,,Word RAM ?,words,,,O(n),https://dl.acm.org/doi/10.14778/3377369.3377374,0,1,,1,Monte Carlo ?,1,c^2,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,"Kushilevitz, Ostrovsky, Rabani ","Kushilevitz, Ostrovsky, Rabani ","Efficient Search for Approximate Nearest Neighbor
in High Dimensional Space",1998,https://dl.acm.org/doi/pdf/10.1145/276698.276877,,,,,,7,n: 7,2.9,O(d^2 poly log (dn)),400,"n: number of elements
d: number of dimensions (euclidean space)",n,https://dl.acm.org/doi/pdf/10.1145/276698.276877,,Word RAM ?,words,,,(dn)^O(1),https://dl.acm.org/doi/pdf/10.1145/276698.276877,0,1,,1,Monte Carlo ?,1,1+epsilon,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,"Tao, Zhang, Papadias, Mamoulis","Tao, Zhang, Papadias, Mamoulis",An efficient cost model for optimization of nearest neighbor search in low and medium dimensional spaces,2004,https://ieeexplore.ieee.org/abstract/document/1324627,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,Bespamyatnikh,Bespamyatnikh,Dynamic algorithms for approximate neighbor searching,1996,https://www.degruyter.com/document/doi/10.1515/9780773591134-044/pdf?licenseType=restricted,,,,,,,,3,O(n \log{n}) + O(\log{n} + 1/epsilon^{d-1}),11,"n: number of elements
d: number of dimensions (euclidean space)",,,,,,,,linear,,,,,,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,Panigrahy,Panigrahy,Entropy based Nearest Neighbor Search in High Dimensions,2005,https://arxiv.org/abs/cs/0510019,,,,,,6.55,n: 6.55,3,O(n^\rho),25.5,"n: number of elements
rho=M/ \log{1/g} ~2.06/c for large c
M: entropy
g: bound on
the probability that two far-off points will hash to the
same bucket",n,https://arxiv.org/abs/cs/0510019,,Word RAM,words,,,O(n),https://arxiv.org/abs/cs/0510019,0,1,,1,Monte Carlo,1,c,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,,"Krauthgame, Lee",Navigating nets: Simple algorithms for proximity search [Extended Abstract],2004,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8a3471300264d6ddcc5a54ff05ad0b37a59ba992,,,,,,,,3,O(\log{\Delta})+(1/\epsilon)^O(1),,"n: number of elements
Delta: ratio between the
largest and smallest interpoint distances in S",,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8a3471300264d6ddcc5a54ff05ad0b37a59ba992,,,,,,O(n),https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8a3471300264d6ddcc5a54ff05ad0b37a59ba992,0,1,,0,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,,"Krauthgame, Lee",Navigating nets: Simple algorithms for proximity search [Extended Abstract],2004,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8a3471300264d6ddcc5a54ff05ad0b37a59ba992,,,,,,,,3,O(\log{n}),,n: number of elements,,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8a3471300264d6ddcc5a54ff05ad0b37a59ba992,,,,,,O(n),https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=8a3471300264d6ddcc5a54ff05ad0b37a59ba992,0,1,,0,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,,,,,,,,,,,Fast-Johnson-Linden-strauss-Transform (FJLT),"Ailon, Chazelle",Approximate nearest neighbors and the fast Johnson-Lindenstrauss transform,2006,https://dl.acm.org/doi/abs/10.1145/1132516.1132597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,Best Bin First (BBF),"Beis, Lowe",Shape indexing using approximate nearest-neighbour search in high-dimensional spaces,1997,https://ieeexplore.ieee.org/abstract/document/609451,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,"Miclet, Dabouz","Miclet, Dabouz",Approximative fast nearest-neighbour recognition,1983,https://www.sciencedirect.com/science/article/pii/0167865583900636,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,"Liu, Rosenberg, Rowley","Liu, Rosenberg, Rowley",Clustering Billions of Images with Large Scale Nearest Neighbor Search,2007,https://ieeexplore.ieee.org/abstract/document/4118757,,,,,,,,,,,,,,,MapReduce framework,,,,,,,,,,,1,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,LazyLSH,"Zheng, Guo, Tung, Wu

 ",LazyLSH: Approximate Nearest Neighbor Search for Multiple Distance Functions with a Single Index,2016,https://dl.acm.org/doi/abs/10.1145/2882903.2882930,,,,,,,,,,,,,,,I/O model,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,HD-Index,"Arora, Sinha, Kumar, Bhattacharya",HD-Index: Pushing the Scalability-Accuracy Boundary for Approximate kNN Search in High-Dimensional Spaces,2018,https://arxiv.org/abs/1804.06829,,,,,,3,n: 3,3,O(nd) + O(tau(log_theta{n}+d))+ linear,10,"n: number of elements
d: number of dimensions
tau: number of partitions ?
theta: branching factor of internal nodes",n,https://arxiv.org/abs/1804.06829,,I/O model,,,,O(nd),https://arxiv.org/abs/1804.06829,0,1,,,,1,c,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,Vantage Point (VP) tree,"Fu, Chan, Cheung, Moon ",Dynamic vp-tree indexing for n-nearest neighbor search given pair-wise distances,2000,https://link.springer.com/article/10.1007/PL00010672,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,"Liu, Deng, Lang, Tao, Li","Liu, Deng, Lang, Tao, Li",Query-Adaptive Reciprocal Hash Tables for Nearest Neighbor Search,2015,https://ieeexplore.ieee.org/abstract/document/7346481,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,VA-file,"Weber, Schek, Blott","A Quantitative Analysis and Performance Study for
Similarity-Search Methods in High-Dimensional Spaces ",1998,https://vldb.org/conf/1998/p194.pdf,,,,,,,,,O(n) at high dimensions ?,,"d: dimensions (all points in unit hypercube [0,1]^d)
n: number of elements",,,,I/O model,,,,,,,,,1,Monte Carlo,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,ANNS,,,,,,,,,,,"Zhang, Du, Wang",Composite Quantization for Approximate Nearest Neighbor Search,2014,https://proceedings.mlr.press/v32/zhangd14.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,k-ANNS,,,,,,,,,,,"Johnson, Douze, Jégou",Billion-Scale Similarity Search with GPUs,2019,https://ieeexplore.ieee.org/abstract/document/8733051,,,,,,,,,,,,,,,PRAM,,,,,,,,,,,1,,,,,,,,,,1,,,1,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,"Graph Nearest
Neighbor Search algorithm (GNNS) ","Hajebi, Abbasi-Yadkori, Shahbazi, Zhang","Fast Approximate Nearest-Neighbor Search
with k-Nearest Neighbor Graph",2011,https://www.ijcai.org/Proceedings/11/Papers/222.pdf,,,,,,,,,"min{nd, 2^d n^{2/d}}",,"d: number of dimensions
n: number of elements",,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,FANNG,"Harwood, Drummond",FANNG: Fast Approximate Nearest Neighbour Graphs,2016,https://www.cv-foundation.org/openaccess/content_cvpr_2016/html/Harwood_FANNG_Fast_Approximate_CVPR_2016_paper.html,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,SK-LSH,"Liu, Cui, Huang, Li, Shen",SK-LSH: an efficient index structure for approximate nearest neighbor search,2014,https://dl.acm.org/doi/abs/10.14778/2732939.2732947,,,,,,3,n: 3,3,O(Bd(N_p + L\log_B{n})),10,"n: cardinality of data // number of elements
d: number of dimensions
B: number of records on each memory page
L: # of compound LSH functions ?? (probably a low integer)
N_p: threshold for number of data pages
m: # elements in each compound hash key
c: approximation factor (>1)",n,https://dl.acm.org/doi/abs/10.14778/2732939.2732947,,I/O model,,,,O(Ln(m/B +d)),https://dl.acm.org/doi/abs/10.14778/2732939.2732947,0,1,,1,randomly chosen hash functions?,1,c,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,,,,,,,,,,,FLoS,"Wu, Jin, Zhang",Fast and unified local search for random walk based k-nearest-neighbor query in large graphs,2014,https://dl.acm.org/doi/abs/10.1145/2588555.2610500,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,ARKGraph,"Zuo, Deng",ARKGraph: All-Range Approximate K-Nearest-Neighbor Graph,2023,https://dl.acm.org/doi/10.14778/3603581.3603601,,,,,,,,,O(Kn^2) ? + O(\log{\log{n}} + K\log{K}),,"K: number of neighbors to be found
n: number of elements",,,,,,,,O(Kn^2),https://dl.acm.org/doi/10.14778/3603581.3603601,0,1,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,ANNS,,,,,,,,,,R-Forest,"Nolen, Lin",Approximate high-dimensional nearest neighbor queries using R-forests,2013,https://dl.acm.org/doi/10.1145/2513591.2513652,,,,,,,,,,,,,,,I/O model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,0,0,,,,,,,,,,,DBIN,"Bennett, Fayyad, Geiger ",Density-Based Indexing for Approximate Nearest-Neighbor Queries ,1999,https://dl.acm.org/doi/pdf/10.1145/312129.312236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,1,0,k-ANNS,,,,,,,,,,,"Ferhatosmanoglu, Tuncel, Agrawal, El Abbadi",Approximate nearest neighbor searching in multimedia databases,2001,https://ieeexplore.ieee.org/abstract/document/914864,,,,,,,,,,,,,,,I/O model,,,,,,,,,,,1,1+epsilon,1,2,0,multiplicative,yes,,optimal times the factor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,"Indyk, Motwani (1)","Indyk, Motwani",Approximate nearest neighbors: towards removing the curse of dimensionality,1998,https://dl.acm.org/doi/abs/10.1145/276698.276876,,,,,,4.01,n: 4.01,2.9,O(n^{1+1/epsilon}+dn) *log factor + O(dn^{1/epsilon})*log factor,15.015,"epsilon>1: approximation factor is 1+epsilon
d: number of dimensions
n: number of elements",n,https://dl.acm.org/doi/abs/10.1145/276698.276876,,Word RAM ?,words,,,O(n^{1+1/epsilon}+dn) *log factor,https://dl.acm.org/doi/abs/10.1145/276698.276876,0,1,,1,Monte Carlo ?,1,1+epsilon,1,2,0,multiplicative,yes,PRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,"Indyk, Motwani (2)","Indyk, Motwani",Approximate nearest neighbors: towards removing the curse of dimensionality,1998,https://dl.acm.org/doi/abs/10.1145/276698.276876,,,,,,3,n: 3,2.9,O(n)O(1/epsilon)^d *log factor+ O(d)*log factor,10,"0<epsilon<1: approximation factor is 1+epsilon
d: number of dimensions
n: number of elements",n,https://dl.acm.org/doi/abs/10.1145/276698.276876,,Word RAM ?,words,,,O(n)O(1/epsilon)^d *log factor,https://dl.acm.org/doi/abs/10.1145/276698.276876,0,1,,1,Monte Carlo ?,1,1+epsilon,1,2,0,multiplicative,yes,PRAS ?,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,"Indyk, Motwani (3)","Indyk, Motwani",Approximate nearest neighbors: towards removing the curse of dimensionality,1998,https://dl.acm.org/doi/abs/10.1145/276698.276876,,,,,,3,n: 3,2.9,O((nd)^o(1))+ O(d)*log factor,10,"0<epsilon: approximation factor is 1+epsilon
d: number of dimensions
n: number of elements",n,https://dl.acm.org/doi/abs/10.1145/276698.276876,,Word RAM ?,words,,,O((nd)^o(1)),https://dl.acm.org/doi/abs/10.1145/276698.276876,0,1,,1,Monte Carlo ?,1,1+epsilon,1,2,0,multiplicative,yes,FPRAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,ANNS,,,,,,,,,,HVS,"Lu, Kudo, Xiao, Ishikawa",HVS: hierarchical graph structure based on voronoi diagrams for solving approximate nearest neighbor search,2021,https://dl.acm.org/doi/abs/10.14778/3489496.3489506,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0,0,0,,,,,,,,,,,,"Fu, Wang, Cai","High Dimensional Similarity Search With Satellite System Graph: Efficiency, Scalability, and Unindexed Query Compatibility",2022,https://ieeexplore.ieee.org/abstract/document/9383170,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,cover tree,"Beygelzimer, Kakade, Langford",Cover trees for nearest neighbor,2006,https://dl.acm.org/doi/abs/10.1145/1143844.1143857,,,,,,4,n: 4,3,O(c^6 n \log{n}) + ( O(\log{\Delta})+(1/\epsilon)^O(1)),11,"n: number of elements
c: bounded expansion constant
Delta: ratio between the
largest and smallest interpoint distances in S",n,https://dl.acm.org/doi/abs/10.1145/1143844.1143857,0,Word RAM ?,words,,,O(n),https://dl.acm.org/doi/abs/10.1145/1143844.1143857,0,1,,,,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,1,0,ANNS,,,,,,,,,,RPTree,"Ram, Sinha",Revisiting kd-tree for Nearest Neighbor Search,2019,https://dl.acm.org/doi/abs/10.1145/3292500.3330875,,,,,,4,n: 4,3,O(nd+ n\log{n})\log{n/n_0}) + O(d\log{d} + \log{n}),12,"n: number of elements
d: number of dimensions
n_0: maximum leaf size",n,https://dl.acm.org/doi/abs/10.1145/3292500.3330875,0,Word RAM ?,words,,,O(d\log{n/n_0} +n/n_0 +n),https://dl.acm.org/doi/abs/10.1145/3292500.3330875,0,1,,1,Monte Carlo ?,1,1+epsilon,1,2,0,multiplicative,yes,FPTAS,optimal times the factor,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
51,Maximum Likelihood Parameters,0.001,1,0,Maximum Likelihood Parameters,,,,,,,,,[https://www.pnas.org/doi/abs/10.1073/pnas.95.13.7270  (1998)],,"Gu, Kong",A stochastic approximation algorithm with Markov chain Monte-Carlo method for incomplete data estimation problems,1998,https://www.pnas.org/doi/abs/10.1073/pnas.95.13.7270,,,,,,,,,,,"n: number of observations in sample
r: number of parameters + latent variables",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
51,Maximum Likelihood Parameters,0.001,1,0,Maximum Likelihood Parameters,,,,,,,,,[https://onlinelibrary.wiley.com/doi/abs/10.2307/3315718  (2008)],,"Gu, Li",A stochastic approximation algorithm for maximum-likelihood estimation with incomplete data,2008,https://onlinelibrary.wiley.com/doi/abs/10.2307/3315718,,,,,,,,,,,"n: number of observations in sample
r: number of parameters + latent variables",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
51,Maximum Likelihood Parameters,0.001,1,0,Maximum Likelihood Parameters,,,,,,,,,[https://ieeexplore.ieee.org/abstract/document/4799114  (2009)],,"Villien, Ostertag",A Polynomial Approximation Algorithm for Real-Time Maximum-Likelihood Estimation,2009,https://ieeexplore.ieee.org/abstract/document/4799114,,,,,,,,,,,"n: number of observations in sample
r: number of parameters + latent variables",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,3,,,Numerical Analysis
52,Cardinality Estimation,1,1,0,,433,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[http://algo.inria.fr/flajolet/Publications/src/FlMa85.pdf  Flajolet–Martin algorithm (1984)], Flajolet–Martin algorithm,"Flajolet, Martin",Probabilistic Counting Algorithms for Data Base Applications,1984,http://algo.inria.fr/flajolet/Publications/src/FlMa85.pdf,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)",N,,,Word RAM,words,2,N: 2,O(log n),https://www.sciencedirect.com/science/article/pii/S0022000097915452,0,0,,1,Monte Carlo,1,O(1),2.4,4,0,multiplicative,yes?,n/a,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
52,Cardinality Estimation,1,1,0,,434,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[http://algo.inria.fr/flajolet/Publications/DuFl03-LNCS.pdf LogLog algorithm (2003)],LogLog algorithm,"Durand, Flajolet",Loglog Counting of Large Cardinalities,2003,http://algo.inria.fr/flajolet/Publications/DuFl03-LNCS.pdf,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)",N,,,Word RAM,words,1.99,N: 1.99,O(log(log(n))),http://algo.inria.fr/flajolet/Publications/DuFl03-LNCS.pdf,0,1,,1,Monte Carlo,1,O(1),2.4,4,0,multiplicative,yes?,n/a,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
52,Cardinality Estimation,2,1,0,,435,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[http://algo.inria.fr/flajolet/Publications/FlFuGaMe07.pdf HyperLogLog algorithm (2007)],HyperLogLog algorithm,"Flajolet, Fusy, Gandouet, Meunier",HyperLogLog: the analysis of a near-optimal cardinality estimation algorithm,2007,http://algo.inria.fr/flajolet/Publications/FlFuGaMe07.pdf,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)
eps: approximation parameter",N,,,Word RAM,words,2,N: 2,O(eps^{-2}*log(log(n)))+log(n)),https://oertl.github.io/hyperloglog-sketch-estimation-paper/paper/paper.pdf,0,0,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,FPTAS,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
52,Cardinality Estimation,2,1,0,,436,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/40671.pdf HyperLogLog++ (2014)],HyperLogLog++,"Heule, Nunkesser, Hall",HyperLogLog in Practice: Algorithmic Engineering of a State of The Art Cardinality Estimation Algorithm,2014,https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/40671.pdf,,,,1,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)
eps: approximation parameter",N,,,Word RAM,words,2,N: 2,O(eps^{-2}*log(log(n)))+log(n)),(see hyperloglog?),0,0,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,FPTAS,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,5.623413252,177.827941,,31.6227766,0,,177.827941,0,,6,,,Numerical Analysis
52,Cardinality Estimation,1,1,0,streaming,437,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[ Min/max sketches streaming algorithm (1980)],Min/max sketches streaming algorithm,,,1980,,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)",N,,,Word RAM,words,1,N: 1,O(1),only keep track of minimum value. also assuming hash function requires O(1) space,1,0,,1,Monte Carlo,1,O(1),2.4,4,0,multiplicative,yes?,n/a,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
52,Cardinality Estimation,1,1,0,streaming,438,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[ Bottom-m sketches streaming algorithm (1980)],Bottom-m sketches streaming algorithm,,,1980,,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)
m: size of sketch",N,,,Word RAM,words,3,"m: 3,
N: 3",O(m),only keep track of m minimum values. also assuming hash function requires O(1) space,1,0,,1,Monte Carlo,1,O(1),2.4,4,0,multiplicative,yes?,n/a,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
52,Cardinality Estimation,2,1,0,streaming,,,0,1,0,O(N),Any distribution of values?,(need to read entire input),"[https://dash.harvard.edu/bitstream/handle/1/13820438/f0.pdf;sequence=1 Kane, Nelson, Woodruff (2010)]","Kane, Nelson, Woodruff","Kane, Nelson, Woodruff",An Optimal Algorithm for the Distinct Elements Problem,2010,https://dash.harvard.edu/bitstream/handle/1/13820438/f0.pdf;sequence=1,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)
eps: approximation parameter",N,,0,Word RAM,words,3,"m: 3,
N: 3",O(eps^{-2}+log(n)),https://dash.harvard.edu/bitstream/handle/1/13820438/f0.pdf;sequence=1,1,0,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,FPTAS,"Factor off from true cardinality (with probability delta, using (eps, delta)-streaming model)",0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
52,Cardinality Estimation,0.001,1,0,streaming,,,0,1,0,O(N),Any distribution of values?,(need to read entire input),[https://arxiv.org/abs/2307.00985 Karayel (2023)],Karayel,Karayel,An embarrassingly parallel optimal-space cardinality estimation algorithm,2023,https://arxiv.org/abs/2307.00985,,,,0,0,3,N: 3,3,O(N),10,"N: number of values in multiset
n: cardinality of multiset (not known)
eps: approximation parameter",N,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
55,Variance Calculations,0.001,1,0,Variance Calculations,,,,1,0,O(log(log(n/p))/eps^2),,,[https://dl.acm.org/doi/pdf/10.1145/3534678.3539377  (2022)],,"Chen, Zhang, Wang",Efficient Approximate Algorithms for Empirical Variance with Hashed Block Sampling,2022,https://dl.acm.org/doi/pdf/10.1145/3534678.3539377,,,,0,0,#VALUE!,,,,,"n: number of values
eps: additive error bound
p: probability of failure",n,,,Word RAM,words,,,,,,,,0,,1,eps,1,0,1.99,additive,yes,n/a,additive error,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
55,Variance Calculations,0.001,0,0,Variance over Sliding Stream Model,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/773153.773176  (2003)],,"Babcock, Datar, Motwani, O'Callaghan",Maintaining variance and k-medians over data stream windows,2003,https://dl.acm.org/doi/abs/10.1145/773153.773176,,,,0,0,#VALUE!,,,,,,n,,,Word RAM,words,,,O((log N)/eps^2),,,,,0,,1,eps,1,0,1.99,additive,yes,n/a,relative error,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,6,,,Numerical Analysis
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,467,SimGNN,,1,0,O(V^2),,,[https://asset-pdf.scinapse.io/prod/2886034153/2886034153.pdf Y Bai (2018)],Y Bai,"Bai, Ding, Bian, Chen, Sun, Wang",Graph Edit Distance Computation via Graph Neural Networks,2018,https://asset-pdf.scinapse.io/prod/2886034153/2886034153.pdf,,,,0,0,5,V: 5,3,O(V^2),,V: number of vertices in the larger of the two graphs,V,,,Word RAM,words,5,V: 5,O(V^2),Derived: Auxiliary matrices for the neural network of size VxV,1,0,,0,,1,none stated,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BP-GED,"Riesen, Ferrer, Bunke",Approximate Graph Edit Distance in Quadratic Time,2015,https://ieeexplore.ieee.org/abstract/document/7264987,,,,,,,,3,O(n^2),20,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,Greedy-Assignment,"Riesen, Ferrer, Bunke",Approximate Graph Edit Distance in Quadratic Time,2015,https://ieeexplore.ieee.org/abstract/document/7264987,,,,,,,,3,O(n^2),20,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,Greedy-Refined-Assignment,"Riesen, Ferrer, Bunke",Approximate Graph Edit Distance in Quadratic Time,2015,https://ieeexplore.ieee.org/abstract/document/7264987,,,,,,,,3,O(n^2),20,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,Greddy-Loss-Assignment,"Riesen, Ferrer, Bunke",Approximate Graph Edit Distance in Quadratic Time,2015,https://ieeexplore.ieee.org/abstract/document/7264987,,,,,,,,3,O(n^2),20,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,Greedy-Sort-GED,"Riesen, Ferrer, Bunke",Approximate Graph Edit Distance in Quadratic Time,2015,https://ieeexplore.ieee.org/abstract/document/7264987,,,,,,,,3,O(n^2\log{n^2}),21,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,"Riesen, Fischer, Bunke (2014)","Riesen, Fischer, Bunke ",Improving Approximate Graph Edit Distance Using Genetic Algorithms,2014,https://link.springer.com/chapter/10.1007/978-3-662-44415-3_7,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,"Multistart IPFP for
estimating the GED","Daller, Bougleux, Gaüzère, Brun",Approximate Graph Edit Distance by Several Local Searches in Parallel,2018,https://hal.science/hal-01664529/,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,tree-Based approximate approach for GED problem,"Dabah, Chegrane, Yahiaoui",Efficient approximate approach for graph edit distance problem,2021,https://www.sciencedirect.com/science/article/abs/pii/S0167865521003251,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,bijective variant of HED / symmetric variant of BP-Greedy,"Fischer, Riesen, Bunke",Improved quadratic time approximation of graph edit distance by combining Hausdorff matching and greedy assignment,2017,https://www.sciencedirect.com/science/article/pii/S0167865516301386,,,,,,,,3,O(n^2),20,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,0,0,Inexact GED,,,,,,,,,,HED heuristic,"Fischer, Plamondon, Savaria, Riesen, Bunke ",A Hausdorff Heuristic for Efficient Computation of Graph Edit Distance,2014,https://link.springer.com/chapter/10.1007/978-3-662-44415-3_9,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,GNCCP,"Gaüzère, Bougleux, Brun ",Approximating Graph Edit Distance Using GNCCP,2016,https://link.springer.com/chapter/10.1007/978-3-319-49055-7_44,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,"Riesen, Fischer, Bunke (2015)","Riesen, Fischer, Bunke",Estimating Graph Edit Distance Using Lower and Upper Bounds of Bipartite Approximations,2015,https://www.worldscientific.com/doi/abs/10.1142/S0218001415500111,,,,,,,,3,O(n^3),30,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,A*-Beamsearch,"Neuhaus, Riesen, Bunke ",Fast Suboptimal Algorithms for the Computation of Graph Edit Distance,2006,https://link.springer.com/chapter/10.1007/11815921_17,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,A*-Pathlength,"Neuhaus, Riesen, Bunke ",Fast Suboptimal Algorithms for the Computation of Graph Edit Distance,2006,https://link.springer.com/chapter/10.1007/11815921_17,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,NODE,"Justice, Hero",A binary linear programming formulation of the graph edit distance,2006,https://ieeexplore.ieee.org/abstract/document/1642656,,,,,,,,,O(Vg Vh),,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H",,,,,,,,,,,,,,,1,,,,,,,,computes upper and lower GED bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BP,"Riesen, Bunke",Approximate graph edit distance computation by means of bipartite graph matching,2009,https://www.sciencedirect.com/science/article/pii/S026288560800084X,,,,,,,,,"O(Vg Vh delta_min(G,H^2) delta_max(G,H)",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes GED upper bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,STAR,"Zeng, Tung, Wang, Feng, Zhou",Comparing stars: on approximating graph edit distance,2009,https://dl.acm.org/doi/abs/10.14778/1687627.1687631,,,,,,,,,"O(max{Vg,Vh} delta_max(G,H) \log{delta_max(G,H)} + Vg Vh delta_min(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes upper and lower GED bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BRANCH-CONST,"Zheng, Zou, Lian, Wang, Zhao",Graph similarity search with edit distance constraint in large graph databases,2013,https://dl.acm.org/doi/abs/10.1145/2505515.2505723,,,,,,,,,"O(max{Vg,Vh} delta_max(G,H) \log{delta_max(G,H)} + Vg Vh delta_min(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes upper and lower GED bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,SUBGRAPH,"Carletti, Gaüzère, Brun, Vento ",Approximate Graph Edit Distance Computation Combining Bipartite Matching and Exact Neighborhood Substructure Distance,2015,https://link.springer.com/chapter/10.1007/978-3-319-18224-7_19,,,,,,,,,"exp(delta_max(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes GED upper bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,WALKS,"Gaüzère, Bougleux, Riesen, Brun ",Approximate Graph Edit Distance Guided by Bipartite Matching of Bags of Walks,2014,https://link.springer.com/chapter/10.1007/978-3-662-44415-3_8,,,,,,,,,O((Vg Vh)^w),,"""Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H""
O(n^w): complexity of multiplying two matrics w/ n rows and n columns",,,,,,,,,,,,,,,1,,,,,,,,computes GED upper bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,REFINE,"Zeng, Tung, Wang, Feng, Zhou",Comparing stars: on approximating graph edit distance,2009,https://dl.acm.org/doi/abs/10.14778/1687627.1687631,,,,,,,,,"O(UB Vg + Vh delta_max(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}
UB: initial upper bound",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BP-BEAM,"Riesen, Fischer, Bunke",Combining Bipartite Graph Matching and Beam Search for Graph Edit Distance Approximation,2014,https://link.springer.com/chapter/10.1007/978-3-319-11656-3_11,,,,,,,,,"O((Vg+Vh)^2 (delta_max(G,H) + \log{Vg+Vh}))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,IBP-BEAM,"Ferrer, Serratosa, Riesen",A First Step Towards Exact Graph Edit Distance Using Bipartite Graph Matching,2015,https://link.springer.com/chapter/10.1007/978-3-319-18224-7_8,,,,,,,,,"O(I (Vg +Vh)^2 (delta_max(G,H) + \log{Vg+Vh}))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}
I: maximal number of iterations",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,IPFP,"Leordeanu, Hebert, Sukthankar",An Integer Projected Fixed Point Method for Graph Matching and MAP Inference,2009,https://proceedings.neurips.cc/paper/2009/hash/fc2c7c47b918d0c2d792a719dfb602ef-Abstract.html,,,,,,,,,"O(I^2 Vg Vh max{Vg,Vh})",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
I: maximal number of iterations",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,Hausdorff edit distance (HED),"Fischer, Suen, Frinken, Riesen, Bunke ",Approximation of graph edit distance based on Hausdorff matching,2015,https://www.sciencedirect.com/science/article/pii/S003132031400274X,,,,,,,,,"O(Vg Vh delta_min(G,H^2) delta_max(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BP-SA,"Riesen, Fischer, Bunke ",Improved Graph Edit Distance Approximation with Simulated Annealing,2017,https://link.springer.com/chapter/10.1007/978-3-319-58961-9_20,,,,,,,,,"O(w + N (Vg Vh + max{Eg, Eh}))",,"O(w): runtime for computing initial upper and lower bounds
Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
Eg: #edges in 1st graph G
Eh: #edges in 2nd graph H
N: maximal number of iterations",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BRANCH-COMPACT,Eppstein,Subgraph isomorphism in planar graphs and related problems,1999,https://www.worldscientific.com/doi/abs/10.1142/9789812777638_0014,,,,,,,,,"O(max{Vg,Vh}(delta_max(G,H) \log(delta_max(G,H) + \log(max{Vg Vh}}))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes lower bound for GED,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,PARTITION,Eppstein,Subgraph isomorphism in planar graphs and related problems,1999,https://www.worldscientific.com/doi/abs/10.1142/9789812777638_0014,,,,,,,,,O(Eg Eh) for small K,,"K: constant whose partitioning determines substructure sizes (?)
Eg: #edges in 1st graph G
Eh: #edges in 2nd graph H",,,,,,,,,,,,,,,1,,,,,,,,computes lower bound for GED,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,HYBRID,Eppstein,Subgraph isomorphism in planar graphs and related problems,1999,https://www.worldscientific.com/doi/abs/10.1142/9789812777638_0014,,,,,,,,,Omega(w_1+w_2^Vg) DOES NOT HAVE UPPER BOUND,,"w1: runtime of PARTITION
w2: runtime of bRANCH-CONST",,,,,,,,,,,,,,,1,,,,,,,,computes lower bound for GED,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BRANCH,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,"O(Vg Vh delta_min(G,H^2) delta_max(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes lower bound for GED,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BRANCH-FAST,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,"O(max{Vg,Vh} delta_max(G,H) \log{delta_max(G,H)} + Vg Vh delta_min(G,H) delta_max(G,H))",,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
delta_min(a,b): min{max degree(a), max degree(b)}
delta_max(a,b); max{max degree(a),max degree(b)}",,,,,,,,,,,,,,,1,,,,,,,,computes lower bound for GED,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,BRANCH-TIGHT,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,O(N^5),50,"N: either max{Vg,Vh} if edit cost functions are quasimetric or Vg+Vh otherwise",,,,,,,,,,,,,,,1,,,,,,,,computes lower bound for GED,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,RING,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,computes upper bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,RING-ML,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,computes upper bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,MULTI-SOL,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,O(Vg+Vh) additional time? for enumeration?,,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H",,,,,,,,,,,,,,,1,,,,,,,,computes upper bound,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,K-REFINE,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,O(I Vg + Vh^K w),,"Vg: #vertices in 1st graph G
Vh: #vertices in 2nd graph H
I: number of times K-REFINE finds improved node map
K: maximal swap size
w: time for SWAP-COST ?? O(delta_max(Eg,Eh)) ??",,,,,,,,,,,,,,,1,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,1,0,Inexact GED,,,,,,,,,,RANDPOST,Blumenthal,New Techniques for Graph Edit Distance Computation,2019,https://arxiv.org/abs/1908.00265,,,,,,,,,,,,,,,,,,,,,,,,1,,1,,,,,,,,computes upper bound,1,1?,,,,,,,,,,,,,,,,,,,,,,,,,,,
61,The Traveling-Salesman Problem,0.001,1,0,Approximate TSP,491,,,1,0,O(V^2 E),,,[https://www.jstor.org/stable/j.ctt7s8xg Applegate et al. (2006)],Applegate et al.,Applegate et al.,The Traveling Salesman Problem: A Computational Study,2006,https://www.jstor.org/stable/j.ctt7s8xg,,,,0,0,7,"V: 7,
E: 3",3,O(V^2 E),,,V,,,,,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,1,0,,492,,,1,0,-,,,[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.92.1635&rep=rep1&type=pdf Johnson; D. S.; McGeoch; L. A. (1997)],Johnson; D. S.; McGeoch; L. A.,Johnson; D. S.; McGeoch; L. A.,,1997,http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.92.1635&rep=rep1&type=pdf,,,,0,0,8,V: 8,1,O(2^{(p(n)}),,n: number of cities,V,,,,,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,1,Approximate Metric TSP,,,,1,0,O(V^2 log V),,,[https://www.sciencedirect.com/science/article/pii/0167637784900786 Greedy (1984?)],Greedy,"Ong, Moore",Worst-case analysis of two travelling salesman heuristics,1984?,https://www.sciencedirect.com/science/article/pii/0167637784900786,,,,0,0,5.01,V: 5.01,3,O(V^2 log V),21,"V: number of vertices
E: number of edges",V,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.92.1635&rep=rep1&type=pdf,0,Real RAM,memory cells,5,V: 5,O(V^2)?,Derived: Need to sort and keep track of all O(V^2) distances,1,0,,0,,1,1/2\log V + 1/2,2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://www.sciencedirect.com/science/article/pii/0167637784900786,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,1,Approximate Metric TSP,,,,1,0,O(V^2 log V),,,[https://www.jstor.org/stable/167703 Clarke-Wright savings heuristic (1964)],Clarke-Wright savings heuristic,"Clarke, Wright",Scheduling of Vehicles from a Central Depot to a Number of Delivery Points,1964,https://www.jstor.org/stable/167703,,,,0,0,5.01,V: 5.01,3,O(V^2 log V),21,"V: number of vertices
E: number of edges",V,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.92.1635&rep=rep1&type=pdf,0,Real RAM,memory cells,5,V: 5,O(V^2)?,Derived: Need to sort and keep track of all O(V^2) distances (as in greedy),1,0,,0,,1,1 + \log V,2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://www.sciencedirect.com/science/article/pii/0167637784900786,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,1,0,,493,,,1,0,-,,,[https://www.researchgate.net/publication/222408030_Traveling_Salesman_Should_not_be_Greedy_Domination_Analysis_of_Greedy-Type_Heuristics_for_the_TSP  Gutina; Gregory; Yeob; Anders; Zverovich; Alexey (2002)], Gutina; Gregory; Yeob; Anders; Zverovich; Alexey, Gutina; Gregory; Yeob; Anders; Zverovich; Alexey,Traveling Salesman Should not be Greedy: Domination Analysis of Greedy-Type Heuristics for the TSP,2002,https://www.researchgate.net/publication/222408030_Traveling_Salesman_Should_not_be_Greedy_Domination_Analysis_of_Greedy-Type_Heuristics_for_the_TSP,,,,0,0,#VALUE!,,,-,,"V: number of vertices
E: number of edges",V,,,,,#VALUE!,,,,,,,0,,0,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,1,Approximate Metric TSP,494,Nearest neighbor search,,1,0,O(V^2),,,"[https://www.jstor.org/stable/168581 Bellmore, Nemhauser (1968)]","Bellmore, Nemhauser","Bellmore, Nemhauser",The Traveling Salesman Problem: A Survey,1968,https://www.jstor.org/stable/168581,,,,0,0,5,V: 5,3,O(V^2),20,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,0,Real RAM,memory cells,1,V: 1,O(1),Derived: Nearest neighbor search can be done with constant auxiliary space,1,0,,0,,1,1/2\log V + 1/2,2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,1,Approximate Metric TSP,,"""Cheapest Insertion""",,1,0,O(V^2 log V),,,[https://academic.oup.com/imamat/article/3/4/362/658295 Nicholson (1967)],Nicholson,Nicholson,"A Sequential Method for Discrete Optimization Problems and its Application to the Assignment, Travelling Salesman, and Three Machine Scheduling Problems",1967,https://academic.oup.com/imamat/article/3/4/362/658295,,,,0,0,5.01,V: 5.01,3,O(V^2 log V),21,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,0,Real RAM,memory cells,3,V: 3,O(V),Derived: Keep track of current tour,1,0,,0,,1,2 - 2/V,2,2.99,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,1,Approximate Metric TSP,,"""Nearest Insertion""",,1,0,O(V^2),,,[https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3 Rosenkrantz; D. J.; Stearns; R. E.; Lewis; P. M. (1974)],Rosenkrantz; D. J.; Stearns; R. E.; Lewis; P. M.,"Rosenkrantz, Stearns, Lewis",An analysis of several heuristics for the traveling salesman problem,1974,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,,,,0,0,5,V: 5,3,O(V^2),20,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,0,Real RAM,memory cells,3,V: 3,O(V),Derived: Keep track of current tour,1,0,,0,,1,2 - 2/V,2,2.99,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,1,0,Approximate TSP,,Heuristic,,1,0,O(V^3)?,,,[https://www.jstor.org/stable/167074 2-Opt (Croes) (1958)],2-Opt (Croes),Croes,A Method for Solving Traveling-Salesman Problems,1958,https://www.jstor.org/stable/167074,,,,0,0,8,V: 8,1,exp(V)?,,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://en.wikipedia.org/wiki/2-opt,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,1,0,Approximate TSP,,Heuristic,,1,0,O(V^4)?,,,[- 3-Opt (-)],3-Opt,,,-,-,,,,0,0,8,V: 8,1,exp(V)?,,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://en.wikipedia.org/wiki/3-opt,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,1,0,Approximate TSP,495,Heuristic,,1,0,exp(V)??,,,[https://www.cs.princeton.edu/~bwk/btl.mirror/tsp.pdf Lin–Kernighan (1981)],Lin–Kernighan,"Lin, Kernighan",An Effective Heuristic Algorithm for the Traveling-Salesman Problem,1981,https://www.cs.princeton.edu/~bwk/btl.mirror/tsp.pdf,,,,0,0,8,V: 8,1,exp(V)??,,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,1,Approximate Metric TSP,485,,,1,0,$O(V^3)$,,,[https://apps.dtic.mil/sti/pdfs/ADA025602.pdf Christofides algorithm (1976)],Christofides algorithm,Christofides,Worst-case analysis of a new heuristic for the travelling salesman problem,1976,https://apps.dtic.mil/sti/pdfs/ADA025602.pdf,,,,1,0,6,V: 6,3,$O(V^3)$,30,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,5,V: 5,O(V^2)?,Depends on best space complexity for O(V^3) min-weight matching (the rest of the algorithm requires O(V) auxiliary space),1,0,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,1,Approximate Metric TSP,,,,1,0,$O(V^2.5 (log V)^1.5)$,,,[https://web.eecs.umich.edu/~pettie/matching/Gabow-Tarjan-scaling-general-graph-matching.pdf Christofides algorithm [improved by Gabow and Tarjan] (1991)],Christofides algorithm [improved by Gabow and Tarjan],"Gabow, Tarjan",Faster Scaling Algorithms for General Graph Matching Problems,1991,https://web.eecs.umich.edu/~pettie/matching/Gabow-Tarjan-scaling-general-graph-matching.pdf,,,,1,0,5.5,V: 5.5,3,$O(V^2.5 (log V)^1.5)$,26.65,"V: number of vertices
E: number of edges",V,https://web.eecs.umich.edu/~pettie/matching/Gabow-Tarjan-scaling-general-graph-matching.pdf,0,Real RAM,memory cells,5,V: 5,O(V^2),https://web.eecs.umich.edu/~pettie/matching/Gabow-Tarjan-scaling-general-graph-matching.pdf,0,1,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,1,Approximate Metric TSP,,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/3406325.3451009 Karlin, Klein, Gharan (2021)]","Karlin, Klein, Gharan","Karlin, Klein, Gharan",A (slightly) improved approximation algorithm for metric TSP,2021,https://dl.acm.org/doi/10.1145/3406325.3451009,,,,0,0,7,V: 7,2,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1.5 - 2*10^(-36),2,2.499,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,0,Approximate Geometric TSP,,,,1,0,$O(V log V)$,,,[https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3 Approximation using Euclidean MST (1974)],Approximation using Euclidean MST,"Rosenkrantz, Stearns, Lewis",An analysis of several heuristics for the traveling salesman problem,1974,https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,,,,1,0,4,V: 4,3,$O(V log V)$,11,"V: number of vertices
E: number of edges",V,,1,Real RAM,memory cells,3,V: 3,O(V),Derived: Keep track of current tour,1,0,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,O((C^t)/t * V + V log V),,,[https://www.jstor.org/stable/3689510 Karp [Algorithm 1] (1977)],Karp [Algorithm 1],Karp,Probabilistic Analysis of Partitioning Algorithms for the Traveling-Salesman Problem in the Plane,1977,https://www.jstor.org/stable/3689510,,,,,,4,V: 4,3,O((C^t)/t * V + V log V),11,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
C: some constant >1
t: error parameter (any positive real number); t = O(eps^(-d/(d-1)))",V,https://www.jstor.org/stable/3689510,0,Real RAM,memory cells,#VALUE!,,,,,,,1?,Monte Carlo?,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,O(f(t)*V + V(log V)^2),(see distribution in paper),https://www.jstor.org/stable/3689510,[https://www.jstor.org/stable/3689510 Karp [Algorithm 2] (1977)],Karp [Algorithm 2],Karp,Probabilistic Analysis of Partitioning Algorithms for the Traveling-Salesman Problem in the Plane,1977,https://www.jstor.org/stable/3689510,,,,,,4,V: 4,3,O(f(t)*V + V(log V)^2),11,"V: number of vertices
E: number of edges
t: error parameter (any positive real number)",V,https://www.jstor.org/stable/3689510,0,Real RAM,memory cells,#VALUE!,,,,,,,1?,Monte Carlo?,1,1+O(t^(-1/2))?,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,"V^(O((log V)^(d-2)*(log log V)^(min(1, d-2)))/eps^(d-1))",,,[https://ieeexplore.ieee.org/document/548458 Arora (1996)],Arora,Arora,Polynomial time approximation schemes for Euclidean TSP and other geometric problems,1996,https://ieeexplore.ieee.org/document/548458,,,,,,8,V: 8,2,"V^(O((log V)^(d-2)*(log log V)^(min(1, d-2)))/eps^(d-1))",600,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
eps: error parameter",V,https://ieeexplore.ieee.org/document/548458,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,O(V (log V)^(O(c*sqrt(d))^(d-1))),,,[http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf Arora (1998)],Arora,Arora,Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems,1998,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,,,,,,4,V: 4,2.9,O(V (log V)^(O(c*sqrt(d))^(d-1))),15,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
c: error parameter; c = 1/eps",V,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,EPRAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,O(V^(d+1) (log V)^(O(c*sqrt(d))^(d-1))),,,[http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf Arora [Derandomized] (1998)],Arora [Derandomized],Arora,Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems,1998,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,,,,,,7,V: 7,2.9,O(V^(d+1) (log V)^(O(c*sqrt(d))^(d-1))),400,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
c: error parameter; c = 1/eps",V,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,O(V^(20m+5)),,,[http://www.cs.haifa.ac.il/~golumbic/courses/seminar-2010approx/mitchell99.pdf Mitchell (1999)],Mitchell,Mitchell,"Guillotine Subdivisions Approximate Polygonal Subdivisions: A Simple Polynomial-Time Approximation Scheme for Geometric TSP, k-MST, and Related Problems",1999,http://www.cs.haifa.ac.il/~golumbic/courses/seminar-2010approx/mitchell99.pdf,,,,,,7,V: 7,3,O(V^(20m+5)),400,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
m: error/guillotine parameter; m = 2sqrt(2)/eps",V,http://www.cs.haifa.ac.il/~golumbic/courses/seminar-2010approx/mitchell99.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,0,Approximate Geometric TSP,,,,1,0,(c*sqrt(d))^(O(d(c*sqrt(d))^(d-1))*V + O(dV log V),,,"[https://dl.acm.org/doi/10.1145/276698.276868 Rao, Smith [Monte Carlo Algorithm] (1998)]","Rao, Smith [Monte Carlo Algorithm]","Rao, Smith",Approximating geometrical graphs via “spanners” and “banyans”,1998,https://dl.acm.org/doi/10.1145/276698.276868,,,,,,4,V: 4,2,(c*sqrt(d))^(O(d(c*sqrt(d))^(d-1))*V + O(dV log V),11,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
c: error parameter; c = 1/eps",V,https://dl.acm.org/doi/10.1145/276698.276868,0,Real RAM,memory cells,3,V: 3,(cd)^(O(d))*V+(c*sqrt(d))^(O(d(c*sqrt(d))^(d-1))*log V,https://dl.acm.org/doi/10.1145/276698.276868,0,1,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,0,Approximate Geometric TSP,,,,1,0,2^((cd)^(O(d)))*V+O(dV log V),,,"[https://dl.acm.org/doi/10.1145/276698.276868 Rao, Smith [Las Vegas Algorithm] (1998)]","Rao, Smith [Las Vegas Algorithm]","Rao, Smith",Approximating geometrical graphs via “spanners” and “banyans”,1998,https://dl.acm.org/doi/10.1145/276698.276868,,,,,,4,V: 4,2,2^((cd)^(O(d)))*V+O(dV log V),11,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
c: error parameter; c = 1/eps",V,https://dl.acm.org/doi/10.1145/276698.276868,0,Real RAM,memory cells,3,V: 3,(cd)^(O(d))*V+2^((cd)^(O(d)))*log V,https://dl.acm.org/doi/10.1145/276698.276868,0,1,,1,Las Vegas,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,2,1,0,Approximate Geometric TSP,,,,1,0,2^((cd)^(O(d)))*V+(cd)^(O(d))*V log V,,,"[https://dl.acm.org/doi/10.1145/276698.276868 Rao, Smith [Derandomized Algorithm] (1998)]","Rao, Smith [Derandomized Algorithm]","Rao, Smith",Approximating geometrical graphs via “spanners” and “banyans”,1998,https://dl.acm.org/doi/10.1145/276698.276868,,,,,,4,V: 4,2,2^((cd)^(O(d)))*V+(cd)^(O(d))*V log V,11,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
c: error parameter; c = 1/eps",V,https://dl.acm.org/doi/10.1145/276698.276868,0,Real RAM,memory cells,3,V: 3,(cd)^(O(d))*V+2^((cd)^(O(d)))*log V,https://dl.acm.org/doi/10.1145/276698.276868,0,1,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,2^((d/eps)^(O(d)))*V,,,"[https://ieeexplore.ieee.org/document/6686206 Bartal, Gottlieb (2013)]","Bartal, Gottlieb","Bartal, Gottlieb",A Linear Time Approximation Scheme for Euclidean TSP,2013,https://ieeexplore.ieee.org/document/6686206,,,,,,3,V: 3,2,2^((d/eps)^(O(d)))*V,10,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
eps: error parameter",V,https://ieeexplore.ieee.org/document/6686206,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,1,0,Approximate Geometric TSP,,,,1,0,2^((poly(d)/eps)^(d-1))*V + poly(1/eps)*V log V,,,"[https://ieeexplore.ieee.org/document/9719718 Kisfaludi-Bak, Nederlof, Wegrzycki (2021)]","Kisfaludi-Bak, Nederlof, Wegrzycki","Kisfaludi-Bak, Nederlof, Wegrzycki",A Gap-ETH-Tight Approximation Scheme for Euclidean TSP,2021,https://ieeexplore.ieee.org/document/9719718,,,,,,4,V: 4,1,2^((poly(d)/eps)^(d-1))*V + poly(1/eps)*V log V,11,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
eps: error parameter",V,https://ieeexplore.ieee.org/document/9719718,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Unweighted Planar Graph TSP,,,,1,0,V^(O(1/eps)),,,"[https://ieeexplore.ieee.org/document/492665 Grigni, Koutsoupias, Papadimitriou (1995)]","Grigni, Koutsoupias, Papadimitriou","Grigni, Koutsoupias, Papadimitriou",An approximation scheme for planar graph TSP,1995,https://ieeexplore.ieee.org/document/492665,,,,,,7,V: 7,2,V^(O(1/eps)),,"V: number of vertices
E: number of edges
eps: error parameter",V,https://ieeexplore.ieee.org/document/492665,0,Real RAM,memory cells,7,V: 7,V^(O(1/eps))?,Stores that many approximate solutions (as mentioned in the algorithm),1,0,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Weighted Planar Graph TSP,,,,1,0,V^(O(1/eps^2)),,,"[https://dl.acm.org/doi/10.5555/314613.314632 Arora, Grigni, Karger, Klein, Woloszyn (1998)]","Arora, Grigni, Karger, Klein, Woloszyn","Arora, Grigni, Karger, Klein, Woloszyn",A polynomial-time approximation scheme for weighted planar graph TSP,1998,https://dl.acm.org/doi/10.5555/314613.314632,,,,,,7,V: 7,2,V^(O(1/eps^2)),,"V: number of vertices
E: number of edges
eps: error parameter",V,https://dl.acm.org/doi/10.5555/314613.314632,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Weighted Planar Graph TSP,,,,1,0,e^(O(1/eps^2))*V,,,[https://ieeexplore.ieee.org/document/1530756 Klein (2005)],Klein,Klein,A linear-time approximation scheme for planar weighted TSP,2005,https://ieeexplore.ieee.org/document/1530756,,,,,,3,V: 3,3,e^(O(1/eps^2))*V,,"V: number of vertices
E: number of edges
eps: error parameter",V,https://ieeexplore.ieee.org/document/1530756,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^2.5),,,"[https://www.jstor.org/stable/3690150 Papadimitriou, Yannakakis (1993)]","Papadimitriou, Yannakakis","Papadimitriou, Yannakakis",The Traveling Salesman Problem with Distances One and Two,1993,https://www.jstor.org/stable/3690150,,,,,,5.5,V: 5.5,3,O(V^2.5),,"V: number of vertices
E: number of edges",V,https://www.jstor.org/stable/3690150,0,Word RAM,words,5,V: 5,O(V^2)?,Calculate/keep track of and manipulate optimum 2-matching into a path/cycle; shouldn't require more than O(V^2) space,1,0,,0,,1,11/9,2,2.11,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(poly(V)),,,"[https://www.jstor.org/stable/3690150 Papadimitriou, Yannakakis (1993)]","Papadimitriou, Yannakakis","Papadimitriou, Yannakakis",The Traveling Salesman Problem with Distances One and Two,1993,https://www.jstor.org/stable/3690150,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Word RAM,words,5,V: 5,O(V^2)?,Calculate/keep track of and manipulate optimum triangle-free 2-matching into a path/cycle; shouldn't require more than O(V^2) space,1,0,,0,,1,7/6,2,2.167,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^3),,,"[https://link.springer.com/chapter/10.1007/11537311_44 Blaser, Ram (2005)]","Blaser, Ram","Blaser, Ram",An Improved Approximation Algorithm for TSP with Distances One and Two,2005,https://link.springer.com/chapter/10.1007/11537311_44,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11537311_44,0,Word RAM,words,5,V: 5,O(V^2)?,Calculate/keep track of and manipulate min-weight 4-cycle cover into a path/cycle; shouldn't require more than O(V^2) space,1,0,,0,,1,315/271,2,2.163,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^3)?,,,"[https://link.springer.com/chapter/10.1007/11537311_44 Blaser, Ram (2005)]","Blaser, Ram","Blaser, Ram",An Improved Approximation Algorithm for TSP with Distances One and Two,2005,https://link.springer.com/chapter/10.1007/11537311_44,,,,,,6,V: 6,3,O(V^3)?,,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11537311_44,0,Word RAM,words,5,V: 5,O(V^2)?,Calculate/keep track of and manipulate min-weight 4-cycle cover into a path/cycle; shouldn't require more than O(V^2) space,1,0,,0,,1,65/56,2,2.161,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^9)?,,,"[https://dl.acm.org/doi/abs/10.5555/1109557.1109627 Berman, Karpinski (2006)]","Berman, Karpinski","Berman, Karpinski","8/7-approximation algorithm for (1,2)-TSP",2006,https://dl.acm.org/doi/abs/10.5555/1109557.1109627,,,,,,7,V: 7,3,O(V^9)?,,"V: number of vertices
E: number of edges",V,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,0,Word RAM,words,3,V: 3,O(V)?,Keep track of current 2-matching,1,0,,0,,1,8/7,2,2.143,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^2.5),,,"[https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf Adamaszek, Mnich, Paluch [Section 3] (2018)]","Adamaszek, Mnich, Paluch [Section 3]","Adamaszek, Mnich, Paluch","New Approximation Algorithms for (1,2)-TSP",2018,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,,,,,,5.5,V: 5.5,3,O(V^2.5),,"V: number of vertices
E: number of edges",V,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,7/6,2,2.167,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^3),,,"[https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf Adamaszek, Mnich, Paluch [Section 4] (2018)]","Adamaszek, Mnich, Paluch [Section 4]","Adamaszek, Mnich, Paluch","New Approximation Algorithms for (1,2)-TSP",2018,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,8/7,2,2.143,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate (1,2) Metric TSP",,,,1,0,O(V^1.5 poly(log V))),,,"[https://arxiv.org/abs/2006.05490 Chen, Kannan, Khanna (2020)]","Chen, Kannan, Khanna","Chen, Kannan, Khanna",Sublinear Algorithms and Lower Bounds for Metric TSP Cost Estimation,2020,https://arxiv.org/abs/2006.05490,,,,,,4.5,V: 4.5,2.9,O(V^1.5 poly(log V))),,"V: number of vertices
E: number of edges",V,https://arxiv.org/abs/2006.05490,0,Word RAM (adj. matrix model),words,#VALUE!,,,,,,,1,Monte Carlo,1,1.625,2,2.625,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(V^3),,,"[https://www.math.cmu.edu/~af1p/Texfiles/TSPapprox.pdf Frieze, Galbiati, Maffioli (1982)]","Frieze, Galbiati, Maffioli","Frieze, Galbiati, Maffioli",On the Worst-Case Performance of Some Algorithms for the Asymmetric Traveling Salesman Problem,1982,https://www.math.cmu.edu/~af1p/Texfiles/TSPapprox.pdf,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://www.math.cmu.edu/~af1p/Texfiles/TSPapprox.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,log_2(V),2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(V^4),,,"[http://legacy.orie.cornell.edu/~dpw/cornell.ps Kleinberg, Williamson (1998)]","Kleinberg, Williamson","Kleinberg, Williamson",A new O(logn)-approximation algorithm for ATSP,1998,http://legacy.orie.cornell.edu/~dpw/cornell.ps,,,,,,7,V: 7,3,O(V^4),,"V: number of vertices
E: number of edges",V,https://dl.acm.org/doi/10.1145/1383369.1383378,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2*H_n,4,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/11830924_11,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(poly(V)),,,[https://dl.acm.org/doi/10.1145/1383369.1383378 Blaser (2002)],Blaser,Blaser,A new approximation algorithm for the asymmetric TSP with triangle inequality,2002,https://dl.acm.org/doi/10.1145/1383369.1383378,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,0.999*log_2(V),2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,"O(poly(V, log D))",,,"[https://ieeexplore.ieee.org/document/1238181 Kaplan, Lewenstein, Shafrir, Sviridenko (2003)]","Kaplan, Lewenstein, Shafrir, Sviridenko","Kaplan, Lewenstein, Shafrir, Sviridenko",Approximation algorithms for asymmetric TSP by decomposing directed regular multigraphs,2003,https://ieeexplore.ieee.org/document/1238181,,,,,,7,V: 7,1,"O(poly(V, log D))",400,"V: number of vertices
E: number of edges
D: minimum integer such that D*(solution to LP) is integral",V,https://ieeexplore.ieee.org/document/1238181,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,log_2(V)/log_2(sqrt(2)+1) ~ 0.787*log_2(V),2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/978-3-540-74208-1_8,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,"O(poly(V, log D))",,,"[https://link.springer.com/chapter/10.1007/978-3-540-74208-1_8 Feige, Singh (2007)]","Feige, Singh","Feige, Singh",Improved Approximation Ratios for Traveling Salesperson Tours and Paths in Directed Graphs,2007,https://link.springer.com/chapter/10.1007/978-3-540-74208-1_8,,,,,,7,V: 7,1,"O(poly(V, log D))",400,"V: number of vertices
E: number of edges
D: minimum integer such that D*(solution to LP) is integral",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2/3*log_2(V),2.6,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://homes.cs.washington.edu/~shayan/atsp.pdf Asadpour, Goemans, Madry, Oveis Gharan, Saberi (2010)]","Asadpour, Goemans, Madry, Oveis Gharan, Saberi","Asadpour, Goemans, Madry, Oveis Gharan, Saberi",An O(log n/ log log n)-approximation Algorithm for the Asymmetric Traveling Salesman Problem,2010,https://homes.cs.washington.edu/~shayan/atsp.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,https://homes.cs.washington.edu/~shayan/atsp.pdf,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2 + 8*log(V)/(log(log(V))),4,5.99,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(poly(V)),,,"[http://eprints.lse.ac.uk/106582/1/ATSP.pdf Svensson, Tarnawski, Vegh (2018)]","Svensson, Tarnawski, Vegh","Svensson, Tarnawski, Vegh",A Constant-Factor Approximation Algorithm for the Asymmetric Traveling Salesman Problem,2018,http://eprints.lse.ac.uk/106582/1/ATSP.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,http://eprints.lse.ac.uk/106582/1/ATSP.pdf,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,506,4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/1912.00670 Traub, Vygen (2020)]","Traub, Vygen","Traub, Vygen",An improved approximation algorithm for ATSP,2020,https://arxiv.org/abs/1912.00670,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,https://arxiv.org/abs/1912.00670,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,22+eps for any eps>0,3,4,0,multiplicative,yes?,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(V^3 + 2^z * z^2),,,[https://link.springer.com/chapter/10.1007/978-3-030-86593-1_4 Behrendt et. al. [Relaxed Generalized Christofides] (2021)],Behrendt et. al. [Relaxed Generalized Christofides],"Behrendt, Casel, Friedrich, Lagodzinski, Loser, Wilhelm",From Symmetry to Asymmetry: Generalizing TSP Approximations by Parametrization,2021,https://link.springer.com/chapter/10.1007/978-3-030-86593-1_4,,,,,,6,V: 6,3,O(V^3 + 2^z * z^2),,"V: number of vertices
E: number of edges
beta: asymmetry factor
z:  size of minimum vertex cover of the subgraph
induced by all beta-asymmetric links",V,https://link.springer.com/chapter/10.1007/978-3-030-86593-1_4,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,7/4 + 3/4 * beta,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with triangle ineq),,,,1,0,O(V^3 + 2^k * k^2),,,[https://link.springer.com/chapter/10.1007/978-3-030-86593-1_4 Behrendt et. al. [Relaxed Generalized Tree Doubling] (2021)],Behrendt et. al. [Relaxed Generalized Tree Doubling],"Behrendt, Casel, Friedrich, Lagodzinski, Loser, Wilhelm",From Symmetry to Asymmetry: Generalizing TSP Approximations by Parametrization,2021,https://link.springer.com/chapter/10.1007/978-3-030-86593-1_4,,,,,,6,V: 6,3,O(V^3 + 2^k * k^2),,"V: number of vertices
E: number of edges
beta: asymmetry factor
k: minimum number of beta-one-way arcs in a minimum spanning arborescence",V,https://link.springer.com/chapter/10.1007/978-3-030-86593-1_4,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2 + beta,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Symmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^2)?,,,"[https://epubs.siam.org/doi/10.1137/S0895480192240226 Andreae, Bandelt (1995)]","Andreae, Bandelt","Andreae, Bandelt",Performance Guarantees for Approximation Algorithms Depending on Parametrized Triangle Inequalities,1995,https://epubs.siam.org/doi/10.1137/S0895480192240226,,,,,,5,V: 5,3,O(V^2)?,,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,(time dominated by time to find min spanning arborescence),1,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,gamma^2+gamma,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Symmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(poly(V)),,,[https://www.sciencedirect.com/science/article/abs/pii/S0020019000000892 Bockenhauer et. al. (2000)],Bockenhauer et. al.,"Bockenhauer, Hromkovic, Klasing, Seibert, Unger",Approximation algorithms for the TSP with sharpened triangle inequality,2000,https://www.sciencedirect.com/science/article/abs/pii/S0020019000000892,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,"min(1+(2*gamma-1)/(3*gamma^2-2*gamma+1), 2/3 + gamma/(3-3*gamma))",2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://www.sciencedirect.com/science/article/pii/S1570866705000547,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Symmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^5),,,"[https://link.springer.com/chapter/10.1007/3-540-48447-7_10 Bender, Chekuri (2000)]","Bender, Chekuri","Bender, Chekuri",Performance Guarantees for the TSP with a Parameterized Triangle Inequality,2000,https://link.springer.com/chapter/10.1007/3-540-48447-7_10,,,,,,7,V: 7,3,O(V^5),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://www.sciencedirect.com/science/article/pii/S0304397501002870,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,4*gamma,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Symmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^2),,,[https://onlinelibrary.wiley.com/doi/abs/10.1002/net.1024 Andreae (2001)],Andreae,Andreae,On the traveling salesman problem restricted to inputs satisfying a relaxed triangle inequality,2001,https://onlinelibrary.wiley.com/doi/abs/10.1002/net.1024,,,,,,5,V: 5,3,O(V^2),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://onlinelibrary.wiley.com/doi/abs/10.1002/net.1024,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,gamma^2+gamma,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Symmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^3),,,[https://www.sciencedirect.com/science/article/pii/S0304397501002870 Bockenhauer et. al. (2002)],Bockenhauer et. al.,"Bockenhauer, Hromkovic, Klasing, Seibert, Unger",Towards the notion of stability of approximation for hard optimization tasks and the traveling salesman problem,2002,https://www.sciencedirect.com/science/article/pii/S0304397501002870,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://www.sciencedirect.com/science/article/pii/S0304397501002870,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3/2 * gamma^2,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^3),,,"[https://link.springer.com/chapter/10.1007/3-540-45841-7_18 Chandran, Ram (2002)]","Chandran, Ram","Chandran, Ram",Approximations for ATSP with Parametrized Triangle Inequality,2002,https://link.springer.com/chapter/10.1007/3-540-45841-7_18,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://www.sciencedirect.com/science/article/pii/S1570866705000547,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,gamma(1+o(1))/(1-gamma),2,2.5?,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^3),,,[https://link.springer.com/chapter/10.1007/3-540-45061-0_14 Blaser (2003)],Blaser,Blaser,An Improved Approximation Algorithm for the Asymmetric TSP with Strengthened Triangle Inequality,2003,https://link.springer.com/chapter/10.1007/3-540-45061-0_14,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://link.springer.com/chapter/10.1007/3-540-45061-0_14,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2/(2-gamma-gamma^3),2,2.5?,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^3),,,"[https://www.sciencedirect.com/science/article/pii/S1570866705000547 Blaser, Manthey, Sgall (2006)]","Blaser, Manthey, Sgall","Blaser, Manthey, Sgall",An improved approximation algorithm for the asymmetric TSP with strengthened triangle inequality,2006,https://www.sciencedirect.com/science/article/pii/S1570866705000547,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://www.sciencedirect.com/science/article/pii/S1570866705000547,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,(1+gamma)/(2-gamma-gamma^3),2,2.5?,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^3),,,"[https://www.sciencedirect.com/science/article/pii/S0196677408000412 Zhang, Li, Li (2009)]","Zhang, Li, Li","Zhang, Li, Li",An improved approximation algorithm for the ATSP with parameterized triangle inequality,2009,https://www.sciencedirect.com/science/article/pii/S0196677408000412,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://www.sciencedirect.com/science/article/pii/S0196677408000412,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,"max(1, (gamma^2+gamma+1)/2) + gamma^3/(1-gamma^2)",2,2.5?,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(poly(V)),,,"[https://link.springer.com/chapter/10.1007/978-3-642-03367-4_41 Kowalik, Mucha (2009)]","Kowalik, Mucha","Kowalik, Mucha",Two Approximation Algorithms for ATSP with Strengthened Triangle Inequality,2009,https://link.springer.com/chapter/10.1007/978-3-642-03367-4_41,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://link.springer.com/chapter/10.1007/978-3-642-03367-4_41,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1/(2-2*gamma),2,2.5?,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TSP (with gamma-parameterized triangle ineq),,,,1,0,O(poly(V)),,,"[https://link.springer.com/chapter/10.1007/978-3-642-03367-4_41 Kowalik, Mucha (2009)]","Kowalik, Mucha","Kowalik, Mucha",Two Approximation Algorithms for ATSP with Strengthened Triangle Inequality,2009,https://link.springer.com/chapter/10.1007/978-3-642-03367-4_41,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1",V,https://link.springer.com/chapter/10.1007/978-3-642-03367-4_41,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,"max((2-gamma)/(3-3*gamma) + O(1/V), 1/2(1+gamma)^2+eps) for any eps>0",2,2.5?,0,multiplicative,yes?,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(V^3)?,,,[https://www.sciencedirect.com/science/article/pii/016763779190016I Hoogeveen (1990)],Hoogeveen,Hoogeveen,Analysis of Christofides' heuristic: Some paths are more difficult than cycles,1990,https://www.sciencedirect.com/science/article/pii/016763779190016I,,,,,,6,V: 6,3,O(V^3)?,,"V: number of vertices
E: number of edges",V,,1,Real RAM,memory cells,5,V: 5,O(V^2)?,Depends on best space complexity for O(V^3) min-weight matching (the rest of the algorithm requires O(V) auxiliary space),1,0,,0,,1,5/3,2,2.667,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/1110.4604 An, Kleinberg, Shmoys (2011)]","An, Kleinberg, Shmoys","An, Kleinberg, Shmoys",Improving Christofides' Algorithm for the s-t Path TSP,2011,https://arxiv.org/abs/1110.4604,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,(1+sqrt(5))/2,2,2.618,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,[https://arxiv.org/abs/1209.3523 Sebo (2012)],Sebo,Sebo,Eight-Fifth Approximation for TSP Paths,2012,https://arxiv.org/abs/1209.3523,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,8/5,2,2.6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,[https://arxiv.org/abs/1502.03715 Vygen (2015)],Vygen,Vygen,Reassembling trees for the traveling salesman,2015,https://arxiv.org/abs/1502.03715,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1.599,2,2.599,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://arxiv.org/abs/1511.05514,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/1511.05514 Gottschalk, Vygen (2015)]","Gottschalk, Vygen","Gottschalk, Vygen",Better s-t-Tours by Gao Trees,2015,https://arxiv.org/abs/1511.05514,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1.566,2,2.566,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/1604.02486 Sebo, van Zuylen (2016)]","Sebo, van Zuylen","Sebo, van Zuylen",The Salesman's Improved Paths: 3/2+1/34 Integrality Gap and Approximation Ratio,2016,https://arxiv.org/abs/1604.02486,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3/2 + 1/34,2,2.530,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,"O(V^(6*ceil(log_2(1/eps)))*LP(V, ceil(log_2(1/eps))))",,,"[https://arxiv.org/abs/1707.03992 Traub, Vygen (2017)]","Traub, Vygen","Traub, Vygen",Approaching 3/2 for the s-t-path TSP,2017,https://arxiv.org/abs/1707.03992,,,,0,0,7,V: 7,3,"O(V^(6*ceil(log_2(1/eps)))*LP(V, ceil(log_2(1/eps))))",,"V: number of vertices
E: number of edges
eps: error parameter
LP(V, k): upper bound on the time needed to solve an LP (described in paper) with |B| ≤ kn",V,https://arxiv.org/abs/1707.03992,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3/2 + eps,2,2.501,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,[https://arxiv.org/abs/1805.04131 Zenklusen (2018)],Zenklusen,Zenklusen,A 1.5-Approximation for Path TSP,2018,https://arxiv.org/abs/1805.04131,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric TS Path Problem,,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/3406325.3451009 Karlin, Klein, Gharan ( + result from Traub, Vygen, Zenklusen [2020]) (2021)]","Karlin, Klein, Gharan ( + result from Traub, Vygen, Zenklusen [2020])","Karlin, Klein, Gharan",A (slightly) improved approximation algorithm for metric TSP,2021,https://dl.acm.org/doi/10.1145/3406325.3451009,,,,0,0,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1.5 - 2*10^(-36),2,2.499,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://arxiv.org/abs/1907.10376,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Path-Constrained Metric TS Path Problem,,,,1,0,O(poly(V)),,,[https://link.springer.com/chapter/10.1007/11554714_1 Bachrach et. al (2005)],Bachrach et. al,"Bachrach, Chen, Harrelson, Mihaescu, Rao, Shah",Lower Bounds for Maximum Parsimony with Gene Order Data,2005,https://link.springer.com/chapter/10.1007/11554714_1,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TS Path Problem (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://link.springer.com/article/10.1007/s10107-006-0046-8 Lam, Newman (2006)]","Lam, Newman","Lam, Newman",Traveling salesman path problems,2006,https://link.springer.com/article/10.1007/s10107-006-0046-8,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(sqrt(V)),4,8,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TS Path Problem (with triangle ineq),,,,1,0,O(V^5),,,"[https://link.springer.com/chapter/10.1007/11830924_11 Chekuri, Pal (2006)]","Chekuri, Pal","Chekuri, Pal",An O(logn) Approximation Ratio for the Asymmetric Traveling Salesman Path Problem,2006,https://link.springer.com/chapter/10.1007/11830924_11,,,,,,7,V: 7,3,O(V^5),,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11830924_11,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,"max(4*H_(V-2), 1) ~ 2.76*log_2(V)",4,6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TS Path Problem (with triangle ineq),,,,1,0,"O(poly(V, log D) + V^(1/eps + O(1)))",,,"[https://link.springer.com/chapter/10.1007/978-3-540-74208-1_8 Feige, Singh (2007)]","Feige, Singh","Feige, Singh",Improved Approximation Ratios for Traveling Salesperson Tours and Paths in Directed Graphs,2007,https://link.springer.com/chapter/10.1007/978-3-540-74208-1_8,,,,,,7,V: 7,1,"O(poly(V, log D) + V^(1/eps + O(1)))",400,"V: number of vertices
E: number of edges
D: minimum integer such that D*(solution to LP) is integral
eps: error parameter",V,https://link.springer.com/chapter/10.1007/978-3-540-74208-1_8,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2/3*(2+eps)*log_2(V) ~ (1.334+eps)*log_2(V),4,6,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TS Path Problem (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://homes.cs.washington.edu/~shayan/atsp.pdf Asadpour, Goemans, Madry, Oveis Gharan, Saberi (+ result from Feige, Singh [2007]) (2010)]","Asadpour, Goemans, Madry, Oveis Gharan, Saberi (+ result from Feige, Singh [2007])","Asadpour, Goemans, Madry, Oveis Gharan, Saberi",An O(log n/ log log n)-approximation Algorithm for the Asymmetric Traveling Salesman Problem,2010,https://homes.cs.washington.edu/~shayan/atsp.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
eps: error parameter",V,https://homes.cs.washington.edu/~shayan/atsp.pdf,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,(4 + 16*log(V)/(log(log(V))))(1+eps),4,5.99,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TS Path Problem (with triangle ineq),,,,1,0,O(poly(V)),,,"[http://eprints.lse.ac.uk/106582/1/ATSP.pdf Svensson, Tarnawski, Vegh (+ result from Feige, Singh [2007]) (2018)]","Svensson, Tarnawski, Vegh (+ result from Feige, Singh [2007])","Svensson, Tarnawski, Vegh",A Constant-Factor Approximation Algorithm for the Asymmetric Traveling Salesman Problem,2018,http://eprints.lse.ac.uk/106582/1/ATSP.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
eps: error parameter",V,http://eprints.lse.ac.uk/106582/1/ATSP.pdf,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1012(1+eps),4,4,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric TS Path Problem (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/1912.00670 Traub, Vygen (+ result from Feige, Singh [2007]) (2020)]","Traub, Vygen (+ result from Feige, Singh [2007])","Traub, Vygen",An improved approximation algorithm for ATSP,2020,https://arxiv.org/abs/1912.00670,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
eps: error parameter",V,https://arxiv.org/abs/1912.00670,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,44+eps,4,4,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,O(poly(V)),,,"[https://www.jstor.org/stable/pdf/170295.pdf Fisher, Nemhauser, Wolsey (1979)]","Fisher, Nemhauser, Wolsey","Fisher, Nemhauser, Wolsey",An Analysis of Approximations for Finding a Maximum Weight Hamiltonian Circuit,1979,https://www.jstor.org/stable/pdf/170295.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1/2,2,3,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,O(poly(V)),,,"[https://ieeexplore.ieee.org/document/365696 Kosaraju, Park, Stein (1994)]","Kosaraju, Park, Stein","Kosaraju, Park, Stein",Long tours and short superstrings,1994,https://ieeexplore.ieee.org/document/365696,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,38/63,2,2.658,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/pdf/10.5555/644108.644214 Lewenstein, Sviridenko (2003)]","Lewenstein, Sviridenko","Lewenstein, Sviridenko",Approximating Asymmetric Maximum TSP,2003,https://dl.acm.org/doi/pdf/10.5555/644108.644214,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,5/8,2,2.6,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,"O(poly(V, log D))",,,"[https://ieeexplore.ieee.org/document/1238181 Kaplan, Lewenstein, Shafrir, Sviridenko (2003)]","Kaplan, Lewenstein, Shafrir, Sviridenko","Kaplan, Lewenstein, Shafrir, Sviridenko",Approximation algorithms for asymmetric TSP by decomposing directed regular multigraphs,2003,https://ieeexplore.ieee.org/document/1238181,,,,,,7,V: 7,1,"O(poly(V, log D))",400,"V: number of vertices
E: number of edges
D: minimum integer such that D*(solution to LP) is integral",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2/3,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,O(poly(V)),,,"[https://www.researchgate.net/publication/220994326_Simpler_Approximation_of_the_Maximum_Asymmetric_Traveling_Salesman_Problem Paluch, Elbassioni, van Zuylen (2012)]","Paluch, Elbassioni, van Zuylen","Paluch, Elbassioni, van Zuylen",Simpler Approximation of the Maximum Asymmetric Traveling Salesman Problem,2012,https://www.researchgate.net/publication/220994326_Simpler_Approximation_of_the_Maximum_Asymmetric_Traveling_Salesman_Problem,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2/3,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,O(poly(V)),,,[https://arxiv.org/abs/2005.10800 Paluch (2020)],Paluch,Paluch,New Approximation Algorithms for Maximum Asymmetric Traveling Salesman and Shortest Superstring,2020,https://arxiv.org/abs/2005.10800,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,7/10,2,2.429,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP,,,,1,0,O(V^3),,,[https://www.sciencedirect.com/science/article/pii/S0196677403001123 Blaser (2004)],Blaser,Blaser,An 8/13-approximation algorithm for the asymmetric maximum TSP,2004,https://www.sciencedirect.com/science/article/pii/S0196677403001123,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://www.sciencedirect.com/science/article/pii/S0196677403001123,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,8/13 * (1-1/V),2,2.626,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Asymmetric Maximum TSP (with triangle ineq),,,,1,0,O(V^3),,,"[https://experts.illinois.edu/en/publications/polynomial-algorithms-with-the-estimates-frac-34-and-frac-56-for- Kostochka, Serdyukov (1985)]","Kostochka, Serdyukov","Kostochka, Serdyukov",Polynomial algorithms with the estimates $\frac 34$ and $\frac 56$ for the traveling salesman problem of the maximum,1985,https://experts.illinois.edu/en/publications/polynomial-algorithms-with-the-estimates-frac-34-and-frac-56-for-,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11561071_18,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3/4,2,2.334,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1238181,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP (with triangle ineq),,,,1,0,"O(poly(V, log D))",,,"[https://ieeexplore.ieee.org/document/1238181 Kaplan, Lewenstein, Shafrir, Sviridenko (2003)]","Kaplan, Lewenstein, Shafrir, Sviridenko","Kaplan, Lewenstein, Shafrir, Sviridenko",Approximation algorithms for asymmetric TSP by decomposing directed regular multigraphs,2003,https://ieeexplore.ieee.org/document/1238181,,,,,,7,V: 7,1,"O(poly(V, log D))",400,"V: number of vertices
E: number of edges
D: minimum integer such that D*(solution to LP) is integral",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,10/13,2,2.3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://link.springer.com/chapter/10.1007/11561071_18 Chen, Nagoya (2005)]","Chen, Nagoya","Chen, Nagoya",Improved Approximation Algorithms for Metric Max TSP,2005,https://link.springer.com/chapter/10.1007/11561071_18,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,27/35,2,2.297,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://www.sciencedirect.com/science/article/pii/S0167637709000200 Blaser, Ram, Sviridenko (2005)]","Blaser, Ram, Sviridenko","Blaser, Ram, Sviridenko",Improved approximation algorithms for metric maximum ATSP and maximum 3-cycle cover problems,2005,https://www.sciencedirect.com/science/article/pii/S0167637709000200,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,31/40,2,2.291,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Asymmetric Maximum TSP (with triangle ineq),,,,1,0,O(poly(V)),,,"[https://link.springer.com/chapter/10.1007/978-3-540-73951-7_51 Kowalik, Mucha (2007)]","Kowalik, Mucha","Kowalik, Mucha",35/44-Approximation for Asymmetric Maximum TSP with Triangle Inequality,2007,https://link.springer.com/chapter/10.1007/978-3-540-73951-7_51,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,35/44,2,2.258,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/book/10.1007/b101971,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Geometric Maximum TSP,490,Tunneling,,1,0,O(V^2 loglogE),,,[https://dl.acm.org/doi/10.1145/876638.876640 Barvinok (2003)],Barvinok,Barvinok,The geometric maximum traveling salesman problem,2003,https://dl.acm.org/doi/10.1145/876638.876640,,,,0,0,5.01,"V: 5.01,
E: 3.01",3,$O(V^2 \log\log E)$,,"V: number of vertices
E: number of edges",V,https://dl.acm.org/doi/10.1145/876638.876640,0,Real RAM,memory cells,3,V: 3,O(V)?,"Derived: One memory cell per tunnel-city pair, with one tunnel total",1,0,,0,,0,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Geometric Maximum TSP,,,,1,0,O(V^3),,,[https://www.mathnet.ru/php/archive.phtml?wshow=paper&jrnid=da&paperid=999&option_lang=eng Serdyukov (1987)],Serdyukov,Serdyukov,An asymptotically exact algorithm for the traveling salesman problem for a maximum in Euclidean space,1987,https://www.mathnet.ru/php/archive.phtml?wshow=paper&jrnid=da&paperid=999&option_lang=eng,,,,0,0,6,V: 6,3,O(V^3),30,"V: number of vertices
E: number of edges
d: dimension of space
eps: error parameter",V,https://www.mathnet.ru/php/archive.phtml?wshow=paper&jrnid=da&paperid=999&option_lang=eng,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+O(V^(-2/(d+1))),1,1,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/978-94-011-5678-3_18,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Geometric Maximum TSP,,,,1,0,"O(poly(V, eps))",,,[https://www.jstor.org/stable/42773f30-fdaf-39ce-96d6-446377d071fb Barvinok (1996)],Barvinok,Barvinok,Two Algorithmic Results for the Traveling Salesman Problem,1996,https://www.jstor.org/stable/42773f30-fdaf-39ce-96d6-446377d071fb,,,,0,0,7,V: 7,1,"O(poly(V, 1/eps))",400,"V: number of vertices
E: number of edges
d: dimension of space
eps: error parameter",V,https://www.jstor.org/stable/42773f30-fdaf-39ce-96d6-446377d071fb,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Metric Maximum TSP,,,,1,0,O(V^3),,,"[https://experts.illinois.edu/en/publications/polynomial-algorithms-with-the-estimates-frac-34-and-frac-56-for- Kostochka, Serdyukov (1985)]","Kostochka, Serdyukov","Kostochka, Serdyukov",Polynomial algorithms with the estimates $\frac 34$ and $\frac 56$ for the traveling salesman problem of the maximum,1985,https://experts.illinois.edu/en/publications/polynomial-algorithms-with-the-estimates-frac-34-and-frac-56-for-,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11561071_18,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,5/6,2,2.2,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1238181,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric Maximum TSP,,,,1,0,O(V^3),,,"[https://link.springer.com/chapter/10.1007/3-540-44634-6_19 Hassin, Rubinstein (2002)]","Hassin, Rubinstein","Hassin, Rubinstein",A 7/8-Approximation Algorithm for Metric Max TSP,2002,https://link.springer.com/chapter/10.1007/3-540-44634-6_19,,,,,,6,V: 6,3,O(V^3),30,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11561071_18,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,7/8 - O(1/sqrt(V)),2,2.143,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric Maximum TSP,,,,1,0,O(V^3),,,"[https://www.kurims.kyoto-u.ac.jp/~kyodo/kokyuroku/contents/pdf/1426-1.pdf Chen, Okamoto, Wang (2005)]","Chen, Okamoto, Wang","Chen, Okamoto, Wang",Improved Deterministic Approximation Algorithms for Max TSP,2005,https://www.kurims.kyoto-u.ac.jp/~kyodo/kokyuroku/contents/pdf/1426-1.pdf,,,,,,6,V: 6,3,O(V^3),30,"V: number of vertices
E: number of edges",V,https://www.kurims.kyoto-u.ac.jp/~kyodo/kokyuroku/contents/pdf/1426-1.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,17/20 - 1/(5V),2,2.177,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric Maximum TSP,,,,1,0,O(V^3),,,"[https://link.springer.com/chapter/10.1007/11561071_18 Chen, Nagoya (2005)]","Chen, Nagoya","Chen, Nagoya",Improved Approximation Algorithms for Metric Max TSP,2005,https://link.springer.com/chapter/10.1007/11561071_18,,,,,,6,V: 6,3,O(V^3),30,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/11561071_18,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,7/8 - O(V^(-1/3)),2,2.143,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Metric Maximum TSP,,,,1,0,O(poly(V)),,,"[https://www.sciencedirect.com/science/article/pii/S0304397509005350 Kowalik, Mucha (2009)]","Kowalik, Mucha","Kowalik, Mucha",Deterministic 7/8-approximation for the metric maximum TSP,2009,https://www.sciencedirect.com/science/article/pii/S0304397509005350,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,7/8,2,2.143,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP (with gamma-parameterized triangle ineq),,,,1,0,O(V^3),,,"[https://www.sciencedirect.com/science/article/pii/S0304397510001398 Zhang, Yin, Li (2010)]","Zhang, Yin, Li","Zhang, Yin, Li",An improved approximation algorithm for the maximum TSP,2010,https://www.sciencedirect.com/science/article/pii/S0304397510001398,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
gamma: triangle inequality parameter, 1/2 ≤ gamma < 1
k: min cycle size in optimal solution of the min cycle cover",V,https://www.sciencedirect.com/science/article/pii/S0304397510001398,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,(k*gamma+1-2*gamma)/(k*gamma),2.4,4?,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,2,0,0,Approximate Maximum TSP,,,,1,0,O(E),,,[https://pubsonline.informs.org/doi/10.1287/opre.27.4.799 Greedy (1979?)],Greedy,"Fisher, Nemhauser, Wolsey",An Analysis of Approximations for Finding a Maximum Weight Hamiltonian Circuit,1979?,https://pubsonline.informs.org/doi/10.1287/opre.27.4.799,,,,,,5,V: 5,3,O(E),10,"V: number of vertices
E: number of edges",V,,1,Real RAM,memory cells,3,V: 3,O(V),Stores current set of edges,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://eds.p.ebscohost.com/eds/pdfviewer/pdfviewer?vid=0&sid=ed1237d2-7f35-4cf4-b335-7dccead49042%40redis,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,2,0,0,Approximate Maximum TSP,,,,1,0,O(E),,,"[https://www.jstor.org/stable/2627296 Best Neighbor (Karg, Thompson) (1964)]","Best Neighbor (Karg, Thompson)","Karg, Thompson",A Heuristic Approach to Solving Travelling Salesman Problems,1964,https://www.jstor.org/stable/2627296,,,,,,5,V: 5,3,O(E),10,"V: number of vertices
E: number of edges",V,,1,Real RAM,memory cells,3,V: 3,O(V),Stores current set of edges,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://eds.p.ebscohost.com/eds/pdfviewer/pdfviewer?vid=0&sid=ed1237d2-7f35-4cf4-b335-7dccead49042%40redis,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Maximum TSP,,,,1,0,,,,[https://ieeexplore.ieee.org/document/6767727 2-opt (Lin) (1965)],2-opt (Lin),Lin,Computer solutions of the traveling salesman problem,1965,https://ieeexplore.ieee.org/document/6767727,,,,,,,,,,,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,3,V: 3,O(V),Stores current set of edges,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://eds.p.ebscohost.com/eds/pdfviewer/pdfviewer?vid=0&sid=ed1237d2-7f35-4cf4-b335-7dccead49042%40redis,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Maximum TSP,,,,1,0,O(poly(V))?,,,"[https://pubsonline.informs.org/doi/10.1287/opre.27.4.799 2-matching (Fisher, Nemhauser, Wolsey) (1979)]","2-matching (Fisher, Nemhauser, Wolsey)","Fisher, Nemhauser, Wolsey",An Analysis of Approximations for Finding a Maximum Weight Hamiltonian Circuit,1979,https://pubsonline.informs.org/doi/10.1287/opre.27.4.799,,,,,,7,V: 7,1,O(poly(V))?,400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2/3,2,2.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://eds.p.ebscohost.com/eds/pdfviewer/pdfviewer?vid=0&sid=ed1237d2-7f35-4cf4-b335-7dccead49042%40redis,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,0.001,0,0,Approximate Maximum TSP,,,,1,0,O(V^3),,,[- Serdyukov (1984)],Serdyukov,Serdyukov,,1984,-,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/978-3-642-03685-9_23,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3/4,2,2.333,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/978-3-642-03685-9_23,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP,,,,1,0,O(poly(V)),,,"[https://ieeexplore.ieee.org/document/365696 Kosaraju, Park, Stein (1994)]","Kosaraju, Park, Stein","Kosaraju, Park, Stein",Long tours and short superstrings,1994,https://ieeexplore.ieee.org/document/365696,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,19/27,2,2.422,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,https://link.springer.com/chapter/10.1007/978-3-642-03685-9_23,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP,,,,1,0,O(V^3+V^2*2^(O(1/eps))),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0020019098001021 Hassin, Rubinstein (1998)]","Hassin, Rubinstein","Hassin, Rubinstein",An approximation algorithm for the maximum traveling salesman problem,1998,https://www.sciencedirect.com/science/article/abs/pii/S0020019098001021,,,,,,6,V: 6,3,O(V^3+V^2*2^(O(1/eps))),30,"V: number of vertices
E: number of edges
eps: error parameter",V,https://www.shlomiru.com/papers/tsp1.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,5/7 - eps,2,2.401,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,accessible link: https://www.shlomiru.com/papers/tsp1.pdf,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP,,,,1,0,O(V^3+V^2*2^(O(1/eps))),,,"[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=2a73a4ad4e4deeff8371e5190c50433e682cbc4c Hassin, Rubinstein (2000)]","Hassin, Rubinstein","Hassin, Rubinstein",Better Approximations for Max TSP,2000,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=2a73a4ad4e4deeff8371e5190c50433e682cbc4c,,,,,,6,V: 6,3,O(V^3+V^2*2^(O(1/eps))),30,"V: number of vertices
E: number of edges
eps: error parameter",V,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=2a73a4ad4e4deeff8371e5190c50433e682cbc4c,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,25/33 - eps,2,2.321,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP,,,,1,0,O_eps(V^3),,,"[https://www.kurims.kyoto-u.ac.jp/~kyodo/kokyuroku/contents/pdf/1426-1.pdf Chen, Okamoto, Wang (2005)]","Chen, Okamoto, Wang","Chen, Okamoto, Wang",Improved Deterministic Approximation Algorithms for Max TSP,2005,https://www.kurims.kyoto-u.ac.jp/~kyodo/kokyuroku/contents/pdf/1426-1.pdf,,,,,,6,V: 6,3,O_eps(V^3),30,"V: number of vertices
E: number of edges
eps: error parameter",V,https://www.kurims.kyoto-u.ac.jp/~kyodo/kokyuroku/contents/pdf/1426-1.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,(61-20/V)*(1-eps)/(81-80eps),2,2.328,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP,,,,1,0,O(V^3),,,"[https://link.springer.com/chapter/10.1007/978-3-642-03685-9_23 Paluch, Mucha, Madry (2009)]","Paluch, Mucha, Madry","Paluch, Mucha, Madry",A 7/9 - Approximation Algorithm for the Maximum Traveling Salesman Problem,2009,https://link.springer.com/chapter/10.1007/978-3-642-03685-9_23,,,,,,6,V: 6,3,O(V^3),30,"V: number of vertices
E: number of edges",V,https://link.springer.com/chapter/10.1007/978-3-642-03685-9_23,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,7/9,2,2.286,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum TSP,,,,1,0,O(V^3),,,"[https://arxiv.org/abs/1512.09236 Dudycz, Marcinkowski, Paluch, Rybicki (2016)]","Dudycz, Marcinkowski, Paluch, Rybicki","Dudycz, Marcinkowski, Paluch, Rybicki",A 4/5 - Approximation Algorithm for the Maximum Traveling Salesman Problem,2016,https://arxiv.org/abs/1512.09236,,,,,,6,V: 6,3,O(V^3),30,"V: number of vertices
E: number of edges",V,https://arxiv.org/abs/1512.09236,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,4/5,2,2.25,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum Metric TSP with fixed doubling dimension,,,,1,0,V*2^(((k log V)/eps)^(O(k))),,,[https://www.microsoft.com/en-us/research/publication/bypassing-the-embedding-algorithms-for-low-dimensional-metrics/ Talwar (2004)],Talwar,Talwar,Bypassing the embedding: algorithms for low dimensional metrics,2004,https://www.microsoft.com/en-us/research/publication/bypassing-the-embedding-algorithms-for-low-dimensional-metrics/,,,,,,8,V: 8,2,V*2^(((k log V)/eps)^(O(k))),,"V: number of vertices
E: number of edges
k: doubling dimension (smallest k such that every ball can be covered by 2^k balls of half the radius)
eps: error parameter",V,https://www.microsoft.com/en-us/research/publication/bypassing-the-embedding-algorithms-for-low-dimensional-metrics/,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum Metric TSP with fixed doubling dimension,,,,1,0,V^(2^(O(k))) * 2^((k/eps)^(O(k))*sqrt(log(V))),,,"[https://arxiv.org/abs/1112.0699 Bartal, Gottlieb, Krauthgamer (2011)]","Bartal, Gottlieb, Krauthgamer","Bartal, Gottlieb, Krauthgamer",The Traveling Salesman Problem: Low-Dimensionality Implies a Polynomial Time Approximation Scheme,2011,https://arxiv.org/abs/1112.0699,,,,,,7,V: 7,2,V^(2^(O(k))) * 2^((k/eps)^(O(k))*sqrt(log(V))),,"V: number of vertices
E: number of edges
k: doubling dimension (smallest k such that every ball can be covered by 2^k balls of half the radius)
eps: error parameter",V,https://arxiv.org/abs/1112.0699,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum Metric TSP with fixed doubling dimension,,,,1,0,O(V^3 + 2^((2/eps)^(2k+1))),,,[https://arxiv.org/abs/2012.08379 Shenmaier [Theorem 2] (2021)],Shenmaier [Theorem 2],Shenmaier,Efficient PTAS for the Maximum Traveling Salesman Problem in a Metric Space of Fixed Doubling Dimension,2021,https://arxiv.org/abs/2012.08379,,,,,,6,V: 6,3,O(V^3 + 2^((2/eps)^(2k+1))),,"V: number of vertices
E: number of edges
k: doubling dimension (smallest k such that every ball can be covered by 2^k balls of half the radius)
eps: error parameter",V,https://arxiv.org/abs/2012.08379,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,Approximate Maximum Metric TSP with fixed doubling dimension,,,,1,0,O(V^3),,,[https://arxiv.org/abs/2012.08379 Shenmaier [Theorem 3] (2021)],Shenmaier [Theorem 3],Shenmaier,Efficient PTAS for the Maximum Traveling Salesman Problem in a Metric Space of Fixed Doubling Dimension,2021,https://arxiv.org/abs/2012.08379,,,,,,6,V: 6,3,O(V^3),,"V: number of vertices
E: number of edges
k: doubling dimension (smallest k such that every ball can be covered by 2^k balls of half the radius)
eps: error parameter",V,https://arxiv.org/abs/2012.08379,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1 + (11/6)/V^(1/(2k+1)),1,1,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61,The Traveling-Salesman Problem,1,0,0,"Approximate Maximum (0, 1) TSP",,,,1,0,O(V^9)?,,,"[https://dl.acm.org/doi/abs/10.5555/1109557.1109627 Berman, Karpinski (2006)]","Berman, Karpinski","Berman, Karpinski","8/7-approximation algorithm for (1,2)-TSP",2006,https://dl.acm.org/doi/abs/10.5555/1109557.1109627,,,,,,7,V: 7,3,O(V^9)?,,"V: number of vertices
E: number of edges",V,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,0,Word RAM,words,3,V: 3,O(V)?,Keep track of current 2-matching,1,0,,0,,1,6/7,2,2.167,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate k-TSP (with triangle inequality),,k-MST based,,1,0,O(V^2(E+V log V)),,,"[https://arxiv.org/abs/math/9409222 Ravi, Sundaram, Marathe, Ravi, Rosenkrantz (implicit) (1994)]","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz (implicit)","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz",Spanning trees short or small,1994,https://arxiv.org/abs/math/9409222,,,,,,7,V: 7,3,O(V^2(E+V log V)),,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,https://arxiv.org/abs/math/9409222,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(sqrt(k)),4,8,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Prize-Collecting TSP (with triangle inequality),,k-MST based,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/225058.225139 Awerbuch, Azar, Blum, Vempala (1995)]","Awerbuch, Azar, Blum, Vempala","Awerbuch, Azar, Blum, Vempala",Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen,1995,https://dl.acm.org/doi/10.1145/225058.225139,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
R: min total weight required",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,"O(log(min(V, R))^2)",4,7,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate k-TSP (with triangle inequality),,k-MST based,,1,0,O(V^2(log V)^4),,,"[https://www.sciencedirect.com/science/article/pii/S0022000097915427 Blum, Ravi, Vempala (implicit) (1996)]","Blum, Ravi, Vempala (implicit)","Blum, Ravi, Vempala",A Constant-Factor Approximation Algorithm for the k-MST Problem,1996,https://www.sciencedirect.com/science/article/pii/S0022000097915427,,,,,,5.01,V: 5.01,3,O(V^2(log V)^4),,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(1) (possibly 17?),3,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate k-TSP (with triangle inequality),,,,1,0,O(poly(V)),,,[https://ieeexplore.ieee.org/document/548489 Garg (1996)],Garg,Garg,A 3-approximation for the minimum tree spanning k vertices,1996,https://ieeexplore.ieee.org/document/548489,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate k-TSP (with triangle inequality),,,,1,0,V^(O(1/eps)),,,"[https://link.springer.com/content/pdf/10.1007/s10107-005-0693-1.pdf Arora, Karakostas (2000)]","Arora, Karakostas","Arora, Karakostas",A 2 + ε approximation algorithm for the k-MST problem,2000,https://link.springer.com/content/pdf/10.1007/s10107-005-0693-1.pdf,,,,,,7,V: 7,2,V^(O(1/eps)),,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,https://link.springer.com/content/pdf/10.1007/s10107-005-0693-1.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2+eps,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate k-TSP (with triangle inequality),,,,1,0,O(poly(V)),,,[https://dl.acm.org/doi/10.1145/1060590.1060650 Garg (2005)],Garg,Garg,Saving an epsilon: a 2-approximation for the k-MST problem in graphs,2005,https://dl.acm.org/doi/10.1145/1060590.1060650,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,k-MST based,,1,0,O(poly(V)),,,"[https://arxiv.org/abs/math/9409222 Ravi, Sundaram, Marathe, Ravi, Rosenkrantz (implicit) (1994)]","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz (implicit)","Ravi, Sundaram, Marathe, Ravi, Rosenkrantz",Spanning trees short or small,1994,https://arxiv.org/abs/math/9409222,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(k^(1/4)),4,7.5,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,k-MST based,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/pdf/10.1145/195058.195218 Garg, Hochbaum (implicit) (1994)]","Garg, Hochbaum (implicit)","Garg, Hochbaum",An O(log k) approximation algorithm for the k minimum spanning tree problem in the plane,1994,https://dl.acm.org/doi/pdf/10.1145/195058.195218,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(log k),4,7,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric Prize-Collecting TSP,,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/220279.220318 Mata, Mitchell (1995)]","Mata, Mitchell","Mata, Mitchell",Approximation algorithms for geometric tour and network design problems,1995,https://dl.acm.org/doi/10.1145/220279.220318,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit",V,https://dl.acm.org/doi/10.1145/220279.220318,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(log k),4,7,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,k-MST based,,1,0,O(V log V + 2^x*k*V log k),,,[https://www.sciencedirect.com/science/article/pii/S0925772196000211 Eppstein (1995)],Eppstein,Eppstein,Faster geometric k-point MST approximation,1995,https://www.sciencedirect.com/science/article/pii/S0925772196000211,,,,,,4,V: 4,3,O(V log V + 2^x*k*V log k),,"V: number of vertices
E: number of edges
k: min number of vertices to visit
x: any positive value ≤ k",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O((log k)/(log x)),1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,k-MST based,,1,0,O(V(log V + k^(O(1/eps))),,,[https://www.sciencedirect.com/science/article/pii/S0925772196000211 Eppstein (1995)],Eppstein,Eppstein,Faster geometric k-point MST approximation,1995,https://www.sciencedirect.com/science/article/pii/S0925772196000211,,,,,,7,V: 7,2,O(V(log V + k^(O(1/eps))),,"V: number of vertices
E: number of edges
k: min number of vertices to visit
eps: error parameter",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(1+eps)?,4,4,0,multiplicative,yes,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,,,1,0,"V^(O((log V)^(d-2)*(log log V)^(min(1, d-2)))/eps^(d-1))",,,[https://ieeexplore.ieee.org/document/548458 Arora (1996)],Arora,Arora,Polynomial time approximation schemes for Euclidean TSP and other geometric problems,1996,https://ieeexplore.ieee.org/document/548458,,,,,,8,V: 8,2,"V^(O((log V)^(d-2)*(log log V)^(min(1, d-2)))/eps^(d-1))",,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
k: min number of vertices to visit
eps: error parameter",V,https://ieeexplore.ieee.org/document/548458,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,,,1,0,O(Vk (log V)^(O(c*sqrt(d))^(d-1))),,,[http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf Arora (1998)],Arora,Arora,Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems,1998,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,,,,,,5.01,V: 5.01,2.9,O(Vk (log V)^(O(c*sqrt(d))^(d-1))),,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
k: min number of vertices to visit
eps: error parameter",V,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,EPRAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.1,The k Traveling-Salesman Problem,1,0,0,Approximate Geometric k-TSP,,,,1,0,O(V^(d+1)k (log V)^(O(c*sqrt(d))^(d-1))),,,[http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf Arora [Derandomized] (1998)],Arora [Derandomized],Arora,Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems,1998,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,,,,,,7,V: 7,2.9,O(V^(d+1)k (log V)^(O(c*sqrt(d))^(d-1))),,"V: number of vertices
E: number of edges
d: number of dimensions of space; d≥2
k: min number of vertices to visit
eps: error parameter",V,http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf,0,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.2,Orienteering Problem,1,0,0,Approximate Orienteering without specified start vertex,,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/225058.225139 Awerbuch, Azar, Blum, Vempala (1995)]","Awerbuch, Azar, Blum, Vempala","Awerbuch, Azar, Blum, Vempala",Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen,1995,https://dl.acm.org/doi/10.1145/225058.225139,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
R: true maximum possible value",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,"O(log(min(V, R))^2)",4,7,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.2,Orienteering Problem,1,0,0,Approximate Geometric Orienteering without specified start vertex,,,,1,0,O(poly(V)),,,[https://dl.acm.org/doi/pdf/10.5555/313852.314090 Mitchell (+ Eppstein 1995) (1996)],Mitchell (+ Eppstein 1995),Mitchell,Guillotine Subdivisions Approximate Polygonal Subdivisions: A Simple New Method for the Geometric k-MST Problem,1996,https://dl.acm.org/doi/pdf/10.5555/313852.314090,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: guillotine parameter",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,O(1)?,4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.2,Orienteering Problem,1,0,0,Approximate Geometric Orienteering (either path or cycle),,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/276884.276919 Arkin, Mitchell, Narasimhan (1998)]","Arkin, Mitchell, Narasimhan","Arkin, Mitchell, Narasimhan",Resource-constrained geometric network optimization,1998,https://dl.acm.org/doi/10.1145/276884.276919,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: guillotine parameter",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.2,Orienteering Problem,1,0,0,"Approximate Geometric Orienteering (tree, rooted)",,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/276884.276919 Arkin, Mitchell, Narasimhan (1998)]","Arkin, Mitchell, Narasimhan","Arkin, Mitchell, Narasimhan",Resource-constrained geometric network optimization,1998,https://dl.acm.org/doi/10.1145/276884.276919,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: guillotine parameter",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.2,Orienteering Problem,1,0,0,"Approximate Geometric Orienteering (tree, unrooted)",,,,1,0,O(poly(V)),,,"[https://dl.acm.org/doi/10.1145/276884.276919 Arkin, Mitchell, Narasimhan (1998)]","Arkin, Mitchell, Narasimhan","Arkin, Mitchell, Narasimhan",Resource-constrained geometric network optimization,1998,https://dl.acm.org/doi/10.1145/276884.276919,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges
k: min number of vertices to visit
m: guillotine parameter",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,5,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.2,Orienteering Problem,1,0,0,Approximate Orienteering (General?),,,,1,0,O(poly(V)),,,"[https://home.ttic.edu/~avrim/Papers/orienteering-sicomp.pdf Blum, Chawla, Karger, Lane, Meyerson, Minkoff (2003)]","Blum, Chawla, Karger, Lane, Meyerson, Minkoff","Blum, Chawla, Karger, Lane, Meyerson, Minkoff",Approximation Algorithms for Orienteering and Discounted-Reward TSP,2003,https://home.ttic.edu/~avrim/Papers/orienteering-sicomp.pdf,,,,,,7,V: 7,1,O(poly(V)),400,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,4,2.4,4,0,multiplicative,no,n/a,factor off from optimal,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.3,Minimum Latency Problem,0,0,0,,,,,1,0,,,,"[https://ieeexplore.ieee.org/document/1238179 Chaudhuri, Godfrey, Rao, Talwar (2003)]","Chaudhuri, Godfrey, Rao, Talwar","Chaudhuri, Godfrey, Rao, Talwar","Paths, trees, and minimum latency tours",2003,https://ieeexplore.ieee.org/document/1238179,,,,,,,,,,,"V: number of vertices
E: number of edges",V,,,Real RAM,memory cells,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
61.4,Maximum Path Cover,1,0,0,Approximate Maximum Path Cover,,,,1,0,O(V^9)?,,,"[https://dl.acm.org/doi/abs/10.5555/1109557.1109627 Berman, Karpinski (2006)]","Berman, Karpinski","Berman, Karpinski","8/7-approximation algorithm for (1,2)-TSP",2006,https://dl.acm.org/doi/abs/10.5555/1109557.1109627,,,,,,7,V: 7,3,O(V^9)?,,"V: number of vertices
E: number of edges",V,https://drops.dagstuhl.de/opus/volltexte/2018/9013/pdf/LIPIcs-ICALP-2018-9.pdf,0,Word RAM,words,3,V: 3,O(V)?,Keep track of current 2-matching,1,0,,0,,1,7/6,2,2.167,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
65,De Novo Genome Assembly,0.001,1,0,De Novo Genome Assembly,534,,,1,0,O(n^2),,,[ Overlap Layout Consensus (1987)],Overlap Layout Consensus,,,1987,,,,,0,0,5,n: 5,3,O(n^2),20,"n: sum of lengths of reads
f: number of input sequences?",n,,,Word RAM,words,5,n: 5,O(n^2)?,"Computes and stores all acceptable overlaps among all fragment pairs, along with detailed information regarding alignment, during one of the steps. Overlap graph has size at most O(n^2), layout and consensus should not take up more than O(n^2) space",1,0,,0,,1,,,,,,,,,0,0,,0,0,https://www.cs.jhu.edu/~langmea/resources/lecture_notes/assembly_olc.pdf,,,,,,,,,,,1000000,,,,,,,,,4,,,Bioinformatics
65,De Novo Genome Assembly,0.001,1,0,De Novo Genome Assembly,537,,,1,0,O(nlogn),,,[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC321006/ Greedy SEQAID (1984)],Greedy SEQAID,,SEQAID: a DNA sequence assembling program based on a mathematical model.,1984,https://www.ncbi.nlm.nih.gov/pmc/articles/PMC321006/,,,,0,0,5,n: 5,3,O(n^2)?,20,"n: sum of lengths of reads
f: number of input sequences?",n,,,Word RAM,words,5,n: 5,O(n^2)?,"Computes and stores all acceptable overlaps among all fragment pairs, along with detailed information regarding alignment, during one of the steps",1,0,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,9965,,,,,,,,,4,,,Bioinformatics
65,De Novo Genome Assembly,0.001,0,0,Shortest Superstring,,,,1,0,O(n),,,[https://www.proquest.com/docview/1834518377?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses Greedy Merge (-)],Greedy Merge,Ka Kit,Data-efficient De novo Genome Assembly Algorithm : Theory and Practice,-,https://www.proquest.com/docview/1834518377?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,0,0,3,n: 3,3,O(n),10,"n: sum of lengths of reads
f: number of input sequences?",n,,,Word RAM,words,3,n: 3,O(n),Simple concatenation of strings,1,0,,0,,1,4,2.4,4,0,multiplicative,no,n/a,factor off from shortest length,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
65,De Novo Genome Assembly,0.001,0,0,Shortest Superstring,,,,1,0,O(poly(n)),,,[https://dl.acm.org/doi/10.1145/1082036.1082041  (2005)],,"Kaplan, Lewenstein, Shafrir, Sviridenko",Approximation algorithms for asymmetric TSP by decomposing directed regular multigraphs,2005,https://dl.acm.org/doi/10.1145/1082036.1082041,,,,0,0,7,n: 7,1,O(poly(n)),400,"n: sum of lengths of reads
f: number of input sequences?",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2.5,2.4,4,0,multiplicative,no,n/a,factor off from shortest length,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
65,De Novo Genome Assembly,0.001,0,0,Reconstruction Problem,,,,1,0,O(n^2*eps + n^2 log n)?,,,[https://www.researchgate.net/publication/34090817_Exact_and_approximation_algorithms_for_DNA_sequence_reconstruction  (1991)],,Kececioglu,Exact and approximation algorithms for DNA sequence reconstruction,1991,https://www.researchgate.net/publication/34090817_Exact_and_approximation_algorithms_for_DNA_sequence_reconstruction,,,,0,0,5.01,n: 5.01,3,O(n^2*eps + n^2 log n)?,21,"n: sum of lengths of reads
f: number of input sequences?
eps: approximation parameter",n,,,Word RAM,words,5,n: 5,O(n^2)?,https://www.researchgate.net/publication/34090817_Exact_and_approximation_algorithms_for_DNA_sequence_reconstruction,0,1,,0,,1,3/(1-eps),2.4,4,0,multiplicative,no,n/a,factor off from shortest length,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
66,The Subset-Sum Problem,0.001,1,0,Subset Sum,545,,,1,0,\tilde{O}(nt^{1+\epsilon}),,,[https://arxiv.org/abs/1610.04712 Bringman (2017)],Bringman,Bringman,A Near-Linear Pseudopolynomial Time Algorithm for Subset Sum,2017,https://arxiv.org/abs/1610.04712,,,,1,0,4,"n: 4,
t: 4.01",2.9,$\tilde{O}(nt^{1+\epsilon})$,,"n: the number of integers in the set
t: the target sum
\epsilon: any positive constant",n,,,Word RAM,words,3,"n: 3,
t: 5?",\tilde{O}(nt^\epsilon),https://arxiv.org/abs/1610.04712,0,1,,1,Monte Carlo; (n+t)^{-\Omega(1)} error,0,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,O(n),,,[http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf Simple 1/2-approximation (?)],Simple 1/2-approximation,"Martello, Toth",Knapsack Problems: Algorithms and Computer Implementations,?,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,,,,,,3,n: 3,3,O(n),10,"n: the number of integers in the set
t: the target sum",n,,0,Word RAM,words,1,n: 1,O(1),derived: only need to store info about current item being looked at,1,0,,0,,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Subset_sum_problem#Simple_1/2-approximation,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,"O(max(n*log(n), n^k))",,,[https://dl.acm.org/doi/pdf/10.1145/800125.804034 Johnson (1974)],Johnson,Johnson,Approximation Algorithms for Combinatorial Problems,1974,https://dl.acm.org/doi/pdf/10.1145/800125.804034,,,,,,7,n: 7,3,"O(max(n*log(n), n^k))",400,"n: the number of integers in the set
t: the target sum
k: a positive integer constant",n,,0,Word RAM,words,3,n: 3,O(n),https://link.springer.com/article/10.1007/BF02612360,0,1,,0,,1,k/(k+1),1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,"O(min(n/eps^2, 1/eps^4 log (1/eps)))",,,"[https://dl.acm.org/doi/10.1145/321906.321909 Ibarra, Kim (1975)]","Ibarra, Kim","Ibarra, Kim",Fast Approximation Algorithms for the Knapsack and Sum of Subset Problems,1975,https://dl.acm.org/doi/10.1145/321906.321909,,,,,,3,n: 3,3,"O(min(n/eps^2, 1/eps^4 log (1/eps)))",10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,https://dl.acm.org/doi/10.1145/321906.321909,0,Word RAM,words,3,n: 3,O(n + 1/eps^3),https://dl.acm.org/doi/10.1145/321906.321909,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66,The Subset-Sum Problem,0.001,1,0,Subset Sum (Approximate),,,,1,0,O(n + 1/eps^3),,,[https://ieeexplore.ieee.org/document/4567944 Lawler (1979)],Lawler,Lawler,Fast approximation algorithms for knapsack problems,1979,https://ieeexplore.ieee.org/document/4567944,,,,,,3,n: 3,3,O(n + 1/eps^3),10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,,0,Word RAM,words,3,n: 3,O(n + 1/eps^2),https://ieeexplore.ieee.org/document/4567944,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,0.001,1,0,Subset Sum (Approximate),,,,1,0,O(n + 1/eps^2 log (1/eps)),,,[https://ieeexplore.ieee.org/document/4567944 Lawler (1979)],Lawler,Lawler,Fast approximation algorithms for knapsack problems,1979,https://ieeexplore.ieee.org/document/4567944,,,,,,3,n: 3,3,O(n + 1/eps^2 log (1/eps)),10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,,0,Word RAM,words,3,n: 3,O(n + 1/eps^2 log (1/eps)),https://ieeexplore.ieee.org/document/4567944,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,O(n/eps),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner (1980)]","Gens, Levner","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,3,n: 3,3,O(n/eps),10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,,0,Word RAM,words,3,n: 3,O(n/eps),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,O(n^2),,,"[https://link.springer.com/article/10.1007/BF02612360 Martello, Toth [Section 3] (1984)]","Martello, Toth [Section 3]","Martello, Toth",Worst-case analysis of greedy algorithms for the subset-sum problem,1984,https://link.springer.com/article/10.1007/BF02612360,,,,,,5,n: 5,3,O(n^2),20,"n: the number of integers in the set
t: the target sum",n,,0,Word RAM,words,3,n: 3,O(n),https://link.springer.com/article/10.1007/BF02612360,0,1,,0,,1,0.75,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,O(n^k),,,"[https://link.springer.com/article/10.1007/BF02612360 Martello, Toth [Section 4] (1984)]","Martello, Toth [Section 4]","Martello, Toth",Worst-case analysis of greedy algorithms for the subset-sum problem,1984,https://link.springer.com/article/10.1007/BF02612360,,,,,,7,n: 7,3,O(n^k),400,"n: the number of integers in the set
t: the target sum
k: an integer constant, with k≥2",n,,0,Word RAM,words,3,n: 3,O(n),https://link.springer.com/article/10.1007/BF02612360,0,1,,0,,1,(3k-3)/(3k-2),1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/abs/10.1016/0167-6377%2886%2990065-9,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,O(n^2*log(t)/eps),,,[https://dahlan.unimal.ac.id/files/ebooks/2009%20Introduction%20to%20Algorithms%20Third%20Ed.pdf CLRS (1990)],CLRS,"Cormen, Leiserson, Rivest, Stein",Introduction to Algorithms,1990,https://dahlan.unimal.ac.id/files/ebooks/2009%20Introduction%20to%20Algorithms%20Third%20Ed.pdf,,,,,,6,n: 6,3,O(n^2*log(t)/eps),30,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,,1,Word RAM,words,3,n: 3,O(n*log(t)/eps),Derived: this is the max length of the list at any given point,1,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS?,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,"O(min(n/eps, n+1/eps^3))",,,"[https://www.tandfonline.com/doi/abs/10.1080/03155986.1994.11732245 Gens, Levner (1992)]","Gens, Levner","Gens, Levner",A Fast Approximation Algorithm For The Subset-Sum Problem,1992,https://www.tandfonline.com/doi/abs/10.1080/03155986.1994.11732245,,,,,,3,n: 3,3,"O(min(n/eps, n+1/eps^3))",10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,https://www.tandfonline.com/doi/abs/10.1080/03155986.1994.11732245,0,Word RAM,words,3,n: 3,"O(min(n/eps, n + 1/eps^2))",https://www.tandfonline.com/doi/abs/10.1080/03155986.1994.11732245,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,2,1,0,Subset Sum (Approximate),,,,1,0,"O(min(n/eps, n+1/eps^2 log(1/eps))",,,"[https://www.sciencedirect.com/science/article/pii/S0022000003000060 Kellerer, Mansini, Pferschy, Grazia Speranza (2003)]","Kellerer, Mansini, Pferschy, Grazia Speranza","Kellerer, Mansini, Pferschy, Grazia Speranza",An efficient fully polynomial approximation scheme for the Subset-Sum Problem,2003,https://www.sciencedirect.com/science/article/pii/S0022000003000060,,,,,,3,n: 3,3,"O(min(n/eps, n+1/eps^2 log(1/eps))",10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,,0,Word RAM,words,3,n: 3,O(n + 1/eps),https://www.sciencedirect.com/science/article/pii/S0022000003000060,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,1,1,0,Subset Sum (Weakly Approximate),,,,1,0,O((n + 1/eps^(5/3))*poly(log(1/eps))),,,"[https://arxiv.org/abs/1804.02269 Mucha, Wegrzycki, Wlodarczyk (2018)]","Mucha, Wegrzycki, Wlodarczyk","Mucha, Wegrzycki, Wlodarczyk",A Subquadratic Approximation Scheme for Partition,2018,https://arxiv.org/abs/1804.02269,,,,,,3,n: 3,3,O((n + 1/eps^(5/3))*poly(log(1/eps))),10,"n: the number of integers in the set
t: the target sum
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1804.02269,0,Word RAM,words,,,,,,,,1,Monte Carlo?,1,1 - eps,1,2,0,multiplicative,yes,FPRAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66,The Subset-Sum Problem,1,1,0,Subset Sum (Weakly Approximate),,,,1,0,O((n + 1/eps^(3/2))*poly(log(1/eps))),,,"[https://arxiv.org/abs/2212.02883 Wu, Chen (2022)]","Wu, Chen","Wu, Chen",Improved Approximation Schemes for (Un-)Bounded Subset-Sum and Partition,2022,https://arxiv.org/abs/2212.02883,,,,,,3,n: 3,3,O((n + 1/eps^(3/2))*poly(log(1/eps))),10,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/2212.02883,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66,The Subset-Sum Problem,1,0,0,Multiple Subset Sum (Approximate),,,,1,0,O((n+m)f(eps)) for some function f(eps) of eps,,,"[https://epubs.siam.org/doi/10.1137/S1052623498348481 Caprara, Kellerer, Pferschy [H^eps] (2000)]","Caprara, Kellerer, Pferschy [H^eps]","Caprara, Kellerer, Pferschy",The Multiple Subset Sum Problem,2000,https://epubs.siam.org/doi/10.1137/S1052623498348481,,,,,,3,n: 3,3,O((n+m)f(eps)) for some function f(eps) of eps,,"n: the number of integers in the set
m: number of bins
t: the target sum
eps: error parameter, between 0 and 1",n,,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66,The Subset-Sum Problem,1,0,0,Bottleneck Multiple Subset Sum (Approximate),,,,1,0,O(n log n),,,"[https://epubs.siam.org/doi/10.1137/S1052623498348481 Caprara, Kellerer, Pferschy [H^(2/3)] (2000)]","Caprara, Kellerer, Pferschy [H^(2/3)]","Caprara, Kellerer, Pferschy",The Multiple Subset Sum Problem,2000,https://epubs.siam.org/doi/10.1137/S1052623498348481,,,,,,4,n: 4,3,O(n log n),11,"n: the number of integers in the set
m: number of bins
t: the target sum
eps: error parameter, between 0 and 1",n,,0,Word RAM,words,3,n: 3,O(n),https://epubs.siam.org/doi/10.1137/S1052623498348481,0,1,,0,,1,2/3,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n log n),,,[https://www.jstor.org/stable/167356 Dantzig?/Greedy with Sorting (1957)],Dantzig?/Greedy with Sorting,Dantzig,Discrete-Variable Extremum Problems,1957,https://www.jstor.org/stable/167356,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,0,Word RAM,words,3,n: 3,O(n),Requires keeping track of a sorted list of elements,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n^(1/eps)/eps),,,[https://dl.acm.org/doi/10.1145/321864.321873 Sahni (1975)],Sahni,Sahni,Approximate Algorithms for the 0/1 Knapsack Problem,1975,https://dl.acm.org/doi/10.1145/321864.321873,,,,,,7,n: 7,3,O(n^(1/eps)/eps),400,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1. Requires 1/eps to be an integer",n,https://dl.acm.org/doi/10.1145/321864.321873,0,Word RAM,words,3,n: 3,O(n),https://dl.acm.org/doi/10.1145/321864.321873,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n log n + min(n/eps^2, 1/eps^4 log (1/eps)))",,,"[https://dl.acm.org/doi/10.1145/321906.321909 Ibarra, Kim (1975)]","Ibarra, Kim","Ibarra, Kim",Fast Approximation Algorithms for the Knapsack and Sum of Subset Problems,1975,https://dl.acm.org/doi/10.1145/321906.321909,,,,,,4,n: 4,3,"O(n log n + min(n/eps^2, 1/eps^4 log (1/eps)))",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dl.acm.org/doi/10.1145/321906.321909,0,Word RAM,words,3,n: 3,O(n + 1/eps^3),https://dl.acm.org/doi/10.1145/321906.321909,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n),,,"[https://www.jstor.org/stable/170149 Balas, Zemel (1977)]","Balas, Zemel","Balas, Zemel",An Algorithm for Large Zero-One Knapsack Problems,1977,https://www.jstor.org/stable/170149,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://www.jstor.org/stable/170149,0,Word RAM,words,3,n: 3,O(n),Linear-time median-finding requires O(n) space (due to solving recursive subproblems),1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n log (1/eps) + 1/eps^4),,,[https://ieeexplore.ieee.org/document/4567944 Lawler (1979)],Lawler,Lawler,Fast approximation algorithms for knapsack problems,1979,https://ieeexplore.ieee.org/document/4567944,,,,,,3,n: 3,3,O(n log (1/eps) + 1/eps^4),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://ieeexplore.ieee.org/document/4567944,0,Word RAM,words,3,n: 3,O(n + 1/eps^3),https://www.jstor.org/stable/3689221,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,O((n^2 log n)/eps),,,"[https://www.sciencedirect.com/science/article/pii/0377221781901752 Magazine, Oguz (1981)]","Magazine, Oguz","Magazine, Oguz",A fully polynomial approximation algorithm for the 0–1 knapsack problem,1981,https://www.sciencedirect.com/science/article/pii/0377221781901752,,,,,,5.01,n: 5.01,3,O((n^2 log n)/eps),,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0377221781901752,0,Word RAM,words,3,n: 3,O(n/eps),https://www.sciencedirect.com/science/article/pii/0377221781901752,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n^(1/eps - 2) + n log n),,,"[https://www.sciencedirect.com/science/article/pii/S0377221799002611 Caprara, Kellerer, Pferschy, Pisinger (1998)]","Caprara, Kellerer, Pferschy, Pisinger","Caprara, Kellerer, Pferschy, Pisinger",Approximation algorithms for knapsack problems with cardinality constraints,1998,https://www.sciencedirect.com/science/article/pii/S0377221799002611,,,,,,7,n: 7,3,O(n^(1/eps - 2) + n log n),400,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1. Requires 1/eps to be an integer",n,https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n*min(log n, log(1/eps)) + 1/eps^2 * min(n, 1/eps^2))",,,"[https://link.springer.com/article/10.1023/A:1009813105532 Kellerer, Pferschy (1999)]","Kellerer, Pferschy","Kellerer, Pferschy",A New Fully Polynomial Time Approximation Scheme for the Knapsack Problem,1999,https://link.springer.com/article/10.1023/A:1009813105532,,,,,,4,n: 4,3,"O(n*min(log n, log(1/eps)) + 1/eps^2 * min(n, 1/eps^2))",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/article/10.1023/B:JOCO.0000021934.29833.6b,0,Word RAM,words,3,n: 3,O(n + 1/eps^2),https://link.springer.com/article/10.1023/A:1009813105532,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n*min(log n, log(1/eps)) + 1/eps^2 * log(1/eps) * min(n, 1/eps * log(1/eps)))",,,"[https://link.springer.com/article/10.1023/B:JOCO.0000021934.29833.6b Kellerer, Pferschy (2004)]","Kellerer, Pferschy","Kellerer, Pferschy",Improved Dynamic Programming in Connection with an FPTAS for the Knapsack Problem,2004,https://link.springer.com/article/10.1023/B:JOCO.0000021934.29833.6b,,,,,,4,n: 4,3,"O(n*min(log n, log(1/eps)) + 1/eps^2 * log(1/eps) * min(n, 1/eps * log(1/eps)))",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/article/10.1023/B:JOCO.0000021934.29833.6b,0,Word RAM,words,3,n: 3,O(n + 1/eps^2),https://link.springer.com/article/10.1023/B:JOCO.0000021934.29833.6b,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n*(log(1/eps))^(O(1/eps))),,,"[https://www.sciencedirect.com/science/article/pii/S0166218X05002787 Mastrolilli, Hutter (2006)]","Mastrolilli, Hutter","Mastrolilli, Hutter",Hybrid rounding techniques for knapsack problems,2006,https://www.sciencedirect.com/science/article/pii/S0166218X05002787,,,,,,3,n: 3,3,O(n*(log(1/eps))^(O(1/eps))),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/S0166218X05002787,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0166218X05002787,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n*min(log n, log(1/eps)) + 1/eps^3 log(1/eps))",,,[https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf Rhee (Section 4) (2015)],Rhee (Section 4),Rhee,Faster Fully Polynomial Approximation Schemes for Knapsack Problems,2015,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,,,,,,4,n: 4,3,"O(n*min(log n, log(1/eps)) + 1/eps^3 log(1/eps))",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n*min(log n, log(1/eps)) + 1/eps^2.5 (log(1/eps))^3)",,,[https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf Rhee (Section 5) (2015)],Rhee (Section 5),Rhee,Faster Fully Polynomial Approximation Schemes for Knapsack Problems,2015,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,,,,,,4,n: 4,3,"O(n*min(log n, log(1/eps)) + 1/eps^2.5 (log(1/eps))^3)",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,0,Word RAM,words,,,,,,0,,1,Monte Carlo,1,1 - eps,1,2,0,multiplicative,yes,FPRAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n*min(log n, log(1/eps)) + (1/eps)^(5/2)/2^(Omega(sqrt(log(1/eps)))))",,,[https://drops.dagstuhl.de/opus/volltexte/2018/8299/ Chan (Corollary 4) (2018)],Chan (Corollary 4),Chan,Approximation Schemes for 0-1 Knapsack,2018,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,,,,,,4,n: 4,3,"O(n*min(log n, log(1/eps)) + (1/eps)^(5/2)/2^(Omega(sqrt(log(1/eps)))))",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,0,Word RAM,words,3,n: 3,O(n + 1/eps^2 poly(log(1/eps))),https://drops.dagstuhl.de/opus/volltexte/2018/8299/,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,"O(n*min(log n, log(1/eps)) + (1/eps)^(12/5)/2^(Omega(sqrt(log(1/eps)))))",,,[https://drops.dagstuhl.de/opus/volltexte/2018/8299/ Chan (Corollary 11) (2018)],Chan (Corollary 11),Chan,Approximation Schemes for 0-1 Knapsack,2018,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,,,,,,4,n: 4,3,"O(n*min(log n, log(1/eps)) + (1/eps)^(12/5)/2^(Omega(sqrt(log(1/eps)))))",11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n^(3/2)/eps*poly(log(1/eps))),,,[https://drops.dagstuhl.de/opus/volltexte/2018/8299/ Chan (Corollary 12) (2018)],Chan (Corollary 12),Chan,Approximation Schemes for 0-1 Knapsack,2018,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,,,,,,4.5,n: 4.5,3,O(n^(3/2)/eps*poly(log(1/eps))),16,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,0,Word RAM,words,,,,,,,,1,Las Vegas,1,1 - eps,1,2,0,multiplicative,yes,FPRAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O((n/eps^(4/3) + 1/eps^2)/2^(Omega(sqrt(log(1/eps))))),,,[https://drops.dagstuhl.de/opus/volltexte/2018/8299/ Chan (Corollary 13) (2018)],Chan (Corollary 13),Chan,Approximation Schemes for 0-1 Knapsack,2018,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,,,,,,3,n: 3,3,O((n/eps^(4/3) + 1/eps^2)/2^(Omega(sqrt(log(1/eps))))),,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://drops.dagstuhl.de/opus/volltexte/2018/8299/,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n*log(1/eps) + (1/eps)^(9/4)/2^(Omega(sqrt(log(1/eps))))),,,[https://arxiv.org/abs/1904.09562 Jin [Theorem 1] (2019)],Jin [Theorem 1],Jin,An Improved FPTAS for 0-1 Knapsack,2019,https://arxiv.org/abs/1904.09562,,,,,,3,n: 3,3,O(n*log(1/eps) + (1/eps)^(9/4)/2^(Omega(sqrt(log(1/eps))))),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1904.09562,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O((n^(3/4)/eps^(3/2) + 1/eps^2)/2^(Omega(sqrt(log(1/eps))))),,,[https://arxiv.org/abs/1904.09562 Jin [Theorem 2] (2019)],Jin [Theorem 2],Jin,An Improved FPTAS for 0-1 Knapsack,2019,https://arxiv.org/abs/1904.09562,,,,,,2.75,n: 2.75,3,O((n^(3/4)/eps^(3/2) + 1/eps^2)/2^(Omega(sqrt(log(1/eps))))),,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1904.09562,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O(n*log(1/eps) + (1/eps)^(11/5)/2^(Omega(sqrt(log(1/eps))))),,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch113 Deng, Jin, Mao (2023)]","Deng, Jin, Mao","Deng, Jin, Mao",Approximating Knapsack and Partition via Dense Subset Sums,2023,https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch113,,,,,,3,n: 3,3,O(n*log(1/eps) + (1/eps)^(11/5)/2^(Omega(sqrt(log(1/eps))))),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch113,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O((n+1/eps^2)*poly(log(1/eps))),,,[https://arxiv.org/abs/2308.07004 Mao (2023)],Mao,Mao,(1−ε)-Approximation of Knapsack in Nearly Quadratic Time,2023,https://arxiv.org/abs/2308.07004,,,,,,3,n: 3,3,O((n+1/eps^2)*poly(log(1/eps))),,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/2308.07004,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,0-1 Knapsack (Approximate),,,,1,0,O((n+1/eps^2)*poly(log(1/eps))),,,"[https://arxiv.org/abs/2308.07821 Chen, Lian, Mao, Zhang (2023)]","Chen, Lian, Mao, Zhang","Chen, Lian, Mao, Zhang",A Nearly Quadratic-Time FPTAS for Knapsack,2023,https://arxiv.org/abs/2308.07821,,,,,,3,n: 3,3,O((n+1/eps^2)*poly(log(1/eps))),,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/2308.07821,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Bounded Knapsack (Approximate),,,,1,0,O(n log n),,,[http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf Modified Greedy with Sorting (?)],Modified Greedy with Sorting,"Martello, Toth",Knapsack Problems: Algorithms and Computer Implementations,?,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,0,Word RAM,words,3,n: 3,O(n),Requires keeping track of a sorted list of elements,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,0.001,0,0,Bounded Knapsack (Approximate),,,,1,0,O(n)?,,,[- Modified Greedy with Linear-Time Median Finding (-)],Modified Greedy with Linear-Time Median Finding,,,-,-,,,,,,3,n: 3,3,O(n)?,10,"n: total number of items
C: constraint/weight parameter",n,,1,Word RAM,words,3,n: 3,O(n),Requires keeping track of a sorted list of elements,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Bounded Knapsack (Approximate),,,,1,0,O(n/eps^4 + (n log n)/eps^3),,,"[https://link.springer.com/book/10.1007/978-3-540-24777-7 Kellerer, Pferschy, Pisinger (2004)]","Kellerer, Pferschy, Pisinger","Kellerer, Pferschy, Pisinger",Knapsack Problems,2004,https://link.springer.com/book/10.1007/978-3-540-24777-7,,,,,,4,n: 4,3,O(n/eps^4 + (n log n)/eps^3),11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/book/10.1007/978-3-540-24777-7,0,Word RAM,words,3,n: 3,O(n/eps^3),https://link.springer.com/book/10.1007/978-3-540-24777-7,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Bounded Knapsack (Approximate),,,,1,0,O(n log n + 1/eps^3 log(1/eps)),,,[https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf Rhee (2015)],Rhee,Rhee,Faster Fully Polynomial Approximation Schemes for Knapsack Problems,2015,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,,,,,,4,n: 4,3,O(n log n + 1/eps^3 log(1/eps)),11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Unbounded Knapsack (Approximate),,,,1,0,O(n log n),,,[https://www.jstor.org/stable/167356 Dantzig/Greedy with Sorting (1957)],Dantzig/Greedy with Sorting,Dantzig,Discrete-Variable Extremum Problems,1957,https://www.jstor.org/stable/167356,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,http://old.math.nsc.ru/LBRT/k5/knapsack_problems.pdf,0,Word RAM,words,3,n: 3,O(n),Requires keeping track of a sorted list of elements,1,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Knapsack_problem#Greedy_approximation_algorithm,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Unbounded Knapsack (Approximate),,,,1,0,"O(min(n/eps^3, n + 1/eps^4 log (1/eps)))",,,"[https://dl.acm.org/doi/10.1145/321906.321909 Ibarra, Kim (1975)]","Ibarra, Kim","Ibarra, Kim",Fast Approximation Algorithms for the Knapsack and Sum of Subset Problems,1975,https://dl.acm.org/doi/10.1145/321906.321909,,,,,,3,n: 3,3,"O(min(n/eps^3, n + 1/eps^4 log (1/eps)))",,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dl.acm.org/doi/10.1145/321906.321909,0,Word RAM,words,3,n: 3,O(n + 1/eps^3),https://dl.acm.org/doi/10.1145/321906.321909,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Unbounded Knapsack (Approximate),,,,1,0,O(n + 1/eps^3),,,[https://ieeexplore.ieee.org/document/4567944 Lawler (1979)],Lawler,Lawler,Fast approximation algorithms for knapsack problems,1979,https://ieeexplore.ieee.org/document/4567944,,,,,,3,n: 3,3,O(n + 1/eps^3),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://ieeexplore.ieee.org/document/4567944,0,Word RAM,words,3,n: 3,O(n + 1/eps^3),https://www.jstor.org/stable/3689221,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Unbounded Knapsack (Approximate),,,,1,0,O(n + 1/eps^2 (log(1/eps))^4),,,[https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf Rhee (2015)],Rhee,Rhee,Faster Fully Polynomial Approximation Schemes for Knapsack Problems,2015,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,,,,,,3,n: 3,3,O(n + 1/eps^2 (log(1/eps))^4),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Unbounded Knapsack (Approximate),,,,1,0,O(n + 1/eps^2 (log(1/eps))^3),,,"[https://link.springer.com/chapter/10.1007/978-3-319-29516-9_23 Jansen, Kraft (2015)]","Jansen, Kraft","Jansen, Kraft",A Faster FPTAS for the Unbounded Knapsack Problem,2015,https://link.springer.com/chapter/10.1007/978-3-319-29516-9_23,,,,,,3,n: 3,3,O(n + 1/eps^2 (log(1/eps))^3),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/chapter/10.1007/978-3-319-29516-9_23,0,Word RAM,words,3,n: 3,O(n + 1/eps (log(1/eps))^2),https://link.springer.com/chapter/10.1007/978-3-319-29516-9_23,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Unbounded Knapsack (Approximate),,,,1,0,O(n + 1/eps^2 * poly(log(1/eps))/2^(Omega(sqrt(log(1/eps))))),,,"[https://arxiv.org/abs/2205.08493 Bringmann, Kassis (2022)]","Bringmann, Kassis","Bringmann, Kassis",Faster Knapsack Algorithms via Bounded Monotone Min-Plus-Convolution,2022,https://arxiv.org/abs/2205.08493,,,,,,3,n: 3,3,O(n + 1/eps^2 * poly(log(1/eps))/2^(Omega(sqrt(log(1/eps))))),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/2205.08493,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Unbounded Knapsack (Weakly Approximate),,,,1,0,O((n + 1/eps^(3/2))*poly(log(1/eps))),,,"[https://arxiv.org/abs/2205.08493 Bringmann, Kassis (2022)]","Bringmann, Kassis","Bringmann, Kassis",Faster Knapsack Algorithms via Bounded Monotone Min-Plus-Convolution,2022,https://arxiv.org/abs/2205.08493,,,,,,3,n: 3,3,O((n + 1/eps^(3/2))*poly(log(1/eps))),,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/2205.08493,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Nonlinear Knapsack (Approximate),,,,1,0,O(n/eps^2 log(n/eps) + n/eps log(n/eps)),,,[https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf Rhee (2015)],Rhee,Rhee,Faster Fully Polynomial Approximation Schemes for Knapsack Problems,2015,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,,,,,,3,n: 3,3,O(n/eps^2 log(n/eps) + n/eps log(n/eps)),10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,"Multiple Knapsack, Equal Capacities (Approximate)",,,,1,0,"O_(eps)(poly(n, m))",,,[https://link.springer.com/chapter/10.1007/978-3-540-48413-4_6 Kellerer (1999)],Kellerer,Kellerer,A Polynomial Time Approximation Scheme for the Multiple Knapsack Problem,1999,https://link.springer.com/chapter/10.1007/978-3-540-48413-4_6,,,,,,7,n: 7,1,"O_(eps)(poly(n, m))",,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,,,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,"Multiple Knapsack, Equal Capacities (Approximate)",,Greedy + FPTAS for 0-1 Knapsack,,1,0,O(m*(n log(1/eps) + 1/eps^3 * log(1/eps)^2)),,,"[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.226.3387 Chekuri, Khanna (+ Kellerer, Pferschy 2004) (2006)]","Chekuri, Khanna (+ Kellerer, Pferschy 2004)","Chekuri, Khanna",A polynomial time approximation scheme for the multiple knapsack problem,2006,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.226.3387,,,,,,5,n: 5,3,O(m*(n log(1/eps) + 1/eps^3 * log(1/eps)^2)),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,,1,Word RAM,words,,,,,,0,,0,,1,1 - 1/e - eps,2,2.582,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,"Multiple Knapsack, Equal Capacities (Approximate)",,Greedy + FPTAS for 0-1 Knapsack,,1,0,O(m*(n+1/eps^2)*poly(log(1/eps))),,,"[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.226.3387 Chekuri, Khanna (+ Mao 2023) (2023)]","Chekuri, Khanna (+ Mao 2023)","Chekuri, Khanna",A polynomial time approximation scheme for the multiple knapsack problem,2023,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.226.3387,,,,,,5,n: 5,3,O(m*(n+1/eps^2)*poly(log(1/eps))),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,,1,Word RAM,words,,,,,,0,,0,,1,1 - 1/e - eps,2,2.582,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Knapsack (Approximate),,,,1,0,O(mn + m log m + n log n),,,"[ Modfied Greedy (Kellerer, Pferschy, Pisinger) (2004)]","Modfied Greedy (Kellerer, Pferschy, Pisinger)",,,2004,,,,,,,5,n: 5,3,O(mn + m log m + n log n),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/article/10.1134/S1990478918020072,0,Word RAM,words,,,,,,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Knapsack (Approximate),,,,1,0,n^(O(1/eps^8 log(1/eps))),,,"[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.226.3387 Chekuri, Khanna (2006)]","Chekuri, Khanna","Chekuri, Khanna",A polynomial time approximation scheme for the multiple knapsack problem,2006,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.226.3387,,,,,,7,n: 7,2,n^(O(1/eps^8 log(1/eps))),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/chapter/10.1007/978-3-642-27660-6_26,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Knapsack (Approximate),,,,1,0,2^(1/eps^5 log(1/eps))+poly(n),,,[https://epubs.siam.org/doi/abs/10.1137/080731207 Jansen (2009)],Jansen,Jansen,Parameterized Approximation Scheme for the Multiple Knapsack Problem,2009,https://epubs.siam.org/doi/abs/10.1137/080731207,,,,,,7,n: 7,1,2^(1/eps^5 log(1/eps))+poly(n),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://epubs.siam.org/doi/abs/10.1137/080731207,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Knapsack (Approximate),,,,1,0,2^(1/eps log(1/eps)^4)+poly(n),,,[https://link.springer.com/chapter/10.1007/978-3-642-27660-6_26 Jansen (2012)],Jansen,Jansen,A Fast Approximation Scheme for the Multiple Knapsack Problem,2012,https://link.springer.com/chapter/10.1007/978-3-642-27660-6_26,,,,,,7,n: 7,1,2^(1/eps log(1/eps)^4)+poly(n),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/chapter/10.1007/978-3-642-27660-6_26,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Knapsack (Approximate),,,,1,0,O(mn + m log m + n log n),,,"[https://link.springer.com/article/10.1134/S1990478918020072 Khutoretskii, Bredikhin, Zamyatin (2018)]","Khutoretskii, Bredikhin, Zamyatin","Khutoretskii, Bredikhin, Zamyatin",A Lexicographic 0.5-Approximation Algorithm for the Multiple Knapsack Problem,2018,https://link.springer.com/article/10.1134/S1990478918020072,,,,,,5,n: 5,3,O(mn + m log m + n log n),,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/article/10.1134/S1990478918020072,0,Word RAM,words,,,,,,0,,0,,1,1/2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Multiple Choice 0-1 Knapsack (Approximate),,,,1,0,O(n^(ceil(1/eps-1)) log n),,,"[https://www.sciencedirect.com/science/article/pii/0304397576900487 Chandra, Hirschberg, Wong (1976)]","Chandra, Hirschberg, Wong","Chandra, Hirschberg, Wong",Approximate algorithms for some generalized knapsack problems,1976,https://www.sciencedirect.com/science/article/pii/0304397576900487,,,,,,7,n: 7,3,O(n^(ceil(1/eps-1)) log n),400,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0304397576900487,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/0304397576900487,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Choice 0-1 Knapsack (Approximate),,,,1,0,O(m*poly(n)/eps),,,"[https://www.sciencedirect.com/science/article/pii/0304397576900487 Chandra, Hirschberg, Wong (final note) (1976)]","Chandra, Hirschberg, Wong (final note)","Chandra, Hirschberg, Wong",Approximate algorithms for some generalized knapsack problems,1976,https://www.sciencedirect.com/science/article/pii/0304397576900487,,,,,,7,n: 7,1,O(m*poly(n)/eps),,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0304397576900487,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Choice 0-1 Knapsack (Approximate),,,,1,0,O(n log n + nm/eps),,,[https://ieeexplore.ieee.org/document/4567944 Lawler (1979)],Lawler,Lawler,Fast approximation algorithms for knapsack problems,1979,https://ieeexplore.ieee.org/document/4567944,,,,,,5,n: 5,3,O(n log n + nm/eps),20,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://ieeexplore.ieee.org/document/4567944,0,Word RAM,words,,,O(n + m^2/eps),https://www.jstor.org/stable/3689221,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Choice 0-1 Knapsack (Approximate),,,,1,0,O(mn/eps)?,,,"[https://link.springer.com/chapter/10.1007/978-3-540-24777-7_9 Kellerer, Pferschy, Pisinger (2004)]","Kellerer, Pferschy, Pisinger","Kellerer, Pferschy, Pisinger",Multidimensional Knapsack Problems,2004,https://link.springer.com/chapter/10.1007/978-3-540-24777-7_9,,,,,,5,n: 5,3,O(mn/eps)?,,"n: total number of items
m: number of knapsacks
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/article/10.1134/S1990478918020072,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Choice 0-1 Knapsack (Approximate),,,,1,0,O(mn/eps^2 log(m/eps) + n log n),,,[https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf Rhee (2015)],Rhee,Rhee,Faster Fully Polynomial Approximation Schemes for Knapsack Problems,2015,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,,,,,,5.01,n: 5.01,3,O(mn/eps^2 log(m/eps) + n log n),,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://dspace.mit.edu/bitstream/handle/1721.1/98564/920857251-MIT.pdf,0,Word RAM,words,,,,,,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Multiple Choice Unbounded Knapsack (Approximate),,,,1,0,O(n^(floor(1/eps+1))),,,"[https://www.sciencedirect.com/science/article/pii/0304397576900487 Chandra, Hirschberg, Wong (1976)]","Chandra, Hirschberg, Wong","Chandra, Hirschberg, Wong",Approximate algorithms for some generalized knapsack problems,1976,https://www.sciencedirect.com/science/article/pii/0304397576900487,,,,,,7,n: 7,3,O(n^(floor(1/eps+1))),400,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0304397576900487,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/0304397576900487,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multiple Choice Unbounded Knapsack (Approximate),,,,1,0,O(m*poly(n)/eps),,,"[https://www.sciencedirect.com/science/article/pii/0304397576900487 Chandra, Hirschberg, Wong (final note) (1976)]","Chandra, Hirschberg, Wong (final note)","Chandra, Hirschberg, Wong",Approximate algorithms for some generalized knapsack problems,1976,https://www.sciencedirect.com/science/article/pii/0304397576900487,,,,,,7,n: 7,1,O(m*poly(n)/eps),,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0304397576900487,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Arborescent Knapsack (Approximate),,,,1,0,O(n^3/eps^2),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner [Approx-AK] (1980)]","Gens, Levner [Approx-AK]","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,6,n: 6,3,O(n^3/eps^2),30,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,Word RAM,words,5,n: 5,O(n^2/eps),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Arborescent Knapsack (Approximate),,,,1,0,O(n^4/eps^2),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner [Approx-AK'] (1980)]","Gens, Levner [Approx-AK']","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,7,n: 7,3,O(n^4/eps^2),40,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,Word RAM,words,3,n: 3,O(n/eps),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Fixed-Charge Knapsack (Approximate),,,,1,0,O(n^3/eps^2),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner [Approx-FCK] (1980)]","Gens, Levner [Approx-FCK]","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,6,n: 6,3,O(n^3/eps^2),30,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,Word RAM,words,5,n: 5,O(n^2/eps),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Min-0-1 Knapsack (Approximate),,,,1,0,O(n^4/eps),,,[https://www.mathnet.ru/php/archive.phtml?wshow=paper&jrnid=dan&paperid=38933&option_lang=eng Babat (1975)],Babat,Babat,Linear functionals on the n-dimensional unit cube,1975,https://www.mathnet.ru/php/archive.phtml?wshow=paper&jrnid=dan&paperid=38933&option_lang=eng,,,,,,7,n: 7,3,O(n^4/eps),40,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/chapter/10.1007/3-540-09526-8_26,0,Word RAM,words,7,n: 7,O(n^4/eps),https://link.springer.com/chapter/10.1007/3-540-09526-8_26,0,0,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Min-0-1 Knapsack (Approximate),,,,1,0,O(n^3/eps),,,"[- Gens, Levner (1978)]","Gens, Levner","Gens, Levner",,1978,-,,,,,,6,n: 6,3,O(n^3/eps),30,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/chapter/10.1007/3-540-09526-8_26,0,Word RAM,words,6,n: 6,O(n^3/eps),https://link.springer.com/chapter/10.1007/3-540-09526-8_26,0,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Min-0-1 Knapsack (Approximate),,,,1,0,O(n^2/eps),,,"[https://link.springer.com/chapter/10.1007/3-540-09526-8_26 Gens, Levner (1980)]","Gens, Levner","Gens, Levner",Computational complexity of approximation algorithms for combinatorial problems,1980,https://link.springer.com/chapter/10.1007/3-540-09526-8_26,,,,,,5,n: 5,3,O(n^2/eps),20,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/chapter/10.1007/3-540-09526-8_26,0,Word RAM,words,5,n: 5,O(n^2/eps),https://link.springer.com/chapter/10.1007/3-540-09526-8_26,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Min-Multiple-Choice Knapsack (Approximate),,,,1,0,O(n log n + mn log m + nm/eps),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner [Approx-Mult-Choice-Knapsack] (1980)]","Gens, Levner [Approx-Mult-Choice-Knapsack]","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,5.01,n: 5.01,3,O(n log n + mn log m + nm/eps),21,"n: total number of items
m: number of disjoint classes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,Word RAM,words,,,O(n + m^2/eps),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,Multi-Dimensional Knapsack (Approximate),,,,1,0,O(n^(ceil(k/eps))),,,"[https://www.sciencedirect.com/science/article/pii/0304397576900487 Chandra, Hirschberg, Wong (1976)]","Chandra, Hirschberg, Wong","Chandra, Hirschberg, Wong",Approximate algorithms for some generalized knapsack problems,1976,https://www.sciencedirect.com/science/article/pii/0304397576900487,,,,,,7,n: 7,3,O(n^(ceil(k/eps))),400,"n: total number of items
k: number of constraints
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0304397576900487,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/0304397576900487,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multi-Dimensional Knapsack (Approximate),,,,1,0,O(n^(ceil(k/eps)-k+1)*poly(log(n))),,,"[https://www.sciencedirect.com/science/article/pii/0377221784900535 Frieze, Clarke (1984)]","Frieze, Clarke","Frieze, Clarke",Approximation algorithms for the m-dimensional 0–1 knapsack problem: Worst-case and probabilistic analyses,1984,https://www.sciencedirect.com/science/article/pii/0377221784900535,,,,,,7,n: 7,2.9,O(n^(ceil(k/eps)-k+1)*poly(log(n))),400,"n: total number of items
k: number of constraints
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/0377221784900535,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,Multi-Dimensional Knapsack (Approximate),,,,1,0,O(n^(ceil(k/eps)-k)),,,"[https://www.sciencedirect.com/science/article/pii/S0377221799002611 Caprara, Kellerer, Pferschy, Pisinger (1998)]","Caprara, Kellerer, Pferschy, Pisinger","Caprara, Kellerer, Pferschy, Pisinger",Approximation algorithms for knapsack problems with cardinality constraints,1998,https://www.sciencedirect.com/science/article/pii/S0377221799002611,,,,,,7,n: 7,3,O(n^(ceil(k/eps)-k)),400,"n: total number of items
k: number of constraints
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,K-Item Knapsack (Approximate),,,,1,0,O(n^(ceil(1/eps)-1)),,,"[https://www.sciencedirect.com/science/article/pii/S0377221799002611 Caprara, Kellerer, Pferschy, Pisinger [PTAS] (1998)]","Caprara, Kellerer, Pferschy, Pisinger [PTAS]","Caprara, Kellerer, Pferschy, Pisinger",Approximation algorithms for knapsack problems with cardinality constraints,1998,https://www.sciencedirect.com/science/article/pii/S0377221799002611,,,,,,7,n: 7,3,O(n^(ceil(1/eps)-1)),400,"n: total number of items
K: bound on number of items in knapsack
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,K-Item Knapsack (Approximate),,,,1,0,O(nK^2/eps),,,"[https://www.sciencedirect.com/science/article/pii/S0377221799002611 Caprara, Kellerer, Pferschy, Pisinger [FPTAS] (1998)]","Caprara, Kellerer, Pferschy, Pisinger [FPTAS]","Caprara, Kellerer, Pferschy, Pisinger",Approximation algorithms for knapsack problems with cardinality constraints,1998,https://www.sciencedirect.com/science/article/pii/S0377221799002611,,,,,,6,n: 6,3,O(nK^2/eps),30,"n: total number of items
K: bound on number of items in knapsack
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,Word RAM,words,3,n: 3,O(n+K^3/eps),https://www.sciencedirect.com/science/article/pii/S0377221799002611,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,K-Item Knapsack (Approximate),,,,1,0,O(n+K*(log(1/eps))^(O(1/eps))),,,"[https://www.sciencedirect.com/science/article/pii/S0166218X05002787 Mastrolilli, Hutter [PTAS] (2006)]","Mastrolilli, Hutter [PTAS]","Mastrolilli, Hutter",Hybrid rounding techniques for knapsack problems,2006,https://www.sciencedirect.com/science/article/pii/S0166218X05002787,,,,,,3,n: 3,3,O(n+K*(log(1/eps))^(O(1/eps))),10,"n: total number of items
K: bound on number of items in knapsack
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://www.sciencedirect.com/science/article/pii/S0166218X05002787,0,Word RAM,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0166218X05002787,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,EPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,K-Item Knapsack (Approximate),,,,1,0,"O(n+K*min(K, 1/eps)^2/eps^2)",,,"[https://www.sciencedirect.com/science/article/pii/S0166218X05002787 Mastrolilli, Hutter [FPTAS, Scheme A] (2006)]","Mastrolilli, Hutter [FPTAS, Scheme A]","Mastrolilli, Hutter",Hybrid rounding techniques for knapsack problems,2006,https://www.sciencedirect.com/science/article/pii/S0166218X05002787,,,,,,5,n: 5,3,"O(n+K*min(K, 1/eps)^2/eps^2)",20,"n: total number of items
K: bound on number of items in knapsack
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1902.00919,0,Word RAM,words,3,n: 3,"O(n + min(K, 1/eps)^3/eps)",https://arxiv.org/abs/1902.00919,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,2,0,0,K-Item Knapsack (Approximate),,,,1,0,"O(n+(K*min(K, 1/eps)^2+min(K, 1/eps)^4)/eps^2)",,,"[https://www.sciencedirect.com/science/article/pii/S0166218X05002787 Mastrolilli, Hutter [FPTAS, Scheme B] (2006)]","Mastrolilli, Hutter [FPTAS, Scheme B]","Mastrolilli, Hutter",Hybrid rounding techniques for knapsack problems,2006,https://www.sciencedirect.com/science/article/pii/S0166218X05002787,,,,,,7,n: 7,3,"O(n+(K*min(K, 1/eps)^2+min(K, 1/eps)^4)/eps^2)",50,"n: total number of items
K: bound on number of items in knapsack
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1902.00919,0,Word RAM,words,3,n: 3,"O(n + min(K, 1/eps)^2/eps)",https://arxiv.org/abs/1902.00919,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.1,The Knapsack Problem,1,0,0,K-Item Knapsack (Approximate),,,,1,0,"O(n+min(K, 1/eps)^2/eps^2*poly(log(min(K, 1/eps))))?",,,"[https://arxiv.org/abs/1902.00919 Li, Lee (2019)]","Li, Lee","Li, Lee",A Faster FPTAS for Knapsack Problem With Cardinality Constraint,2019,https://arxiv.org/abs/1902.00919,,,,,,5.01,n: 5.01,2.9,"O(n+min(K, 1/eps)^2/eps^2*poly(log(min(K, 1/eps))))?",25,"n: total number of items
K: bound on number of items in knapsack
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1902.00919,0,Word RAM,words,3,n: 3,"O(n + min(K, 1/eps)^2/eps)",https://arxiv.org/abs/1902.00919,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.2,The Partition Problem,2,0,0,Partition (Approximate),,,,1,0,O(n/eps),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner [Approx-PP-1] (1980)]","Gens, Levner [Approx-PP-1]","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,3,n: 3,3,O(n/eps),10,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,Word RAM,words,5,n: 5,O(n/eps),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.2,The Partition Problem,2,0,0,Partition (Approximate),,,,1,0,O(n + 1/eps^2),,,"[https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf Gens, Levner [Approx-PP-2] (1980)]","Gens, Levner [Approx-PP-2]","Gens, Levner",Fast approximation algorithms for knapsack type problems,1980,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,,,,,,3,n: 3,3,O(n + 1/eps^2),10,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,Word RAM,words,5,n: 5,O(n + 1/eps^2),https://link.springer.com/content/pdf/10.1007/BFb0006603.pdf,0,1,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.2,The Partition Problem,1,0,0,Partition (Approximate),,,,1,0,O((n + 1/eps^(5/3))*poly(log(1/eps))),,,"[https://arxiv.org/abs/1804.02269 Mucha, Wegrzycki, Wlodarczyk (2018)]","Mucha, Wegrzycki, Wlodarczyk","Mucha, Wegrzycki, Wlodarczyk",A Subquadratic Approximation Scheme for Partition,2018,https://arxiv.org/abs/1804.02269,,,,,,3,n: 3,3,O((n + 1/eps^(5/3))*poly(log(1/eps))),,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1804.02269,0,Word RAM,words,,,,,,,,1,Monte Carlo?,1,1 - eps,1,2,0,multiplicative,yes,FPRAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.2,The Partition Problem,1,0,0,Partition (Approximate),,,,1,0,O((n + 1/eps^(3/2))*poly(log(1/eps))),,,"[https://arxiv.org/abs/1912.12529 Bringmann, Nakos (2019)]","Bringmann, Nakos","Bringmann, Nakos",A Fine-Grained Perspective on Approximating Subset Sum and Partition,2019,https://arxiv.org/abs/1912.12529,,,,,,3,n: 3,3,O((n + 1/eps^(3/2))*poly(log(1/eps))),,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1912.12529,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.2,The Partition Problem,1,0,0,Partition (Approximate),,,,1,0,O((n + 1/eps^(5/4))*poly(log(1/eps))),,,"[https://arxiv.org/abs/2212.02883 Wu, Chen (2022)]","Wu, Chen","Wu, Chen",Improved Approximation Schemes for (Un-)Bounded Subset-Sum and Partition,2022,https://arxiv.org/abs/2212.02883,,,,,,3,n: 3,3,O((n + 1/eps^(5/4))*poly(log(1/eps))),,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/2212.02883,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.2,The Partition Problem,1,0,0,Partition (Approximate),,,,1,0,O((n + 1/eps^(5/4))*poly(log(1/eps))),,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch113 Deng, Jin, Mao (2023)]","Deng, Jin, Mao","Deng, Jin, Mao",Approximating Knapsack and Partition via Dense Subset Sums,2023,https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch113,,,,,,3,n: 3,3,O((n + 1/eps^(5/4))*poly(log(1/eps))),,"n: the number of integers in the set
eps: error parameter, between 0 and 1",n,https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch113,0,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n),,,[https://dspace.mit.edu/handle/1721.1/57819 Next-Fit (1973)],Next-Fit,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://en.wikipedia.org/wiki/Bin_packing_problem#Comparison_table,0,Word RAM,words,1,n: 1,O(1),Keep track of state of current bin,1,0,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Next-fit_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n),,,[https://dspace.mit.edu/handle/1721.1/57819 Next-k-Fit (1973)],Next-k-Fit,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,3,n: 3,3,O(n),10,"n: total number of items
k: number of bins to keep open
C: constraint/weight parameter",n,,1?,Word RAM,words,1,n: 1,O(k),Keep track of state of current k bins,1,0,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Next-fit_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n log n),,,[https://dspace.mit.edu/handle/1721.1/57819 First-Fit (1971)],First-Fit,Johnson,Near-optimal bin packing algorithms,1971,https://dspace.mit.edu/handle/1721.1/57819,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,1.7,2,2.7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"https://en.wikipedia.org/wiki/First-fit_bin_packing

https://drops.dagstuhl.de/opus/volltexte/2013/3963/",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n log n),,,[https://dspace.mit.edu/handle/1721.1/57819 Best-Fit (1971)],Best-Fit,Johnson,Near-optimal bin packing algorithms,1971,https://dspace.mit.edu/handle/1721.1/57819,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,1.7,2,2.7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"https://en.wikipedia.org/wiki/Best-fit_bin_packing

https://link.springer.com/chapter/10.1007/978-3-662-43948-7_36",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n log n),,,[https://dspace.mit.edu/handle/1721.1/57819 Worst-Fit (1973)],Worst-Fit,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Best-fit_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n log n),,,[https://dspace.mit.edu/handle/1721.1/57819 Almost-Worst-Fit (1973)],Almost-Worst-Fit,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,1.7,2,2.7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Bin_packing_problem#Comparison_table,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n log n),,,[https://dl.acm.org/doi/10.1145/322186.322187 Refined First-Fit (1980)],Refined First-Fit,Yao,New Algorithms for Bin Packing,1980,https://dl.acm.org/doi/10.1145/322186.322187,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dl.acm.org/doi/10.1145/322186.322187,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,"(5/3, 5)",2,2.667,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/First-fit_bin_packing#refined,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,0.001,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n log n),,,[- Doubly Refined First-Fit (1980)],Doubly Refined First-Fit,,,1980,-,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://www.sciencedirect.com/science/article/pii/019667748990031X,0,Word RAM,words,3,n: 3,O(n)?,Keep track of current state of bins,1,0,,0,,1,1.64,2,2.64,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://www.sciencedirect.com/science/article/pii/019667748990031X,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n),,,[https://dl.acm.org/doi/10.1145/3828.3833 Harmonic-K (1985)],Harmonic-K,"Lee, Lee",A simple on-line bin-packing algorithm,1985,https://dl.acm.org/doi/10.1145/3828.3833,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://dl.acm.org/doi/10.1145/3828.3833,0,Word RAM,words,1,n: 1,O(1),https://dl.acm.org/doi/10.1145/3828.3833,0,1,,0,,1,~1.69103,2,2.692,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Harmonic_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n),,,[https://dl.acm.org/doi/10.1145/3828.3833 Refined Harmonic (1985)],Refined Harmonic,"Lee, Lee",A simple on-line bin-packing algorithm,1985,https://dl.acm.org/doi/10.1145/3828.3833,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://dl.acm.org/doi/10.1145/3828.3833,0,Word RAM,words,3,n: 3,O(n),https://dl.acm.org/doi/10.1145/3828.3833,0,1,,0,,1,373/228 ~ 1.636,2,2.636,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Harmonic_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n),,,[https://www.sciencedirect.com/science/article/pii/019667748990031X Modified Harmonic (1989)],Modified Harmonic,"Ramanan, Brown, Lee, Lee",On-line bin packing in linear time,1989,https://www.sciencedirect.com/science/article/pii/019667748990031X,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://www.sciencedirect.com/science/article/pii/019667748990031X,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,538/333 ~ 1.616,2,2.616,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Harmonic_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(n),,,[https://www.sciencedirect.com/science/article/pii/019667748990031X Modified Harmonic 2 (1989)],Modified Harmonic 2,"Ramanan, Brown, Lee, Lee",On-line bin packing in linear time,1989,https://www.sciencedirect.com/science/article/pii/019667748990031X,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://www.sciencedirect.com/science/article/pii/019667748990031X,0,Word RAM,words,3,n: 3,O(n),Keep track of current state of bins,1,0,,0,,1,239091/148304 ~ 1.612,2,2.612,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Harmonic_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/pii/0166218X9190087D Harmonic + 1 (1991)],Harmonic + 1,Richey,Improved bounds for harmonic-based bin packing algorithms,1991,https://www.sciencedirect.com/science/article/pii/0166218X9190087D,,,,,,7,n: 7,1,O(poly(n)),400,"n: total number of items
C: constraint/weight parameter",n,,,Word RAM,words,,,,,,,,0,,1,≥1.59217,2,2.593,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/585265.585269,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(poly(n)),,,[https://dl.acm.org/doi/10.1145/585265.585269 Harmonic ++ (2002)],Harmonic ++,Seiden,On the online bin packing problem,2002,https://dl.acm.org/doi/10.1145/585265.585269,,,,,,7,n: 7,1,O(poly(n)),400,"n: total number of items
C: constraint/weight parameter",n,,,Word RAM,words,,,,,,,,0,,1,1.58889,2,2.589,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Harmonic_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(poly(n)),,,[https://arxiv.org/abs/1511.00876 Son of Harmonic (2015)],Son of Harmonic,"Heydrich, van Stee",Beating the Harmonic lower bound for online bin packing,2015,https://arxiv.org/abs/1511.00876,,,,,,7,n: 7,1,O(poly(n)),400,"n: total number of items
C: constraint/weight parameter",n,,,Word RAM,words,,,,,,,,0,,1,1.5813,2,2.582,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Online Bin Packing (Approximate),,Online Heuristic,,1,0,O(poly(n)),,,[https://arxiv.org/abs/1707.01728 Advanced Harmonic (2017)],Advanced Harmonic,"Balogh, Bekesi, Dosa, Epstein, Levin",A new and improved algorithm for online bin packing,2017,https://arxiv.org/abs/1707.01728,,,,,,7,n: 7,1,O(poly(n)),400,"n: total number of items
C: constraint/weight parameter",n,,,Word RAM,words,,,,,,,,0,,1,1.57828956,2,2.579,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Semi-Online Bin Packing (Approximate),,,,1,0,O(n),,,"[https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf Gambosi, Postiglione, Talamo (1990)]","Gambosi, Postiglione, Talamo","Gambosi, Postiglione, Talamo",Algorithms for the Relaxed Online Bin-Packing Model,1990,https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf,0,Word RAM,words,3,n: 3,O(n),https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf,0,1,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Semi-Online Bin Packing (Approximate),,,,1,0,O(n log n),,,"[https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf Gambosi, Postiglione, Talamo (1990)]","Gambosi, Postiglione, Talamo","Gambosi, Postiglione, Talamo",Algorithms for the Relaxed Online Bin-Packing Model,1990,https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf,0,Word RAM,words,3,n: 3,O(n),https://www.labri.fr/perso/eyraud/pmwiki/uploads/Main/Gambosi2000-RelaxedOnlineBP.pdf,0,1,,0,,1,4/3,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,2,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n),,,[https://dspace.mit.edu/handle/1721.1/57819 First Fit Decreasing (1973)],First Fit Decreasing,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),Requries keeping track of n sorted elements and the states of at most n bins,1,0,,0,,1,"(11/9, 2/3)",2,2.111,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,"https://en.wikipedia.org/wiki/First-fit-decreasing_bin_packing

https://link.springer.com/chapter/10.1007/978-3-540-74450-4_1",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n),,,[https://dspace.mit.edu/handle/1721.1/57819 Best Fit Decreasing (1973)],Best Fit Decreasing,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),Requries keeping track of n sorted elements and the states of at most n bins,1,0,,0,,1,11/9 (as n -> infinity),2,2.111,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n),,,[https://dspace.mit.edu/handle/1721.1/57819 Group-X Fit Grouped (1973)],Group-X Fit Grouped,Johnson,Near-optimal bin packing algorithms,1973,https://dspace.mit.edu/handle/1721.1/57819,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://dspace.mit.edu/handle/1721.1/57819,0,Word RAM,words,3,n: 3,O(n),(upper bounded by time complexity),1,0,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n^10 log n),,,[https://dl.acm.org/doi/10.1145/322186.322187 Refined First Fit Decreasing (1980)],Refined First Fit Decreasing,Yao,New Algorithms for Bin Packing,1980,https://dl.acm.org/doi/10.1145/322186.322187,,,,,,7,n: 7,3,O(n^10 log n),101,"n: total number of items
C: constraint/weight parameter",n,https://dl.acm.org/doi/10.1145/322186.322187,0,Word RAM,words,,,,,,,,0,,1,"(11/9 - 10^(-7), 8)",2,2.111,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n),,,[https://epubs.siam.org/doi/abs/10.1137/0602019 Next Fit Decreasing (1981)],Next Fit Decreasing,"Baker, Coffman Jr.",A Tight Asymptotic Bound for Next-Fit-Decreasing Bin-Packing,1981,https://epubs.siam.org/doi/abs/10.1137/0602019,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,,1,Word RAM,words,3,n: 3,O(n),Requries keeping track of n sorted elements and the states of at most n bins,1,0,,0,,1,~1.69103,2,2.692,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Next-fit-decreasing_bin_packing,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n),,,[https://www.sciencedirect.com/science/article/pii/0167637785900288 OffBP [Martel] (1985)],OffBP [Martel],Martel,A linear time bin-packing algorithm,1985,https://www.sciencedirect.com/science/article/pii/0167637785900288,,,,,,3,n: 3,3,O(n),10,"n: total number of items
C: constraint/weight parameter",n,https://www.sciencedirect.com/science/article/pii/0167637785900288,0,Word RAM,words,3,n: 3,O(n),(upper bounded by time complexity),1,0,,0,,1,4/3,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n),,,[https://www.sciencedirect.com/science/article/pii/0885064X85900226 Modified First Fit Decreasing (1985)],Modified First Fit Decreasing,"Johnson, Garey",A 71/60 theorem for bin packing,1985,https://www.sciencedirect.com/science/article/pii/0885064X85900226,,,,,,4,n: 4,3,O(n log n),11,"n: total number of items
C: constraint/weight parameter",n,https://www.sciencedirect.com/science/article/pii/0885064X85900226,0,Word RAM,words,3,n: 3,O(n)?,Requries keeping track of n elements and the states of at most n bins,1,0,,0,,1,"(71/60, 1)",2,2.184,2,multiplicative-additive,no,n/a,factor + additive error off from optimal,0,0,,0,0,"https://en.wikipedia.org/wiki/First-fit-decreasing_bin_packing#Modified_first-fit-decreasing

https://link.springer.com/article/10.1007/BF02011198",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n)?,,,[https://epubs.siam.org/doi/10.1137/0404007 FFD+B2F (1991)],FFD+B2F,"Friesen, Langston",Analysis of a Compound Bin Packing Algorithm,1991,https://epubs.siam.org/doi/10.1137/0404007,,,,,,4,n: 4,3,O(n log n)?,11,"n: total number of items
C: constraint/weight parameter",n,,1,Word RAM,words,3,n: 3,O(n)?,Requries keeping track of n elements and the states of at most n bins,1,0,,0,,1,between 227/195 and 1.2,2,2.2,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"https://en.wikipedia.org/wiki/First-fit-decreasing_bin_packing#Modified_first-fit-decreasing

https://link.springer.com/article/10.1007/BF02011198",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log(1/eps) + (1/eps)^(O(1/eps)))?,,,"[https://link.springer.com/article/10.1007/BF02579456 Fernandez de la Vega, Lueker (1981)]","Fernandez de la Vega, Lueker","Fernandez de la Vega, Lueker",Bin packing can be solved within 1 + ε in linear time,1981,https://link.springer.com/article/10.1007/BF02579456,,,,,,3,n: 3,3,O(n log(1/eps) + (1/eps)^(O(1/eps)))?,10,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://link.springer.com/article/10.1007/BF02579456,,Word RAM,words,,,,,,,,0,,1,"(1+eps, O(eps^-2))",2.4,2,1.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n + 1/eps^8*log(1/eps)*log(n)*(n+1/eps^8*log(n)),,,"[https://ieeexplore.ieee.org/document/4568405 Karmarkar, Karp (Algorithm 1) (1982)]","Karmarkar, Karp (Algorithm 1)","Karmarkar, Karp",An efficient approximation scheme for the one-dimensional bin-packing problem,1982,https://ieeexplore.ieee.org/document/4568405,,,,,,4,n: 4,3,O(n log n + 1/eps^8*log(1/eps)*log(n)*(n+1/eps^8*log(n)),11,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://ieeexplore.ieee.org/document/4568405,0,Word RAM,words,,,,,,,,0,,1,"(1+eps, 1/(2*eps^2) + 3)",2.4,2,2,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Karmarkar%E2%80%93Karp_bin_packing_algorithms,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n + n^(4-4*alpha)*(log n)^2*(n+n^(4-4*alpha)*log n)),,,"[https://ieeexplore.ieee.org/document/4568405 Karmarkar, Karp (Algorithm 2) (1982)]","Karmarkar, Karp (Algorithm 2)","Karmarkar, Karp",An efficient approximation scheme for the one-dimensional bin-packing problem,1982,https://ieeexplore.ieee.org/document/4568405,,,,,,7,n: 7,3,O(n log n + n^(4-4*alpha)*(log n)^2*(n+n^(4-4*alpha)*log n)),80,"n: total number of items
C: constraint/weight parameter
alpha: size parameter (size of smallest piece)
eps: error parameter, between 0 and 1
OPT: true value of optimum",n,https://ieeexplore.ieee.org/document/4568405,0,Word RAM,words,,,,,,,,0,,1,O(OPT^alpha*log(OPT)); worst-case O(n^alpha log n),4,0,5,additive,yes,n/a,additive error off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Karmarkar%E2%80%93Karp_bin_packing_algorithms,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n log n + m^4*(log m)*(log n)*(m^4*(log m)+n)),,,"[https://ieeexplore.ieee.org/document/4568405 Karmarkar, Karp (Algorithm 3) (1982)]","Karmarkar, Karp (Algorithm 3)","Karmarkar, Karp",An efficient approximation scheme for the one-dimensional bin-packing problem,1982,https://ieeexplore.ieee.org/document/4568405,,,,,,7,n: 7,3,O(n log n + m^4*(log m)*(log n)*(m^4*(log m)+n)),85,"n: total number of items
m: number of distinct item sizes
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://ieeexplore.ieee.org/document/4568405,0,Word RAM,words,,,,,,,,0,,1,O((log m)^2),4,0,4,additive,no,n/a,additive error off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Karmarkar%E2%80%93Karp_bin_packing_algorithms,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(n^6*(log n)^5),,,[https://arxiv.org/abs/1301.4010 Rothvoss (2013)],Rothvoss,Rothvoss,Approximating Bin Packing within O(log OPT * log log OPT) bins,2013,https://arxiv.org/abs/1301.4010,,,,,,7,n: 7,3,O(n^6*(log n)^5),64.5,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,https://arxiv.org/abs/1301.4010,0,Word RAM,words,,,,,,,,1,Las Vegas,1,O((log OPT)(log log OPT)),4,0,3.01,additive,no,n/a,additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Bin Packing (Approximate),,,,1,0,O(poly(n)),,,"[https://epubs.siam.org/doi/10.1137/1.9781611974782.172 Hoberg, Rothvoss (2017)]","Hoberg, Rothvoss","Hoberg, Rothvoss",A Logarithmic Additive Integrality Gap for Bin Packing,2017,https://epubs.siam.org/doi/10.1137/1.9781611974782.172,,,,,,7,n: 7,1,O(poly(n)),400,"n: total number of items
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,,,Word RAM,words,,,,,,,,1,Las Vegas,1,O(log OPT),4,0,3,additive,no,n/a,additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Cardinality Constrained Bin Packing (Approximate),,,,1,0,O(n^2 log n)?,,,"[https://dl.acm.org/doi/pdf/10.1145/321906.321917 Best Fit Decreasing (Krause, Shen, Schwetman) (1975)]","Best Fit Decreasing (Krause, Shen, Schwetman)","Krause, Shen, Schwetman",Analysis of Several Task-Scheduling Algorithms for a Model of Muhiprogramming Computer Systems,1975,https://dl.acm.org/doi/pdf/10.1145/321906.321917,,,,,,5.01,n: 5.01,3,O(n^2 log n)?,21,"n: total number of items
k: bound on number of items per bin
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,,,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
66.3,The Bin Packing Problem,1,0,0,Offline Cardinality Constrained Bin Packing (Approximate),,,,1,0,O(n^2 log n),,,"[https://link.springer.com/article/10.1023/A:1018947117526 Kellerer, Pferschy (1999)]","Kellerer, Pferschy","Kellerer, Pferschy",Cardinality constrained bin‐packing problems,1999,https://link.springer.com/article/10.1023/A:1018947117526,,,,,,5.01,n: 5.01,3,O(n^2 log n),21,"n: total number of items
k: bound on number of items per bin
C: constraint/weight parameter
eps: error parameter, between 0 and 1",n,,,Word RAM,words,,,,,,,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
67,Dependency Inference Problem,0,1,0,Functional Dependency Inference Problem (Approximate),,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/030439759500028U  (1995)],,"Kivinen, Mannila",Approximate inference of functional dependencies from relations,1995,https://www.sciencedirect.com/science/article/pii/030439759500028U,,,,,,,,,,,"n: number of attributes
p: number of tuples/rows/data points",,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Databases
67,Dependency Inference Problem,0.001,1,0,Functional Dependency Inference Problem (Approximate),,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/8129711 Tane (1999)],Tane,"Huhtala, Karkkainen, Porkka, Toivonen",Tane: An Efficient Algorithm for Discovering Functional and Approximate Dependencies,1999,https://ieeexplore.ieee.org/abstract/document/8129711,,,,,,,,,,,"n: number of attributes
p: number of tuples/rows/data points",,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Databases
67,Dependency Inference Problem,0.001,1,0,Functional Dependency Inference Problem (Approximate),,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/4312847 Fox (2007)],Fox,"Fassetti, Fazzinga",FOX: Inference of Approximate Functional Dependencies from XML Data,2007,https://ieeexplore.ieee.org/abstract/document/4312847,,,,,,,,,,,"n: number of attributes
p: number of tuples/rows/data points",,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,https://www.researchgate.net/profile/Fabio-Fassetti/publication/221651451_Approximate_Functional_Dependencies_for_XML_Data/links/02bfe50d187ed6dad9000000/Approximate-Functional-Dependencies-for-XML-Data.pdf,,,,,,,,,,,,,,,,,,,,1,,,Databases
67,Dependency Inference Problem,0.001,1,0,Functional Dependency Inference Problem (Approximate),,,,1,0,,,,[https://link.springer.com/chapter/10.1007/978-3-319-45817-5_23  (2016)],,"Li, Li, Chen, Jiang, Yin",Discovering Approximate Functional Dependencies from Distributed Big Data,2016,https://link.springer.com/chapter/10.1007/978-3-319-45817-5_23,,,,,,,,,,,"n: number of attributes
p: number of tuples/rows/data points",,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Databases
67,Dependency Inference Problem,0.001,1,0,Functional Dependency Inference Problem (Approximate),,,,1,0,,,,[https://dl.acm.org/doi/abs/10.14778/3192965.3192968  (2018)],,"Kruse, Naumann",Efficient discovery of approximate dependencies,2018,https://dl.acm.org/doi/abs/10.14778/3192965.3192968,,,,,,,,,,,"n: number of attributes
p: number of tuples/rows/data points",,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Databases
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Unweighted (Approximate)",,,,1,0,O(m),,,[- Simple 1/2-approximation (Gavril) (1974)],Simple 1/2-approximation (Gavril),Gavril,,1974,-,,,,,,5,n: 5,3,O(m),10,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,,,O(1)?,Derived: keep track of current vertices/edges (O(1) per step),1,0,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, General (Approximate)",,,,1,0,O(dn^2 log n),,,[https://www.sciencedirect.com/science/article/pii/0166218X8390080X Hochbaum (1981)],Hochbaum,Hochbaum,"Efficient bounds for the stable set, vertex cover and set packing problems",1981,https://www.sciencedirect.com/science/article/pii/0166218X8390080X,,,,,,6.01,n: 6.01,3,O(dn^2 log n),21,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state,1,0,,0,,1,2 - 2/d,2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Unweighted (Approximate)",,,,1,0,O(m*sqrt(n)),,,"[https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf Bar-Yehuda, Even [COVER2] (1985)]","Bar-Yehuda, Even [COVER2]","Bar-Yehuda, Even",A local-ratio theorem for approximating the weighted vertex cover problem,1985,https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf,,,,,,5.5,n: 5.5,3,O(m*sqrt(n)),16,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state,1,0,,0,,1,2 - 2/sqrt(n),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Unweighted (Approximate)",,,,1,0,O(mn),,,"[https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf Bar-Yehuda, Even [COVER3] (1985)]","Bar-Yehuda, Even [COVER3]","Bar-Yehuda, Even",A local-ratio theorem for approximating the weighted vertex cover problem,1985,https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf,,,,,,6,n: 6,3,O(mn),20,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state,1,0,,0,,1,2 - (log log n)/(log n),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Weighted (Approximate)",,,,1,0,"O(min(n(nm)^(2/3), mn*log(n))",,,"[https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf Bar-Yehuda, Even [COVER2] (1985)]","Bar-Yehuda, Even [COVER2]","Bar-Yehuda, Even",A local-ratio theorem for approximating the weighted vertex cover problem,1985,https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf,,,,,,6.01,n: 6.01,3,"O(min(n(nm)^(2/3), mn*log(n))",21,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state,1,0,,0,,1,2 - 2/sqrt(n),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Weighted (Approximate)",,,,1,0,"O(min(n(nm)^(2/3), mn*log(n))",,,"[https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf Bar-Yehuda, Even [COVER3] (1985)]","Bar-Yehuda, Even [COVER3]","Bar-Yehuda, Even",A local-ratio theorem for approximating the weighted vertex cover problem,1985,https://csaws.cs.technion.ac.il/~reuven/PDF/vc_lr.pdf,,,,,,6.01,n: 6.01,3,"O(min(n(nm)^(2/3), mn*log(n))",21,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state,1,0,,0,,1,2 - (log log n)/(log n),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Unweighted (Approximate)",,,,1,0,O(mn),,,"[https://www.cs.umd.edu/~gasarch/TOPICS/ramsey/ramseyvc.pdf Monien, Speckenmeyer (1985)]","Monien, Speckenmeyer","Monien, Speckenmeyer",Ramsey Numbers and an Approximation Algorithm for the Vertex Cover Problem ,1985,https://www.cs.umd.edu/~gasarch/TOPICS/ramsey/ramseyvc.pdf,,,,,,6,n: 6,3,O(mn),20,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state,1,0,,0,,1,2-O((log log n)/(log n)),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,0.001,1,1,"The Vertex Cover Problem, Unweighted (Approximate)",,,,1,0,??,,,"[https://link.springer.com/article/10.1007/BF02523693 Halldorsson, Radhakrishnan (1997)]","Halldorsson, Radhakrishnan","Halldorsson, Radhakrishnan",Greed is good: Approximating independent sets in sparse and bounded-degree graphs,1997,https://link.springer.com/article/10.1007/BF02523693,,,,,,7,n: 7,1,??,,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,,Word RAM,words,,,,,,,,0,,1,2 - (log(d)+ O(1))/d,2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, Unweighted, Dense (Approximate)",,,,1,0,O(mn),,,"[https://theory.cs.uni-bonn.de/marek/publications/85160-cs.pdf Karpinski, Zelikovsky (1998)]","Karpinski, Zelikovsky","Karpinski, Zelikovsky",Approximating Dense Cases of Covering Problems,1998,https://theory.cs.uni-bonn.de/marek/publications/85160-cs.pdf,,,,,,6,n: 6,3,O(mn),20,"n: number of vertices
m: number of edges
eps: density of graph",n,,0,Word RAM,words,,,O(m)?,Derived: keep track of current graph state (G(V')),1,0,,0,,1,2/(1+eps),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, General (Approximate)",,,,1,0,"O(poly(n, m))",,,[https://epubs.siam.org/doi/epdf/10.1137/S0097539700381097 Halperin (2002)],Halperin,Halperin,Improved Approximation Algorithms for the Vertex Cover Problem in Graphs and Hypergraphs,2002,https://epubs.siam.org/doi/epdf/10.1137/S0097539700381097,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,,Word RAM,words,,,,,,,,0,,1,2 - (2-o(1))*(log log d)/(log d),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,1,"The Vertex Cover Problem, General (Approximate)",,,,1,0,"O(poly(n, m))",,,[http://www.cas.mcmaster.ca/~gk/papers/vc.pdf Karakostas (2004)],Karakostas,Karakostas,A better approximation ratio for the Vertex Cover problem,2004,http://www.cas.mcmaster.ca/~gk/papers/vc.pdf,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
d: maximum degree of a vertex",n,,,Word RAM,words,,,,,,,,0,,1,2-Theta(1/sqrt(log(n))),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,O(Delta^(log(Delta))/eps^2),,,"[https://www.sciencedirect.com/science/article/pii/S0304397507003696 Parnas, Ron [Algorithm 1+3] (2005)]","Parnas, Ron [Algorithm 1+3]","Parnas, Ron",Approximating the minimum vertex cover in sublinear time and a connection to distributed algorithms,2005,https://www.sciencedirect.com/science/article/pii/S0304397507003696,,,,,,8,n: 8,3,O(Delta^(log(Delta))/eps^2),500,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(1+2*log d, eps*n)",4,6,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,O((16d/eps)^(log(16d/eps))/eps^2),,,"[https://www.sciencedirect.com/science/article/pii/S0304397507003696 Parnas, Ron [Algorithms 1,2,3] (2005)]","Parnas, Ron [Algorithms 1,2,3]","Parnas, Ron",Approximating the minimum vertex cover in sublinear time and a connection to distributed algorithms,2005,https://www.sciencedirect.com/science/article/pii/S0304397507003696,,,,,,8,n: 8,3,O((16d/eps)^(log(16d/eps))/eps^2),500,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(1+2*log d, eps*n)",4,6,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,Delta^(O(log(Delta/eps))),,,"[https://www.sciencedirect.com/science/article/pii/S0304397507003696 Parnas, Ron [Section 4.1] (2005)]","Parnas, Ron [Section 4.1]","Parnas, Ron",Approximating the minimum vertex cover in sublinear time and a connection to distributed algorithms,2005,https://www.sciencedirect.com/science/article/pii/S0304397507003696,,,,,,8,n: 8,2,Delta^(O(log(Delta/eps))),500,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,(d/eps)^(O(log(d/eps))),,,"[https://www.sciencedirect.com/science/article/pii/S0304397507003696 Parnas, Ron [Section 4.1] (2005)]","Parnas, Ron [Section 4.1]","Parnas, Ron",Approximating the minimum vertex cover in sublinear time and a connection to distributed algorithms,2005,https://www.sciencedirect.com/science/article/pii/S0304397507003696,,,,,,8,n: 8,2,(d/eps)^(O(log(d/eps))),500,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,Delta^(O(log(Delta/eps))),,,"[https://link.springer.com/chapter/10.1007/11830924_43 Marko, Ron (2006)]","Marko, Ron","Marko, Ron",Distance Approximation in Bounded-Degree and General Sparse Graphs,2006,https://link.springer.com/chapter/10.1007/11830924_43,,,,,,8,n: 8,2,Delta^(O(log(Delta/eps))),500,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,2^(O(Delta))/eps^2,,,"[https://ieeexplore.ieee.org/document/4690966 Nguyen, Onak (2008)]","Nguyen, Onak","Nguyen, Onak",Constant-Time Approximation Algorithms via Local Improvements,2008,https://ieeexplore.ieee.org/document/4690966,,,,,,8,n: 8,2,2^(O(Delta))/eps^2,,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,O(Delta^4/eps^2),,,"[https://epubs.siam.org/doi/10.1137/110828691 Yoshida, Yamamoto, Ito (2009)]","Yoshida, Yamamoto, Ito","Yoshida, Yamamoto, Ito",Improved Constant-Time Approximation Algorithms for Maximum Matchings and Other Optimization Problems,2009,https://epubs.siam.org/doi/10.1137/110828691,,,,,,7,n: 7,3,O(Delta^4/eps^2),40,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,O(d^4/eps^4),,,"[https://epubs.siam.org/doi/10.1137/110828691 Yoshida, Yamamoto, Ito (+ Parnas-Ron/some other reduction?) (2009)]","Yoshida, Yamamoto, Ito (+ Parnas-Ron/some other reduction?)","Yoshida, Yamamoto, Ito",Improved Constant-Time Approximation Algorithms for Maximum Matchings and Other Optimization Problems,2009,https://epubs.siam.org/doi/10.1137/110828691,,,,,,7,n: 7,3,O(d^4/eps^4),40,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,0.001,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,O(Delta*d/eps^3 * (log(Delta/eps))^3),,,"[https://arxiv.org/abs/1110.1079 Onak, Ron, Rosen, Rubinfeld [Corollary 5.1] (2011)]","Onak, Ron, Rosen, Rubinfeld [Corollary 5.1]","Onak, Ron, Rosen, Rubinfeld",A Near-Optimal Sublinear-Time Algorithm for Approximating the Minimum Vertex Cover Size,2011,https://arxiv.org/abs/1110.1079,,,,,,,,3,O(Delta/eps^3 * (log(Delta/eps))^3),,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,0.001,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,O(d/eps^4 * (log(d/eps))^3),,,"[https://arxiv.org/abs/1110.1079 Onak, Ron, Rosen, Rubinfeld [Corollary 5.2] (2011)]","Onak, Ron, Rosen, Rubinfeld [Corollary 5.2]","Onak, Ron, Rosen, Rubinfeld",A Near-Optimal Sublinear-Time Algorithm for Approximating the Minimum Vertex Cover Size,2011,https://arxiv.org/abs/1110.1079,,,,,,,,3,O(d/eps^4 * (log(d/eps))^3),,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,,,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, General (Approximate)",,,,1,0,2^(O(k)),,,[https://www.sciencedirect.com/science/article/pii/S0304397512010821  (2013)],,"Brankovic, Fernau",A novel parameterised approximation algorithm for minimum vertex cover,2013,https://www.sciencedirect.com/science/article/pii/S0304397512010821,,,,,,8,n: 8,1,2^(O(k)),984,"n: number of vertices
m: number of edges
k: vertex cover size (can be O(n))
l: error parameter; positive integer ≥ 1",n,https://www.sciencedirect.com/science/article/pii/S0304397512010821,,Word RAM (adj. list format with degree queries),words,,,,,,,,0,,1,(2l+1)/(l+1) (or 3/2 for l = 1),2,2.5,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,n^(O(Delta)),,,"[https://drops.dagstuhl.de/opus/volltexte/2020/12685/pdf/LIPIcs-MFCS-2020-16.pdf Biswas, Raman, Saurabh (2020)]","Biswas, Raman, Saurabh","Biswas, Raman, Saurabh",Approximation in (Poly-) Logarithmic Space,2020,https://drops.dagstuhl.de/opus/volltexte/2020/12685/pdf/LIPIcs-MFCS-2020-16.pdf,,,,,,8,n: 8,2,n^(O(Delta)),,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex",n,,,Word RAM,bits,1,n: 1,O(Delta*log(n)),https://drops.dagstuhl.de/opus/volltexte/2020/12685/pdf/LIPIcs-MFCS-2020-16.pdf,0,1,,1,Monte Carlo,1,2,2,3,0,multiplicative,no,n/a,factor off from true minimum size,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, General (Approximate)",,,,1,0,"O(n + Delta/eps^2 * polylog(n, Delta, 1/eps))",,,[https://arxiv.org/abs/2106.02942 Behnezhad [Theorem 1.2] (2021)],Behnezhad [Theorem 1.2],Behnezhad,Time-Optimal Sublinear Algorithms for Matching and Vertex Cover,2021,https://arxiv.org/abs/2106.02942,,,,,,4,n: 4,2.9,"O(n + Delta/eps^2 * polylog(n, Delta, 1/eps))",15,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,https://arxiv.org/abs/2106.02942,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,2 + eps,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, Sparse (Approximate)",,,,1,0,"O(d/eps^2 * polylog(d, 1/eps))",,,[https://arxiv.org/abs/2106.02942 Behnezhad [Theorem 1.3] (2021)],Behnezhad [Theorem 1.3],Behnezhad,Time-Optimal Sublinear Algorithms for Matching and Vertex Cover,2021,https://arxiv.org/abs/2106.02942,,,,,,4,n: 4,2.9,"O(d/eps^2 * polylog(d, 1/eps))",15,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,https://arxiv.org/abs/2106.02942,0,Word RAM (adj. list format with degree queries),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Size Problem, General (Approximate)",,,,1,0,"O(n/eps^3 * polylog(n, eps))",,,[https://arxiv.org/abs/2106.02942 Behnezhad [Theorem 1.4] (2021)],Behnezhad [Theorem 1.4],Behnezhad,Time-Optimal Sublinear Algorithms for Matching and Vertex Cover,2021,https://arxiv.org/abs/2106.02942,,,,,,4,n: 4,2.9,"O(n/eps^3 * polylog(n, eps))",15,"n: number of vertices
m: number of edges
Delta: maximum degree of a vertex
d: average degree of a vertex
eps: additive error parameter",n,https://arxiv.org/abs/2106.02942,0,Word RAM (adj. matrix model),words,,,,,,,,1,Monte Carlo,1,"(2, eps*n)",4,3,5.99,multiplicative-additive,yes,n/a,factor + additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
72,The Vertex Cover Problem,0.001,1,0,"The Vertex Cover Problem, Planar Graph, Unweighted (Approximate)",,,,1,0,O(n),,,[ Gavril (?)],Gavril,Gavril,,?,,,,,,,3,n: 3,3,O(n),10,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/pdf/10.1145/800070.802205,0,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Problem, Planar Graph (Approximate)",,,,1,0,O(n),,,"[https://www.sciencedirect.com/science/article/pii/0196677481900201 Bar-Yehuda, Even (1981)]","Bar-Yehuda, Even","Bar-Yehuda, Even",A linear-time approximation algorithm for the weighted vertex cover problem,1981,https://www.sciencedirect.com/science/article/pii/0196677481900201,,,,,,3,n: 3,3,O(n),10,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/0196677481900201,0,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Problem, Planar Graph (Approximate)",,,,1,0,O(n^2 log n),,,[https://www.sciencedirect.com/science/article/pii/0166218X8390080X Hochbaum (1981)],Hochbaum,Hochbaum,"Efficient bounds for the stable set, vertex cover and set packing problems",1981,https://www.sciencedirect.com/science/article/pii/0166218X8390080X,,,,,,5.01,n: 5.01,3,O(n^2 log n),21,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/0166218X8390080X,0,Word RAM,words,,,,,,,,0,,1,8/5,2,2.6,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Problem, Planar Graph (Approximate)",,,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/pii/0166218X8390080X Hochbaum (1981)],Hochbaum,Hochbaum,"Efficient bounds for the stable set, vertex cover and set packing problems",1981,https://www.sciencedirect.com/science/article/pii/0166218X8390080X,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/10.1145/800070.802205,0,Word RAM,words,,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Problem, Planar Graph (Approximate)",,,,1,0,O(n),,,"[https://dl.acm.org/doi/10.1145/800070.802205 Bar-Yehuda, Even (1982)]","Bar-Yehuda, Even","Bar-Yehuda, Even",On approximating a vertex cover for planar graphs,1982,https://dl.acm.org/doi/10.1145/800070.802205,,,,,,3,n: 3,3,O(n),10,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/10.1145/800070.802205,0,Word RAM,words,,,,,,,,0,,1,5/3,2,2.667,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,1,0,"The Vertex Cover Problem, Planar Graph (Approximate)",,,,1,0,O(n log n),,,"[https://dl.acm.org/doi/10.1145/800070.802205 Bar-Yehuda, Even (1982)]","Bar-Yehuda, Even","Bar-Yehuda, Even",On approximating a vertex cover for planar graphs,1982,https://dl.acm.org/doi/10.1145/800070.802205,,,,,,4,n: 4,3,O(n log n),11,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/10.1145/800070.802205,0,Word RAM,words,,,,,,,,0,,1,1-O(1/sqrt(log log n)),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,0.001,1,0,"The Vertex Cover Problem, Planar Graph (Approximate)",,,,1,0,O(8^(f(n)) * f(n) * n)?,,,[https://dl.acm.org/doi/10.1145/174644.174650 Baker (1994)],Baker,Baker,Approximation algorithms for NP-complete problems on planar graphs,1994,https://dl.acm.org/doi/10.1145/174644.174650,,,,,,3,n: 3,3,O(8^(f(n)) * f(n) * n)?,,"n: number of vertices
m: number of edges
f(n): any function of n",n,,,Word RAM,words,,,,,,,,0,,1,f(n)/(f(n)+1),1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,0,0,"The Vertex Cover Problem on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O_k(poly(n)),,,[https://dl.acm.org/doi/pdf/10.5555/313651.313687 Halldorsson (1995)],Halldorsson,Halldorsson,Approximating Discrete Collections via Local Improvements,1995,https://dl.acm.org/doi/pdf/10.5555/313651.313687,,,,,,7,n: 7,1,O_k(poly(n)),,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,,,Word RAM,words,,,,,,,,0,,1,"max(1.5, 2-2((k-1)ln(k-1)-k+2)/(k-2)^2)",2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72,The Vertex Cover Problem,1,0,0,The Vertex Cover Problem on Minor-Free Graphs (Approximate),,,,1,0,O_eps(poly(n)),,,[https://link.springer.com/article/10.1007/s00493-003-0037-9 Grohe (2003)],Grohe,Grohe,"Local Tree-Width, Excluded Minors, and Approximation Algorithms",2003,https://link.springer.com/article/10.1007/s00493-003-0037-9,,,,,,7,n: 7,1,O_eps(poly(n)),,"n: number of vertices
m: number of edges
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
72.1,The Vertex Cover Problem on Hypergraphs,1,0,0,"The Vertex Cover Problem, k-uniform Hypergraphs (Approximate)",,,,1,0,"O(poly(n, m))",,,[https://epubs.siam.org/doi/epdf/10.1137/S0097539700381097 Halperin (2002)],Halperin,Halperin,Improved Approximation Algorithms for the Vertex Cover Problem in Graphs and Hypergraphs,2002,https://epubs.siam.org/doi/epdf/10.1137/S0097539700381097,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of hyperedges
k: uniformity of hypergraph",n,,,Word RAM,words,,,,,,,,0,,1,k - (k-o(1))*(log log n)/(log n),4,9?,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
75,Data Compression,0.001,1,0,,,,,1,0,,,,[https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=2254&context=cstech  (1996)],,"Atallah, Genin, Szpankowski","PATTERN MATCHING IMAGE COMPRESSION, Algorithmic and Empirical Results",1996,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=2254&context=cstech,,,,,,4,n: 4,3,O(n log^2 n),12,n: length of input data,n,https://ieeexplore.ieee.org/abstract/document/623143,0,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,1,,,Image Processing
75,Data Compression,0.001,1,0,,,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/623143  (1997)],,"Luczak, Szpankowski",A suboptimal lossy data compression based on approximate pattern matching,1997,https://ieeexplore.ieee.org/abstract/document/623143,,,,,,,,,,,n: length of input data,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,1,,,Image Processing
75,Data Compression,0.001,1,0,,,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/3139315.3139319  (2017)],,"Suresh, Hegde, Sartori",Approximate compression: enhancing compressibility through data approximation,2017,https://dl.acm.org/doi/abs/10.1145/3139315.3139319,,,,,,,,,,,n: length of input data,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,1,,,Image Processing
75,Data Compression,0.001,0,0,Nearly Optimal Prefix Codes,,,,1,0,,,,[https://ieeexplore.ieee.org/document/1056250  (1980)],,Mehlhorn,An efficient algorithm for constructing nearly optimal prefix codes,1980,https://ieeexplore.ieee.org/document/1056250,,,,,,,,,,,n: length of input data,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,1,,,Image Processing
75,Data Compression,0.001,0,0,Grammar-Based Compression (Approximate),,,,1,0,,,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5329287b125fe1c4b22e742b3f2b01366e80a0c6  (2002)],,"Lehman, Shelat",Approximation Algorithms for Grammar-Based Compression,2002,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5329287b125fe1c4b22e742b3f2b01366e80a0c6,,,,,,,,,,,n: length of input data,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,1,,,Image Processing
75,Data Compression,0.001,0,0,Grammar-Based Compression (Approximate),,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/S1570866704000632#bib012  (2005)],,Sakamoto,A fully linear-time approximation algorithm for grammar-based compression,2005,https://www.sciencedirect.com/science/article/pii/S1570866704000632#bib012,,,,,,,,,,,n: length of input data,n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,1,,,Image Processing
78,Stable Matching Problem,2,1,0,Almost Stable Marriage Problem,619,,,1,0,O(1+Delta/eps),,,"[https://arxiv.org/pdf/0812.4893.pdf Valentin Polishchuk, and Jukka Suomela (2008)]","Valentin Polishchuk, and Jukka Suomela","Floreen, Kaski, Polishchuk, Suomela",Almost Stable Matchings in Constant Time,2008,https://arxiv.org/pdf/0812.4893.pdf,,,,0,0,3,n: 3,3,O(1+Delta/eps),10,"n: number of people in set
Delta: max degree
eps: approximation parameter",n,,0,Word RAM,words,1,n: 1,O(1+Delta/eps) per node,derived: must be \leq time complexity,1,0,,0,,1,2 + \epsilon,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal max weight in matching,0,1,O(n),0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, Ties for One Gender Only and at End of Lists",,,,1,0,O(m sqrt(n)),,,[https://link.springer.com/article/10.1007/s10878-007-9133-x  (2007)],,"Irving, Manlove",Approximation algorithms for hard variants of the stable marriage and hospitals/residents problems,2007,https://link.springer.com/article/10.1007/s10878-007-9133-x,,,,,,5.5,n: 5.5,3,O(m sqrt(n)),,"n: number of people in set
m: number of acceptable pairs",n,https://link.springer.com/article/10.1007/s10878-007-9133-x,0,Word RAM,words,#VALUE!,,,,,,,0,,1,5/3,2,2.667,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, Ties for One Gender Only and at End of Lists",,,,1,0,O(poly(n)),,,[https://repository.kulib.kyoto-u.ac.jp/dspace/handle/2433/200620  (2015)],,"Huang, Iwama, Miyazaki, Yanagisawa",A Tight Approximation Bound for the Stable Marriage Problem with Restricted Ties,2015,https://repository.kulib.kyoto-u.ac.jp/dspace/handle/2433/200620,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,5/4,2,2.25,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(poly(n)),,,[https://dl.acm.org/doi/abs/10.1145/1273340.1273346  (2003)],,"Halldorsson, Iwama, Miyazaki, Yanagisawa",Improved Approximation Results for the Stable Marriage Problem,2003,https://dl.acm.org/doi/abs/10.1145/1273340.1273346,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs
L: maximum number of ties for a single person",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2/(1+L^(-2)),2,2.99,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://www.researchgate.net/publication/226388754_Improved_Approximation_of_the_Stable_Marriage_Problem,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(m),,,[https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52  (2008)],,Király,Better and Simpler Approximation Algorithms for the Stable Marriage Problem,2008,https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52,,,,,,5,n: 5,3,O(m),,"n: number of people in set
m: number of acceptable pairs",n,https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://link.springer.com/article/10.1007/s00453-009-9371-7,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(poly(n)),,,[https://link.springer.com/chapter/10.1007/978-3-642-15781-3_12  (2010)],,"Iwama, Miyazaki, Yanagisawa",A 25/17-Approximation Algorithm for the Stable Marriage Problem with One-Sided Ties,2010,https://link.springer.com/chapter/10.1007/978-3-642-15781-3_12,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,25/17,2,2.471,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(m),,,[https://link.springer.com/chapter/10.1007/978-3-319-07557-0_25  (2014)],,"Huang, Kavitha",An Improved Approximation Algorithm for the Stable Marriage Problem with One-Sided Ties,2014,https://link.springer.com/chapter/10.1007/978-3-319-07557-0_25,,,,,,5,n: 5,3,O(m),,"n: number of people in set
m: number of acceptable pairs",n,https://link.springer.com/chapter/10.1007/978-3-319-07557-0_25,0,Word RAM,words,#VALUE!,,,,,,,0,,1,13/9,2,2.445,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://arxiv.org/abs/1805.05391,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(poly(n)),,,"[https://scholar.google.com/scholar?hl=en&as_sdt=0,22&cluster=17518852506193440750  (2015)]",,"Dean, Jalasutram",Factor revealing LPs and stable matching with ties and incomplete lists,2015,"https://scholar.google.com/scholar?hl=en&as_sdt=0,22&cluster=17518852506193440750",,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,19/13,2,2.462,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611975482.175,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(poly(n)),,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611975482.175  (2019)],,"Lam, Plaxton",A (1 + 1/e)-Approximation Algorithm for Maximum Stable Matching with One-Sided Ties and Incomplete Lists,2019,https://epubs.siam.org/doi/abs/10.1137/1.9781611975482.175,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,https://epubs.siam.org/doi/abs/10.1137/1.9781611975482.175,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1 + 1/e,2,2.368,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, One-Sided Ties",,,,1,0,O(poly(n)),,,[https://link.springer.com/article/10.1007/s00224-022-10072-1  (2022)],,"Lam, Plaxton",Maximum Stable Matching with One-Sided Ties of Bounded Length,2022,https://link.springer.com/article/10.1007/s00224-022-10072-1,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs
L: maximum number of ties for a single person",n,https://link.springer.com/article/10.1007/s00224-022-10072-1,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1 + (1 - 1/L)^L,2,2.368,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(m),,,[http://www.eecs.harvard.edu/cs286r/courses/fall09/papers/galeshapley.pdf Gale–Shapley algorithm (1962)],Gale–Shapley algorithm,"Gale, Shapley",College Admissions and the Stability of Marriage,1962,http://www.eecs.harvard.edu/cs286r/courses/fall09/papers/galeshapley.pdf,,,,,,5,n: 5,3,O(m),,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,3,n: 3,O(n),Only need to keep track of current (provisional) matchings,1,0,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://link.springer.com/article/10.1007/s00453-009-9371-7,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/pii/S0304397503003219  (2003)],,"Halldorsson, Irving, Iwama, Manlove, Miyazaki, Morita, Scott",Approximability results for stable marriage problems with ties,2003,https://www.sciencedirect.com/science/article/pii/S0304397503003219,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(poly(n)),,,[https://link.springer.com/chapter/10.1007/978-3-540-27810-8_30  (2004)],,"Iwama, Miyazaki, Yanagisawa",A ($2-c \frac{\log N}{N}$)–Approximation Algorithm for the Stable Marriage Problem,2004,https://link.springer.com/chapter/10.1007/978-3-540-27810-8_30,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs
c: some arbitrary constant",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2 - (c log n)/n,2,2.99,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(poly(n)),,,[https://link.springer.com/chapter/10.1007/11602613_90  (2005)],,"Iwama, Miyazaki, Yanagisawa",A ($2-c \frac{1}{\sqrt{N}}$)–Approximation Algorithm for the Stable Marriage Problem,2005,https://link.springer.com/chapter/10.1007/11602613_90,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2 - 1/(4 sqrt(6n)),2,2.99,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(poly(n)),,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=46761438645a4cd3a22c58e6a1599e1748ce26b4  (2007)],,"Iwama, Miyazaki, Yanagisawa",A 1.875–Approximation Algorithm for the Stable Marriage Problem,2007,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=46761438645a4cd3a22c58e6a1599e1748ce26b4,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,15/8,2,2.875,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(m),,,[https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52  (2008)],,Király,Better and Simpler Approximation Algorithms for the Stable Marriage Problem,2008,https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52,,,,,,5,n: 5,3,O(m),,"n: number of people in set
m: number of acceptable pairs",n,https://link.springer.com/chapter/10.1007/978-3-540-87744-8_52,0,Word RAM,words,#VALUE!,,,,,,,0,,1,5/3,2,2.667,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,https://link.springer.com/article/10.1007/s00453-009-9371-7,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(n^1.5 m),,,[https://link.springer.com/chapter/10.1007/978-3-642-02927-1_57  (2009)],,McDermid,A 3/2-Approximation Algorithm for General Stable Marriage,2009,https://link.springer.com/chapter/10.1007/978-3-642-02927-1_57,,,,,,6.5,n: 6.5,3,O(n^1.5 m),26.5,"n: number of people in set
m: number of acceptable pairs",n,https://link.springer.com/chapter/10.1007/978-3-642-02927-1_57,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(m),,,[https://arxiv.org/abs/0911.5660  (2009)],,Paluch,Faster and simpler approximation of stable matchings,2009,https://arxiv.org/abs/0911.5660,,,,,,5,n: 5,3,O(m),,"n: number of people in set
m: number of acceptable pairs",n,https://arxiv.org/abs/0911.5660,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(m),,,[https://www.mdpi.com/1999-4893/6/3/471  (2012)],,Király,Linear Time Local Approximation Algorithm for Maximum Stable Marriage,2012,https://www.mdpi.com/1999-4893/6/3/471,,,,,,5,n: 5,3,O(m),,"n: number of people in set
m: number of acceptable pairs",n,https://www.mdpi.com/1999-4893/6/3/471,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,0,0,"Max Stable Matching with Incomplete Lists and Ties, General",,,,1,0,O(poly(n)),,,[https://uwspace.uwaterloo.ca/handle/10012/16052  (2020)],,Tofigzade,An Algorithm for Stable Matching with Approximation up to the Integrality Gap,2020,https://uwspace.uwaterloo.ca/handle/10012/16052,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of people in set
m: number of acceptable pairs
L: maximum number of ties for a single person",n,https://uwspace.uwaterloo.ca/handle/10012/16052,0,Word RAM,words,#VALUE!,,,,,,,0,,1,(3L - 2)/(2L - 1),2,2.5,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,0,0,"Max Stable Matching with Laminar Constraints and Ties, General",,,,1,0,O(km^2),,,[https://arxiv.org/abs/2107.03076  (2021)],,Yokoi,An Approximation Algorithm for Maximum Stable Matching with Ties and Constraints,2021,https://arxiv.org/abs/2107.03076,,,,,,7,n: 7,3,O(km^2),,"n: number of people in set
m: number of acceptable pairs
k: maximum level of nesting of laminar constraints",n,https://arxiv.org/abs/2107.03076,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,0,0,Minimum Egalitarian Sex-Equal Stable Marriage Problem,,,,1,0,O(n^(3+2(1+eps)/delta)),,,[https://dl.acm.org/doi/abs/10.1145/1868237.1868239  (2010)],,"Iwama, Miyazaki, Yanagisawa",Approximation algorithms for the sex-equal stable marriage problem,2010,https://dl.acm.org/doi/abs/10.1145/1868237.1868239,,,,,,7,n: 7,3,O(n^(3+2(1+eps)/delta)),400,"n: number of people in set
m: number of acceptable pairs
eps: sex-equality cost parameter
delta: approx parameter, 0 < delta < eps",n,https://dl.acm.org/doi/abs/10.1145/1868237.1868239,0,Word RAM,words,#VALUE!,,,,,,,0,,1,2 - (eps-delta)/(2+3*eps),2,2.99,0,multiplicative,no,n/a,factor off from optimal min cost in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,0,0,"Max Stable Matching with Incomplete Lists and Ties, General, Strategy-Proof",,,,1,0,,,,[https://arxiv.org/abs/1902.05678  (2019)],,"Hamada, Miyazaki, Yanagisawa",Strategy-Proof Approximation Algorithms for the Stable Marriage Problem with Ties and Incomplete Lists,2019,https://arxiv.org/abs/1902.05678,,,,,,,,,,,"n: number of people in set
m: number of acceptable pairs",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal max size in matching,0,0,,0,0,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,1,"Longest Path, General (Approximate)",,,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/abs/pii/S0304020808731104 Monien (implicit) (1985)],Monien (implicit),Monien,How to Find Long Paths Efficiently,1985,https://www.sciencedirect.com/science/article/abs/pii/S0304020808731104,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/abs/pii/S0304020808731104,,Word RAM,words,#VALUE!,,,,,,,0,,1,O((n log log n)/(log n)),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,0.001,0,1,"Longest Path, General (Approximate)",,,,1,0,O(poly(n)),,,"[https://www.sciencedirect.com/science/article/pii/S0196677483710011 Dynamic Programming with Cutoff (Bodlaender, implicit) (1993)]","Dynamic Programming with Cutoff (Bodlaender, implicit)",Bodlaender,On Linear Time Minor Tests with Depth-First Search,1993,https://www.sciencedirect.com/science/article/pii/S0196677483710011,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/S0196677483710011,,Word RAM,words,#VALUE!,,,,,,,0,,1,O((n log log n)/(log n)),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,1,"Longest Path, General (Approximate)",,,,1,0,O(poly(n)),,,"[https://dl.acm.org/doi/pdf/10.1145/210332.210337 Alon, Yuster, Zwick (implicit) (1995)]","Alon, Yuster, Zwick (implicit)","Alon, Yuster, Zwick",Color-Coding,1995,https://dl.acm.org/doi/pdf/10.1145/210332.210337,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/pdf/10.1145/210332.210337,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n/log n),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected (Approximate)",,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/3-540-45465-9_84 Bjorklund, Husfeldt (2003)]","Bjorklund, Husfeldt","Bjorklund, Husfeldt",Finding a Path of Superlogarithmic Length,2003,https://link.springer.com/chapter/10.1007/3-540-45465-9_84,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://link.springer.com/chapter/10.1007/3-540-45465-9_84,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n*((log log n)/(log n))^2),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected (Approximate)",,,,1,0,O(poly(n)),,,"[https://dl.acm.org/doi/10.1145/1328911.1328918 Gabow, Nie (improvement on Bjorklund, Husfeldt) (2004)]","Gabow, Nie (improvement on Bjorklund, Husfeldt)","Gabow, Nie",Finding a long directed cycle,2004,https://dl.acm.org/doi/10.1145/1328911.1328918,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/10.1145/1328911.1328918,,Word RAM,words,#VALUE!,,,,,,,0,,1,O((n log log n)/((log n)^2)),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected (Approximate)",,,,1,0,O(poly(n)),,,[https://home.cs.colorado.edu/~hal/u.pdf Gabow (2007)],Gabow,Gabow,Finding Paths and Cycles of Superpolylogarithmic Length,2007,https://home.cs.colorado.edu/~hal/u.pdf,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://home.cs.colorado.edu/~hal/u.pdf,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n/exp(sqrt((log n)/(log log n)))),4,8.97,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected (Approximate)",,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/978-3-540-92182-0_66 Gabow, Nie (2008)]","Gabow, Nie","Gabow, Nie","Finding Long Paths, Cycles and Circuits",2008,https://link.springer.com/chapter/10.1007/978-3-540-92182-0_66,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://link.springer.com/chapter/10.1007/978-3-540-92182-0_66,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n/exp(sqrt(log n))),4,8.97,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected (Approximate)",,,,1,0,O(n^2),,,"[https://vjs.ac.vn/index.php/jcc/article/view/12935 Phuong, Duc, Thanh (2019)]","Phuong, Duc, Thanh","Phuong, Duc, Thanh",On the Performance of a Simple Approximation Algorithm for the Longest Path Problem,2019,https://vjs.ac.vn/index.php/jcc/article/view/12935,,,,,,5,n: 5,3,O(n^2),20,"n: number of vertices
m: number of edges",n,,1,Word RAM,words,3,n: 3,O(n),Keep track of vertices that have been visited,1,0,,0,,1,"O(n) worst-case, O(1) almost-sure (for almost every input graph)",4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected, Hamiltonian Graphs (Approximate)",,,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/pii/S0196677403000932 Vishwanathan (2000)],Vishwanathan,Vishwanathan,An approximation algorithm for finding long paths in Hamiltonian graphs,2000,https://www.sciencedirect.com/science/article/pii/S0196677403000932,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/S0196677403000932,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n*((log log n)/(log n))^2),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79,Longest Path Problem,1,0,0,"Longest Path, Undirected, Constant-Degree Graphs (Approximate)",,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/3-540-45465-9_84 Bjorklund, Husfeldt (2003)]","Bjorklund, Husfeldt","Bjorklund, Husfeldt",Finding a Path of Superlogarithmic Length,2003,https://link.springer.com/chapter/10.1007/3-540-45465-9_84,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://link.springer.com/chapter/10.1007/3-540-45465-9_84,,Word RAM,words,#VALUE!,,,,,,,0,,1,O((n log log n)/((log n)^2)),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79.1,Longest Cycle Problem,1,0,0,"Longest Cycle, General (Approximate)",,,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/abs/pii/S0304020808731104 Monien (implicit) (1985)],Monien (implicit),Monien,How to Find Long Paths Efficiently,1985,https://www.sciencedirect.com/science/article/abs/pii/S0304020808731104,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/abs/pii/S0304020808731104,,Word RAM,words,#VALUE!,,,,,,,0,,1,O((n log log n)/(log n)),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79.1,Longest Cycle Problem,0.001,0,0,"Longest Cycle, General (Approximate)",,,,1,0,O(poly(n)),,,"[https://www.sciencedirect.com/science/article/pii/S0196677483710011 Dynamic Programming with Cutoff (Bodlaender, implicit) (1993)]","Dynamic Programming with Cutoff (Bodlaender, implicit)",Bodlaender,On Linear Time Minor Tests with Depth-First Search,1993,https://www.sciencedirect.com/science/article/pii/S0196677483710011,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/S0196677483710011,,Word RAM,words,#VALUE!,,,,,,,0,,1,O((n log log n)/(log n)),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79.1,Longest Cycle Problem,1,0,0,"Longest Cycle, General (Approximate)",,,,1,0,O(poly(n)),,,"[https://dl.acm.org/doi/pdf/10.1145/210332.210337 Alon, Yuster, Zwick (implicit) (1995)]","Alon, Yuster, Zwick (implicit)","Alon, Yuster, Zwick",Color-Coding,1995,https://dl.acm.org/doi/pdf/10.1145/210332.210337,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/pdf/10.1145/210332.210337,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n/log n),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
79.1,Longest Cycle Problem,1,0,0,"Longest Cycle, General (Approximate)",,,,1,0,O(poly(n)),,,[https://home.cs.colorado.edu/~hal/u.pdf Gabow (2007)],Gabow,Gabow,Finding Paths and Cycles of Superpolylogarithmic Length,2007,https://home.cs.colorado.edu/~hal/u.pdf,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://home.cs.colorado.edu/~hal/u.pdf,,Word RAM,words,#VALUE!,,,,,,,0,,1,O(n/exp(sqrt((log n)/(log log n)))),4,8.97,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Combinatorics
80,Maximum subarray problem,1,0,0,2-dimensional,,,,1,0,O(n^(omega) * (-log(epsilon))/epsilon),,,"[https://dl.acm.org/doi/pdf/10.5555/314613.314823 Tamaki, Tokuyama (approximate) (1998)]","Tamaki, Tokuyama (approximate)","Tamaki, Tokuyama",Algorithms for the Maximum Subarray Problem Based on Matrix Multiplication ,1998,https://dl.acm.org/doi/pdf/10.5555/314613.314823,,,,,,5.371,n: 5.371,3,O(n^(omega) * (-log(epsilon))/epsilon),15.097,"n: dimension of array
epsilon: approximation parameter",n,https://dl.acm.org/doi/pdf/10.5555/314613.314823,0,Word RAM,words,,n: 5,O(n^2)?,derived: can reuse space in divide-and-conquer and in matrix multiplication,1,0,,0,,1,1 - \epsilon,1,2,0,multiplicative,yes,FPTAS,factor off from optimal value,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
84,Longest Palindromic Substring,0.001,0,0,All Maximal Approximate Palindromes,,,,1,0,O(k^2n),,,[https://www.sciencedirect.com/science/article/pii/S0031320301001790  (2002)],,"Porto, Barbosa",Finding approximate palindromes in strings,2002,https://www.sciencedirect.com/science/article/pii/S0031320301001790,,,,,,5,n: 5,3,O(k^2n),,"n: length of given string
k: edit distance error",n,https://www.sciencedirect.com/science/article/pii/S0031320301001790,0,Word RAM,words,,"n: 3,
k: 3",O(k+n),https://www.sciencedirect.com/science/article/pii/S0031320301001790,0,1,,0,,1,k,4,0,2,additive,yes,n/a,edit distance error,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
96,Filtering Problem (Stochastic Processes),0.001,0,0,Filtering Problem (Stochastic Processes),,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/855552  (2000)],,"Ito, Xiong",Gaussian filters for nonlinear filtering problems,2000,https://ieeexplore.ieee.org/abstract/document/855552,,,,,,#VALUE!,,,,,n: number of dimensions in state space,n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
96,Filtering Problem (Stochastic Processes),0.001,0,0,Filtering Problem (Stochastic Processes),,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/847749  (2000)],,"Kushner, Budhiraja",A nonlinear filtering algorithm based on an approximation of the conditional distribution,2000,https://ieeexplore.ieee.org/abstract/document/847749,,,,,,#VALUE!,,,,,n: number of dimensions in state space,n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
96,Filtering Problem (Stochastic Processes),0.001,0,0,Filtering Problem (Stochastic Processes),,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/6160252  (2011)],,"Liu, Hwang",Stochastic approximation algorithm with application to event-triggered filtering,2011,https://ieeexplore.ieee.org/abstract/document/6160252,,,,,,#VALUE!,,,,,n: number of dimensions in state space,n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
96,Filtering Problem (Stochastic Processes),0.001,0,0,Filtering Problem (Stochastic Processes),,,,1,0,,,,[https://www.researchgate.net/profile/Yintang-Yang/publication/267781888_Target_Tracking_Approximation_Algorithms_with_Particle_Filter_Optimization_and_Fault-Tolerant_Analysis_in_Wireless_Sensor_Networks/links/54cda9ce0cf29ca810f89e31/Target-Tracking-Approximation-Algorithms-with-Particle-Filter-Optimization-and-Fault-Tolerant-Analysis-in-Wireless-Sensor-Networks.pdf  (2012)],,"Gao, Yang, Zhou, Zhang, Chai",Target Tracking Approximation Algorithms with Particle Filter Optimization and Fault-Tolerant Analysis in Wireless Sensor Networks,2012,https://www.researchgate.net/profile/Yintang-Yang/publication/267781888_Target_Tracking_Approximation_Algorithms_with_Particle_Filter_Optimization_and_Fault-Tolerant_Analysis_in_Wireless_Sensor_Networks/links/54cda9ce0cf29ca810f89e31/Target-Tracking-Approximation-Algorithms-with-Particle-Filter-Optimization-and-Fault-Tolerant-Analysis-in-Wireless-Sensor-Networks.pdf,,,,,,#VALUE!,,,,,n: number of dimensions in state space,n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
96,Filtering Problem (Stochastic Processes),0.001,0,0,Filtering Problem (Stochastic Processes),,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/6906271  (2014)],,"Lee, Liu, Hwang",Markov Chain Approximation Algorithm for Event-Based State Estimation,2014,https://ieeexplore.ieee.org/abstract/document/6906271,,,,,,#VALUE!,,,,,n: number of dimensions in state space,n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,$O(dn)$,,,[https://dl.acm.org/doi/pdf/10.1145/800125.804034 Johnson ( + bucket queue) (1974)],Johnson ( + bucket queue),Johnson,Approximation Algorithms for Combinatorial Problems,1974,https://dl.acm.org/doi/pdf/10.1145/800125.804034,,,,1,0,5,"n: 5,
d: 3",3,$O(dn)$,20,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,https://dl.acm.org/doi/pdf/10.1145/800125.804034,0,Word RAM,words,3,"d: 3,
n: 3,
U: 3",O(dn),"Derived -- worst case, updating each set in S to be something else and we don't want to change the input",1,0,,0,,1,"min(1 + ln d, ln U - ln(ln U) + \Theta(1))",2.6,6,0,multiplicative,no,n/a,factor off from minimum,1,0,,0,0,http://dl.acm.org/citation.cfm?id=237991,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Weighted Set-Covering,767,,,1,0,$O(dn)$,,,[https://www.jstor.org/stable/3689577#metadata_info_tab_contents Chvatal greedy heuristic ( + bucket queue) (1979)],Chvatal greedy heuristic ( + bucket queue),Chvatal,A Greedy Heuristic for the Set-Covering Problem,1979,https://www.jstor.org/stable/3689577#metadata_info_tab_contents,,,,1,0,5,"n: 5,
d: 3",3,$O(dn)$,20,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,https://dl.acm.org/doi/pdf/10.1145/800125.804034,0,Word RAM,words,3,"d: 3,
n: 3,
U: 3",O(dn),"Derived -- worst case, updating each set in S to be something else and we don't want to change the input",1,0,,0,,1,"min(1 + ln d, ln U - ln(ln U) + \Theta(1))",2.6,6,0,multiplicative,no,n/a,factor off from minimum weight,1,0,,0,0,http://dl.acm.org/citation.cfm?id=237991,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O(dn),,,[https://www.sciencedirect.com/science/article/pii/0196677481900201  (1981)],,"Bar-Yehuda, Even",A linear-time approximation algorithm for the weighted vertex cover problem,1981,https://www.sciencedirect.com/science/article/pii/0196677481900201,,,,,,5,"n: 5,
d: 3",3,O(dn),20,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S
f: frequency of most frequent element",n,https://www.sciencedirect.com/science/article/pii/0196677481900201,0,Word RAM,words,#VALUE!,,,,,,,0,,1,f,4,8.9,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O((dn)^3),,,[https://epubs.siam.org/doi/abs/10.1137/0211045  (1982)],,Hochbaum,Approximation Algorithms for the Set Covering and Vertex Cover Problems,1982,https://epubs.siam.org/doi/abs/10.1137/0211045,,,,,,7,"n: 7,
d: 6",3,O((dn)^3),60,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S
f: frequency of most frequent element",n,https://epubs.siam.org/doi/abs/10.1137/0211045,0,Word RAM,words,#VALUE!,,,,,,,0,,1,f,4,8.9,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,1,0,Unweighted Set-Covering,772,,,1,0,O(nlogn),,,[https://dl.acm.org/doi/pdf/10.1145/1150334.1150336 Alon; Moshkovitz & Safra (2006)],Alon; Moshkovitz & Safra,"Alon, Moshkovitz, Safra",Algorithmic Construction of Sets for k-Restrictions,2006,https://dl.acm.org/doi/pdf/10.1145/1150334.1150336,,,,1,4->5,4,n: 4,3,$O(nlogn)$,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,,,#VALUE!,,,,,,,0,,0,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,1,1,Unweighted Set-Covering,,,,1,0,O((nd)^2)?,,,[https://www.ics.uci.edu/~vazirani/book.pdf Vazirani [frequency bound] (2001)],Vazirani [frequency bound],Vazirani,Approximation Algorithms,2001,https://www.ics.uci.edu/~vazirani/book.pdf,,,,1,1->4,7,"n: 7,
d: 5",3,O((nd)^2)?,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S
f: frequency of most frequent element",n,,1,Word RAM,words,3,"d: 3,
n: 3,
U: 3",O(nd)?,"Size of ""hypergraph"" representation",1,0,,0,,1,f,4,8.9,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering; Weighted Set-Covering,766,ILP,,1,0,"O(poly(n, d))",,,[https://www.ics.uci.edu/~vazirani/book.pdf Integer linear program Vazirani (2001)],Integer linear program Vazirani,Vazirani,Approximation Algorithms,2001,https://www.ics.uci.edu/~vazirani/book.pdf,,,,1,1->4,7,n: 7,1,"O(poly(n, d))",400,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,3,"d: 3,
n: 3,
U: 3",O(dn),Size of LP,1,0,,0,,1,\log U,2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,https://link.springer.com/chapter/10.1007/978-3-662-04565-7_13,,,,,,,,,,,1000000,Inf,,1000000000000,Inf,,1E+18,Inf,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,1,0,,768,,,1,0,$O(dn)$,,,[https://dl.acm.org/doi/10.1145/237814.237991 Greedy Algorithm (1996)],Greedy Algorithm,Slavik,A tight analysis of the greedy algorithm for set cover,1996,https://dl.acm.org/doi/10.1145/237814.237991,,,,1,0,5,"n: 5,
d: 3",3,$O(dn)$,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,https://dl.acm.org/doi/pdf/10.1145/800125.804034,0,Word RAM,words,3,"d: 3,
n: 3,
U: 3",O(dn),"Derived -- worst case, updating each set in S to be something else and we don't want to change the input",1,0,,0,,1,\ln(U) - \ln(\ln(U)) + \Theta(1),2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,"Unweighted Set-Covering, Minimize Overlap",,,,1,0,$O((dn)^2)$,,,[https://dl.acm.org/doi/pdf/10.1145/800125.804034 Johnson (1974)],Johnson,Johnson,Approximation Algorithms for Combinatorial Problems,1974,https://dl.acm.org/doi/pdf/10.1145/800125.804034,,,,,,7,"n: 7,
d: 6",3,$O((dn)^2)$,40,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,https://dl.acm.org/doi/pdf/10.1145/800125.804034,0,Word RAM,words,3,"d: 3,
n: 3,
U: 3",O(dn),"Derived -- each iteration requires O(dn) space, can recycle space across iterations",1,0,,0,,1,1 + ln d,2.6,6,0,multiplicative,no,n/a,factor off from minimum,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O(Un),,,[https://www.jstor.org/stable/pdf/2584621.pdf  (1995)],,"Afif, Hifi, Paschos, Zissimopoulos",A New Efficient Heuristic For the Minimum Set Covering Problem,1995,https://www.jstor.org/stable/pdf/2584621.pdf,,,,,,5,"n: 5,
U: 3",3,O(Un),1010,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,https://www.jstor.org/stable/pdf/2584621.pdf,0,Word RAM,words,#VALUE!,,,,,,,0,,1,1 + ln d,2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,https://www.proquest.com/docview/304966180?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O(poly(nd)),,,[https://www.sciencedirect.com/science/article/pii/0020019093901737  (1993)],,"Goldschmidt, Hochbaum, Yu",A modified greedy heuristic for the Set Covering problem with improved worst case bound,1993,https://www.sciencedirect.com/science/article/pii/0020019093901737,,,,,,7,n: 7,1,O(poly(nd)),400,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,(1 + ln d) - 1/6,2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,https://www.proquest.com/docview/304966180?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O(poly(nd)),,,[https://dl.acm.org/doi/abs/10.5555/313651.313687  (1995)],,Halldorsson,Approximating Discrete Collections via Local Improvements,1995,https://dl.acm.org/doi/abs/10.5555/313651.313687,,,,,,7,n: 7,1,O(poly(nd)),400,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,(1 + ln d) - 11/42,2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,https://www.proquest.com/docview/304966180?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O(poly(nd)),,,[https://dl.acm.org/doi/10.1145/258533.258599  (1997)],,"Duh, Furer",Approximation of k-set cover by semi-local optimization,1997,https://dl.acm.org/doi/10.1145/258533.258599,,,,,,7,n: 7,1,O(poly(nd)),400,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,(1 + ln d) - 1/2,2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,https://www.proquest.com/docview/304966180?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O(poly(nd)),,,[https://link.springer.com/chapter/10.1007/11970125_23  (2006)],,Levin,Approximating the Unweighted k-Set Cover Problem: Greedy Meets Local Search,2006,https://link.springer.com/chapter/10.1007/11970125_23,,,,,,7,n: 7,1,O(poly(nd)),400,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,(1 + ln d) - 196/390,2.6,6,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,https://www.proquest.com/docview/304966180?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,1,0,Weighted Set-Covering,,,,1,0,,,,"[https://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/blelloch/papers/BST12.pdf Blelloch, Simhadri, Tangwongsan (2012)]","Blelloch, Simhadri, Tangwongsan","Blelloch, Simhadri, Tangwongsan",Parallel and I/O Efficient Set Covering Algorithms,2012,https://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/blelloch/papers/BST12.pdf,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Parallel Cache Oblivious model,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Weighted Set-Covering,,,,1,0,O((log(nd))^3 (log(nd/eps))^2 eps^(-6)),,,[https://www.sciencedirect.com/science/article/pii/S0022000005800686  (1994)],,"Berger, Rompel, Shor",Efficient NC algorithms for set cover with applications to learning and geometry,1994,https://www.sciencedirect.com/science/article/pii/S0022000005800686,,,,,,2,n: 2,3,O((log(nd))^3 (log(nd/eps))^2 eps^(-6)),5,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S
eps: approximation factor; 0 < eps < 1",n,https://www.sciencedirect.com/science/article/pii/S0022000005800686,0,CREW PRAM?,words,#VALUE!,,,,,,,1,Monte Carlo,1,(1+eps)(1 + ln d),2.6,6,0,multiplicative,yes,n/a,factor off from minimum,0,1,O(nd),0,0,https://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/blelloch/papers/BST12.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Weighted Set-Covering,,,,1,0,O((log(nd))^3),,,"[https://dl.acm.org/doi/abs/10.1145/1989493.1989497 Blelloch, Peng, Tangwongsan (2011)]","Blelloch, Peng, Tangwongsan","Blelloch, Peng, Tangwongsan",Linear-work greedy parallel approximate set cover and variants,2011,https://dl.acm.org/doi/abs/10.1145/1989493.1989497,,,,,,2,n: 2,3,O((log(nd))^3),3,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S
eps: approximation factor",n,https://dl.acm.org/doi/abs/10.1145/1989493.1989497,0,CREW PRAM,words,#VALUE!,,,,,,,0,,1,(1+eps)(1 + ln U),2.6,6,0,multiplicative,yes,n/a,factor off from minimum,0,1,O(nd)?,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Weighted Set-Covering,,,,1,0,O(f (log U)^2 log(1/eps)),,,[https://arxiv.org/abs/cs/0205037  (1994)],,"Khuller, Vishkin, Young",A Primal-Dual Parallel Approximation Technique Applied to Weighted Set and Vertex Cover,1994,https://arxiv.org/abs/cs/0205037,,,,,,4,n: 4,3,O(f (log U)^2 log(1/eps)),12,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S
f: frequency of most frequent element
eps: approximation factor",n,https://arxiv.org/abs/cs/0205037,0,Word RAM,words,#VALUE!,,,,,,,0,,1,f/(1-eps),4,8.9,0,multiplicative,yes,n/a,factor off from minimum,0,1,O(nd/(log U)),0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,1,0,Weighted Set-Covering,,,,1,0,,,,"[https://dl.acm.org/doi/abs/10.1145/1582716.1582746 Koufogiannakis, Young (2009)]","Koufogiannakis, Young","Koufogiannakis, Young",Distributed and parallel algorithms for weighted vertex cover and other covering problems,2009,https://dl.acm.org/doi/abs/10.1145/1582716.1582746,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,CREW PRAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,O((log(nd))^3),,,"[https://epubs.siam.org/doi/abs/10.1137/S0097539793260763 Rajagopalan, Vazirani (1998)]","Rajagopalan, Vazirani","Rajagopalan, Vazirani",Primal-Dual RNC Approximation Algorithms for Set Cover and Covering Integer Programs,1998,https://epubs.siam.org/doi/abs/10.1137/S0097539793260763,,,,,,2,n: 2,3,O((log(nd))^3),3,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,https://epubs.siam.org/doi/abs/10.1137/S0097539793260763,0,CREW PRAM,words,#VALUE!,,,,,,,1,Las Vegas,1,16(ln(U)+1),4,6,0,multiplicative,no,n/a,factor off from minimum,0,1,O(nd)?,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,Weighted Set-Covering with Small Neighborhood Property,,,,1,0,,,,"[https://arxiv.org/abs/2202.03872 Ran, Zhang, Zhang (2022)]","Ran, Zhang, Zhang","Ran, Zhang, Zhang",A parallel algorithm for minimum weight set cover with small neighborhood property,2022,https://arxiv.org/abs/2202.03872,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,CREW PRAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,1,1,Unweighted Set-Covering,,,,1,0,"O(poly(n, d))",,,[https://www.sciencedirect.com/science/article/pii/S0304397514002515  (2014)],,"Ouali, Fohlin, Srivastav",A randomised approximation algorithm for the hitting set problem,2014,https://www.sciencedirect.com/science/article/pii/S0304397514002515,,,,,,7,n: 7,1,"O(poly(n, d))",400,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,1,Monte Carlo?,1,d*(1-(d-1)/n)?,4,9,0,multiplicative,no,n/a,factor off from minimum,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,Geometric Set Cover (Line Segments),,,,1,0,,,,"[https://www.sciencedirect.com/science/article/pii/S0166218X11004768 Brimkov, Leach, Wu, Mastroianni (2012)]","Brimkov, Leach, Wu, Mastroianni","Brimkov, Leach, Wu, Mastroianni",Approximation algorithms for a geometric set cover problem,2012,https://www.sciencedirect.com/science/article/pii/S0166218X11004768,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,"Geometric Set Cover (""Fat objects"")",,,,1,0,,,,[https://dl.acm.org/doi/abs/10.1145/1064092.1064115  (2005)],,"Clarkson, Varadarajan",Improved approximation algorithms for geometric set cover,2005,https://dl.acm.org/doi/abs/10.1145/1064092.1064115,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,Covering Linear Programming,,,,1,0,,,,[https://dl.acm.org/doi/pdf/10.1145/225058.225138  (1995)],,Srinivasan,Improved Approximations of Packing and Covering Problems,1995,https://dl.acm.org/doi/pdf/10.1145/225058.225138,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,Covering Linear Programming,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/S0022000005000656  (2005)],,"Kolliopoulos, Young",Approximation algorithms for covering/packing integer programs,2005,https://www.sciencedirect.com/science/article/pii/S0022000005000656,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,Partial Set Cover,,,,1,0,,,,"[https://www.sciencedirect.com/science/article/abs/pii/S0096300321004471 Ran, Zhang, Zhang (2021)]","Ran, Zhang, Zhang","Ran, Zhang, Zhang",Parallel approximation for partial set cover,2021,https://www.sciencedirect.com/science/article/abs/pii/S0096300321004471,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,0.001,0,0,Partial Set Cover,,,,1,0,,,,"[https://link.springer.com/chapter/10.1007/3-540-48224-5_19 Gandhi, Khuller, Srinivasan (2001)]","Gandhi, Khuller, Srinivasan","Gandhi, Khuller, Srinivasan",Approximation Algorithms for Partial Covering Problems,2001,https://link.springer.com/chapter/10.1007/3-540-48224-5_19,,,,,,#VALUE!,,,,,"U: number of elements in the universe
d: size of the largest set in S
n: number of sets in S",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
99,Motif Search,0.001,1,0,Motif Search,784,,,1,0,O(nm),,,"[https://www.ncbi.nlm.nih.gov/pubmed/2184437 Lawrence, Reilly (1990)]","Lawrence, Reilly","Lawrence, Reilly",An expectation maximization (EM) algorithm for the identification and characterization of common sites in unaligned biopolymer sequences,1990,https://www.ncbi.nlm.nih.gov/pubmed/2184437,,,,0,0,3,"n: 3,
m: 3,
mn: 3",3,O(nm),10,"n: number of sequences
m: length of sequences",mn,,,Word RAM,words,3,"n: 3,
m: 3,
mn: 3",O(nm),https://www.ncbi.nlm.nih.gov/pubmed/2184437,0,1,,0,,1,(no theoretical guarantees?),,,,,,,,0,0,,0,0,https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2966288/,,,,m=n= (value/2),,,,,,,250000,4,,250000000000,4,,2.5E+17,4,,4,,,Bioinformatics
99,Motif Search,0.001,1,0,Motif Search,785,,,1,0,O(nm),,,[https://science.sciencemag.org/content/262/5131/208 Lawrence Gibbs Sampling (1993)],Lawrence Gibbs Sampling,"Lawrence, Altschul, Boguski, Liu, Neuwald, Wootton",Detecting Subtle Sequence Signals: a Gibbs Sampling Strategy for Multiple Alignment,1993,https://science.sciencemag.org/content/262/5131/208,,,,0,0,3,"n: 3,
m: 3,
mn: 3",3,O(nm),10,"n: number of sequences
m: length of sequences",mn,,,Word RAM,words,2.5,"n: 3,
m: 3,
mn: 2.5",O(n + m),"derived: two data structures, one uses O(n) and one uses O(m)",1,0,,0,,1,(no theoretical guarantees?),,,,,,,,0,0,,0,0,https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2966288/,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
99,Motif Search,0.001,1,0,Motif Search,787,,,1,0,O(nm),,,[https://www.ncbi.nlm.nih.gov/pubmed/12015892 MotifSampler  (2001)],MotifSampler ,"Thijs, Marchal, Lescot, Rombauts, De Moor, Rouze, Moreau",A Gibbs sampling method to detect overrepresented motifs in the upstream regions of coexpressed genes,2001,https://www.ncbi.nlm.nih.gov/pubmed/12015892,,,,0,0,3,"n: 3,
m: 3,
mn: 3",3,O(nm),10,"n: number of sequences
m: length of sequences",mn,,,Word RAM,words,2.5,"n: 3,
m: 3,
mn: 2.5",O(n + m),derived: essentially just modified Gibbs sampling,1,0,,0,,1,(no theoretical guarantees?),,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
99,Motif Search,0.001,1,0,Motif Search,786,,,1,0,O(nm),,,[https://www.ncbi.nlm.nih.gov/pubmed/9788350 Roth AlignACE (1998)],Roth AlignACE,"Roth, Hughes, Estep, Church",Finding DNA regulatory motifs within unaligned noncoding sequences clustered by whole-genome mRNA quantitation,1998,https://www.ncbi.nlm.nih.gov/pubmed/9788350,,,,0,0,3,"n: 3,
m: 3,
mn: 3",3,$O(nm)$,,"n: number of sequences
m: length of sequences",mn,,,Word RAM,words,2,"n: 3,
m: 3,
mn: 2",O(n + m),derived: essentially just modified Gibbs sampling,1,0,,0,,1,(no theoretical guarantees?),,,,,,,,0,0,,0,0,https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2966288/,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
99,Motif Search,0.001,0,0,Closest Substring,,,,1,0,O(poly(n)),,,[https://arxiv.org/abs/cs/0002012  (2000)],,"Li, Ma, Wang",On The Closest String and Substring Problems,2000,https://arxiv.org/abs/cs/0002012,,,,0,0,7,mn: 7,1,O(poly(n)),400,"n: number of sequences
m: length of sequences",mn,,,Word RAM,words,#VALUE!,,,,,,,0,,1,1+delta,1,2,0,multiplicative,yes,PTAS?,Factor off from optimal distances to each string,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,4,,,Bioinformatics
153,Link Analysis,0.001,1,0,Link Analysis,,,,1,0,,,,[https://link.springer.com/chapter/10.1007/978-3-540-78808-9_6  (2006)],,"Fortunato, Boguna, Flammini, Menczer",Approximating PageRank from In-Degree,2006,https://link.springer.com/chapter/10.1007/978-3-540-78808-9_6,,,,,,#VALUE!,,,,,"n: number of pages
m: number of hyperlinks?",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,1,1,0,Link Analysis,,,,1,0,O(m sqrt(n) poly(log n))?,,,[https://dl.acm.org/doi/abs/10.1145/1970392.1970397  (2011)],,"Das Sarma, Gollapudi, Panigrahy",Estimating PageRank on graph streams,2011,https://dl.acm.org/doi/abs/10.1145/1970392.1970397,,,,,,4.5,n: 4.5,2,O(m sqrt(n) poly(log n))?,16.24,"n: number of pages
m: number of hyperlinks?
eps: approximation parameter",n,"(original source, assuming length of random walk is O(n))",0,Word RAM,words,#VALUE!,,,,,,,0,,1,O(sqrt(eps)),1,0,1.99,additive,yes,n/a,error from actual pagerank value,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0,1,0,Link Analysis,,,,1,0,,,,[https://link.springer.com/article/10.1007/s10115-013-0691-1  (2013)],,"Liu, Li, Cheng",Fast PageRank approximation by adaptive sampling,2013,https://link.springer.com/article/10.1007/s10115-013-0691-1,,,,,,#VALUE!,,,,,"n: number of pages
m: number of hyperlinks?",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,1,1,0,Link Analysis,,,,1,0,O(n^(5/3) (log n)^(1/3) 1/eps sqrt(log(1/eps))),,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=33484ba9924606fa2131a79ad8152aa1f3c9388f  (2014)],,"Bressan, Peserico, Pretto",Approximating PageRank locally with sublinear query complexity,2014,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=33484ba9924606fa2131a79ad8152aa1f3c9388f,,,,,,4.66,n: 4.66,3,O(n^(5/3) (log n)^(1/3) 1/eps sqrt(log(1/eps))),16.5,"n: number of pages
m: number of hyperlinks?
eps: approximation parameter",n,"(original source, multiplied by number of vertices)",0,Link Server,words,#VALUE!,,,,,,,1,Monte Carlo,1,1+eps,1,2,0,multiplicative,yes,FPRAS,error factor from actual pagerank value,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,1,0,Link Analysis,,,,1,0,,,,[https://arxiv.org/abs/1502.04281  (2015)],,"Mitliagkas, Borokhovich, Dimakis, Caramanis",FrogWild! -- Fast PageRank Approximations on Graph Engines,2015,https://arxiv.org/abs/1502.04281,,,,,,#VALUE!,,,,,"n: number of pages
m: number of hyperlinks?",n,,,BSP?,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,1,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
115,SLAM Algorithms,0.001,1,0,SLAM Algorithms,905,,0,1,0,O(n^3),"don't think ""avg case distribution"" makes sense here",(none),[http://ais.informatik.uni-freiburg.de/teaching/ss12/robotics/slides/12-slam.pdf EKF SLAM (1998)],EKF SLAM,"Burgard, Stachniss, Arras, Bennewitz",SLAM: Simultaneous Localization and Mapping,1998,http://ais.informatik.uni-freiburg.de/teaching/ss12/robotics/slides/12-slam.pdf,,,,1,0,6,n: 6,3,$O(n^3)$,,n: number of dimensions in state space,n,,,Real RAM?,words?,5,n: 5,O(n^2)?,(can be easily derived? it's mostly square matrices here),1,0,,0,,1,,,,,,,,,0,0,,0,0,"https://www.researchgate.net/figure/Computational-Complexity-of-Different-Forms-of-Unscented-Kalman-Filter_tbl1_220398698

https://www.researchgate.net/publication/283824088_Computational_cost_analysis_of_extended_Kalman_filter_in_simultaneous_localization_and_mapping_EKF-SLAM_problem_for_autonomous_vehicle

https://www.researchgate.net/figure/Computational-Complexity-of-Different-Forms-of-Unscented-Kalman-Filter_tbl1_220398698",,,,,,,,,,,1000000000,1,,1E+18,1,,1E+27,1,,3,,,Robotics
115,SLAM Algorithms,0.001,1,0,SLAM Algorithms,906,,0,1,0,O(n^3),^see above,(none),[https://www.seas.harvard.edu/courses/cs281/papers/unscented.pdf UKF (2000)],UKF,"Wan, van der Merwe",The Unscented Kalman Filter for Nonlinear Estimation,2000,https://www.seas.harvard.edu/courses/cs281/papers/unscented.pdf,,,,0,0,6,n: 6,3,$O(n^3)$,,n: number of dimensions in state space,n,,,Real RAM?,words?,5,n: 5,O(n^2)?,(can be easily derived? it's mostly square matrices here),1,0,,0,,1,,,,,,,,,0,0,,0,0,(see above),,,,,,,,,,,1000000000,,,,,,,,,3,,,Robotics
115,SLAM Algorithms,0.001,1,0,SLAM Algorithms,907,,0,1,0,O(n^3),^see above,(none),[https://ieeexplore.ieee.org/document/938382 Compressed Extended KF (2002)],Compressed Extended KF,"Guivant, Nebot",Optimization of the simultaneous localization and map-building algorithm for real-time implementation,2002,https://ieeexplore.ieee.org/document/938382,,,,0,0,6,n: 6,3,$O(n^3)$,,n: number of dimensions in state space,n,,,Real RAM?,words?,5,n: 5,O(n^2)?,(can be easily derived? it's mostly square matrices here),1,0,,0,,1,,,,,,,,,0,0,,0,0,(see above),,,,,,,,,,,1000000000,,,,,,,,,3,,,Robotics
115,SLAM Algorithms,0.001,1,0,SLAM Algorithms,909,,0,1,0,O(n^2),^see above,(none),[https://papers.nips.cc/paper/1716-bayesian-map-learning-in-dynamic-environments.pdf Rao-Blackwellized Particle Filtering SLAM (2001)],Rao-Blackwellized Particle Filtering SLAM,Murphy,Bayesian Map Learning in Dynamic Environments,2001,https://papers.nips.cc/paper/1716-bayesian-map-learning-in-dynamic-environments.pdf,,,,1,3->4,5,n: 5,3,$O(n^2)$,,n: number of dimensions in state space,n,,,Real RAM?,words?,3,n: 3,O(n)?,(based on Section 4 of the paper?),0,1,,0,,1,,,,,,,,,0,0,,0,0,(see above),,,,,,,,,,,1000000,1,,1000000000000,1000000,,1E+18,1000000000,,3,,,Robotics
115,SLAM Algorithms,0.001,1,0,SLAM Algorithms,908,,0,1,0,O(m*log n) per iteration,^see above,(none),[http://robots.stanford.edu/papers/montemerlo.fastslam-tr.pdf FastSlam (2003)],FastSlam,"Montemerlo, Thrun, Koller, Wegbreit",FastSLAM: A Factored Solution to the Simultaneous Localization and Mapping Problem,2003,http://robots.stanford.edu/papers/montemerlo.fastslam-tr.pdf,,,,0,0,2,"m: 3,
n: 2",3,O(m*\log n) per iteration,,"n: number of dimensions in state space
m: number of particles in particle filter",n,http://robots.stanford.edu/papers/montemerlo.fastslam-tr.pdf,0,Real RAM?,words?,3,"m: 3,
n: 3",O(mn)?,Stores and updates a balanced binary tree of n elements/dimensions per particle,1,0,,0,,1,,,,,,,,,0,0,,0,0,(see above),,,,,,,,,,,1000000000,,,,,,,,,3,,,Robotics
115,SLAM Algorithms,0.001,1,0,SLAM Algorithms,910,,0,1,0,O(n^2),^see above,(none),[http://ingmec.ual.es/~jlblanco/papers/blanco2013rba.pdf srba (2002)],srba,"Blanco, Gonzalez-Jimenez, Fernandez-Madrigal",Sparser Relative Bundle Adjustment (SRBA): constant-time maintenance and local optimization of arbitrarily large maps,2002,http://ingmec.ual.es/~jlblanco/papers/blanco2013rba.pdf,,,,0,0,5,n: 5,3,O(n^2),20,n: number of dimensions in state space,n,,,Real RAM?,words?,5,n: 5,O(n^2)?,"Seems to store a constant number of O(n)*O(n)-sized matrices and O(n)*O(n)-sized tables (see section II, part C)",1,0,,0,,1,,,,,,,,,0,0,,0,0,(see above),,,,,,,,,,,1000000,,,,,,,,,3,,,Robotics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O(m),,,"[https://dl.acm.org/doi/pdf/10.1145/321958.321975 Sahni, Gonzales (1976)]","Sahni, Gonzales","Sahni, Gonzales",P-Complete Approximation Problems,1976,https://dl.acm.org/doi/pdf/10.1145/321958.321975,,,,0,0,5,n: 5,3,O(m),10,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,3,m: 3,O(m)?,Keep track of current state of graph,1,0,,0,,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O(mn)?,,,[https://www.sciencedirect.com/science/article/pii/0012365X81900236 Vitanyi (1981)],Vitanyi,Vitanyi,How well can a graph be n-colored?,1981,https://www.sciencedirect.com/science/article/pii/0012365X81900236,,,,0,0,6,"m: 3,
n: 6",3,O(mn)?,20,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,,,,,,,,0,,1,0.5 + 2/m,2,2.99,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O(n^3),,,"[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/0EFEDEE0685B0400DB842027DBFC67C1/S0008414X00026687a.pdf/a-polynomial-algorithm-for-constructing-a-large-bipartite-subgraph-with-an-application-to-a-satisfiability-problem.pdf Poljak, Turzik (1982)]","Poljak, Turzik","Poljak, Turzik","A Polynomial Algorithm for Constructing a Large Bipartite Subgraph, with an Application to a Satisfiability Problem",1982,https://www.cambridge.org/core/services/aop-cambridge-core/content/view/0EFEDEE0685B0400DB842027DBFC67C1/S0008414X00026687a.pdf/a-polynomial-algorithm-for-constructing-a-large-bipartite-subgraph-with-an-application-to-a-satisfiability-problem.pdf,,,,0,0,6,n: 6,3,O(n^3),30,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,,,,,,,,0,,1,0.5 + (n-1)/(4m),2,2.99,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O(m log m + n log n),,,"[https://ieeexplore.ieee.org/document/67327 Haglin, Venkatesan (1991)]","Haglin, Venkatesan","Haglin, Venkatesan",Approximation and intractability results for the maximum cut problem and its variants,1991,https://ieeexplore.ieee.org/document/67327,,,,0,0,4,n: 4,3,O(m log m + n log n),11,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,,,,,,,,0,,1,0.5 + 1/(2n),2,2.99,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O((m log m + n log n)/p + (log p)(log n)),,,"[https://ieeexplore.ieee.org/document/67327 Haglin, Venkatesan [parallel] (1991)]","Haglin, Venkatesan [parallel]","Haglin, Venkatesan",Approximation and intractability results for the maximum cut problem and its variants,1991,https://ieeexplore.ieee.org/document/67327,,,,0,0,4,n: 4,3,O((m log m + n log n)/p + (log p)(log n)),11,"n: number of vertices
m: number of edges
p: number of processors (between 1 and n+m)",n,,0,EREW PRAM?,words,,,,,,,,0,,1,0.5 + 1/(2n),2,2.99,0,multiplicative,no,n/a,factor off from optimal max cut,0,1,p,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O(m+n),,,"[https://link.springer.com/chapter/10.1007/BFb0049405 Cho, Raje, Sarrafzadeh (1994)]","Cho, Raje, Sarrafzadeh","Cho, Raje, Sarrafzadeh",Approximation algorithm on multi-way maxcut partitioning,1994,https://link.springer.com/chapter/10.1007/BFb0049405,,,,0,0,5,n: 5,3,O(m+n),10,"n: number of vertices
m: number of edges",n,,0,Word RAM,words,,,,,,,,0,,1,0.5 + 1/(2n),2,2.99,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",913,,,1,0,O(n)?,,,[https://rajsain.files.wordpress.com/2013/11/randomized-algorithms-motwani-and-raghavan.pdf Motwani & Raghavan (1995)],Motwani & Raghavan,"Motwani, Raghavan",Randomized Algorithms,1995,https://rajsain.files.wordpress.com/2013/11/randomized-algorithms-motwani-and-raghavan.pdf,,,,0,0,3,n: 3,3,O(n)?,10,"n: number of vertices
m: number of edges",n,,1,Word RAM,words,3,n: 3,O(n),Keeps track of current coloring/random assignment,1,0,,1,Monte Carlo,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,O(n+m),,,"[https://link.springer.com/chapter/10.1007/3-540-60922-9_36 Hofmeister, Lefmann (1995)]","Hofmeister, Lefmann","Hofmeister, Lefmann",A combinatorial design approach to MAXCUT,1995,https://link.springer.com/chapter/10.1007/3-540-60922-9_36,,,,0,0,5,n: 5,3,O(n+m),10,"n: number of vertices
m: number of edges
Delta: max vertex degree",n,,0,Word RAM,words,,,,,,,,0,,1,0.5(1 + 1/Delta),2,2.99,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",916,,,1,0,O(n^3 \log m),,,"[https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf Goemans, Williamson (1995)]","Goemans, Williamson","Goemans, Williamson",Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming,1995,https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf,,,,1,1->2,6.01,n: 6.01,3,O(n^3 \log m),31,"n: number of vertices
m: number of edges",n,,1,Word RAM,words,5,n: 5,O(n^2)?,Each vertex keeps track of O(V)-sized vector,1,0,,1,Monte Carlo?,1,~0.878,2,2.239,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,https://link.springer.com/content/pdf/10.1007/978-3-642-58412-1.pdf?pdf=button,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.878,2,2.239,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",914,,,1,0,O(mn)?,,,[http://lib.ysu.am/open_books/413311.pdf Mitzenmacher & Upfal (2005)],Mitzenmacher & Upfal,"Mitzenmacher, Upfal",Probability and Computing: Randomization and Probabilistic Techniques in Algorithms and Data Analysis,2005,http://lib.ysu.am/open_books/413311.pdf,,,,0,0,6,"m: 3,
n: 6",3,O(mn)?,20,"n: number of vertices
m: number of edges",n,,1,Word RAM,words,3,n: 3,O(n),Keeps track of current coloring/assignment,1,0,,0,,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,1,"Maximum Cut, Approximate",915,,,1,0,O(n^2)?,,,"[https://doc.lagout.org/science/0_Computer%20Science/2_Algorithms/Handbook%20of%20Approximation%20Algorithms%20and%20Metaheuristics%20%5BGonzalez%202007-01-05%5D.pdf Khuller; Raghavachari & Young, ""Greedy Methods"" (2007)]","Khuller; Raghavachari & Young, ""Greedy Methods""","Khuller, Raghavachari, Young",Greedy Methods,2007,https://doc.lagout.org/science/0_Computer%20Science/2_Algorithms/Handbook%20of%20Approximation%20Algorithms%20and%20Metaheuristics%20%5BGonzalez%202007-01-05%5D.pdf,,,,1,2->3,5,n: 5,3,O(n^2)?,20,"n: number of vertices
m: number of edges",n,,1,Word RAM,words,3,n: 3,O(n),Keeps track of current coloring/assignment,1,0,,0,,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal max cut,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,0.001,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://www.sciencedirect.com/science/article/pii/002200009190023X Papadimitriou, Yannakakis (1991)]","Papadimitriou, Yannakakis","Papadimitriou, Yannakakis","Optimization, approximation, and complexity classes",1991,https://www.sciencedirect.com/science/article/pii/002200009190023X,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,0.25,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,0,"Maximum Directed Cut, Approximate",,,,1,0,O(n^3 \log n)?,,,"[https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf Goemans, Williamson (1995)]","Goemans, Williamson","Goemans, Williamson",Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming,1995,https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf,,,,,,6.01,n: 6.01,3,O(n^3 \log n)?,31,"n: number of vertices
m: number of edges",n,,1,Word RAM,words,5,n: 5,O(n^2)?,Size of associated LP,1,0,,1,Monte Carlo?,1,~0.79607,2,2.257,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://math.mit.edu/~goemans/PAPERS/preprint-feige.pdf Feige, Goemans (1995)]","Feige, Goemans","Feige, Goemans","Approximating the Value of Two Prover Proof Systems, With Applications to MAX 2SAT and MAX DICUT",1995,https://math.mit.edu/~goemans/PAPERS/preprint-feige.pdf,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.859387,2,2.164,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44666-4_17,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.79607,2,2.257,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,0.001,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,[http://www.math.tau.ac.il/~zwick/my-online-papers.html Zwick (2001)],Zwick,Zwick,Analyzing the MAX 2-SAT and MAX DI-CUT approximation algorithms of Feige and Goemans,2001,http://www.math.tau.ac.il/~zwick/my-online-papers.html,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.859643,2,2.164,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44666-4_17,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/chapter/10.1007/3-540-44666-4_17 Matuura, Matsui (2001)]","Matuura, Matsui","Matuura, Matsui",0.863-Approximation Algorithm for MAX DICUT,2001,https://link.springer.com/chapter/10.1007/3-540-44666-4_17,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.863,2,2.159,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/chapter/10.1007/3-540-47867-1_6 Lewin, Livnat, Zwick (2002)]","Lewin, Livnat, Zwick","Lewin, Livnat, Zwick",Improved Rounding Techniques for the MAX 2-SAT and MAX DI-CUT Problems,2002,https://link.springer.com/chapter/10.1007/3-540-47867-1_6,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.87401,2,2.145,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://arxiv.org/abs/2212.11191,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,1,0,"Maximum Directed Cut, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://arxiv.org/abs/2212.11191 Brakensiek, Huang, Potechin, Zwick (2022)]","Brakensiek, Huang, Potechin, Zwick","Brakensiek, Huang, Potechin, Zwick","Separating MAX 2-AND, MAX DI-CUT and MAX CUT",2022,https://arxiv.org/abs/2212.11191,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.87446,2,2.144,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Approximate",,,,1,0,O(m),,,"[https://dl.acm.org/doi/pdf/10.1145/321958.321975 Sahni, Gonzales (1976)]","Sahni, Gonzales","Sahni, Gonzales",P-Complete Approximation Problems ,1976,https://dl.acm.org/doi/pdf/10.1145/321958.321975,,,,0,0,5,"m: 3,
n: 5",3,O(m),,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,3,m: 3,O(m)?,Keep track of current state of graph,1,0,,0,,1,1 - 1/k,1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Unweighted, Approximate",,,,1,0,O(mnk)?,,,[https://www.sciencedirect.com/science/article/pii/0012365X81900236 Vitanyi (1981)],Vitanyi,Vitanyi,How well can a graph be n-colored?,1981,https://www.sciencedirect.com/science/article/pii/0012365X81900236,,,,0,0,7,"m: 5,
n: 7",3,O(mnk)?,,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,,,,,,,,0,,1,1 - 1/k + 2/m,1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Unweighted, Approximate",,,,1,0,O(m+n),,,"[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/B3B63AF129B4120F40020BB0E459FF57/S0963548300000596a.pdf/lineartime_approximation_algorithms_for_the_max_cut_problem.pdf Ngoc, Tuza (1993)]","Ngoc, Tuza","Ngoc, Tuza",Linear-Time Approximation Algorithms for the Max Cut Problem,1993,https://www.cambridge.org/core/services/aop-cambridge-core/content/view/B3B63AF129B4120F40020BB0E459FF57/S0963548300000596a.pdf/lineartime_approximation_algorithms_for_the_max_cut_problem.pdf,,,,0,0,5,"m: 3,
n: 5",3,O(m+n),,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,,,,,,,,0,,1,1 - 1/k + (n-1)/(km),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Unweighted, Approximate",,,,1,0,O(m+n log k),,,"[https://link.springer.com/chapter/10.1007/BFb0049405 Cho, Raje, Sarrafzadeh (1994)]","Cho, Raje, Sarrafzadeh","Cho, Raje, Sarrafzadeh",Approximation algorithm on multi-way maxcut partitioning,1994,https://link.springer.com/chapter/10.1007/BFb0049405,,,,0,0,5,n: 5,3,O(m+n log k),,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,,,,,,,,0,,1,1 - 1/k * (1 - 1/n)^(ceil(log_2(k))),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Unweighted, Approximate",,,,1,0,O(m+n log k),,,"[https://link.springer.com/chapter/10.1007/3-540-60922-9_36 Hofmeister, Lefmann [Theorem 8] (1995)]","Hofmeister, Lefmann [Theorem 8]","Hofmeister, Lefmann",A combinatorial design approach to MAXCUT,1995,https://link.springer.com/chapter/10.1007/3-540-60922-9_36,,,,0,0,5,n: 5,3,O(m+n log k),,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,,,,,,,,0,,1,(1 - 1/k)*n/(n-1),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Unweighted, Approximate",,,,1,0,O(mn log k),,,"[https://link.springer.com/chapter/10.1007/3-540-60922-9_36 Hofmeister, Lefmann [Theorem 9] (1995)]","Hofmeister, Lefmann [Theorem 9]","Hofmeister, Lefmann",A combinatorial design approach to MAXCUT,1995,https://link.springer.com/chapter/10.1007/3-540-60922-9_36,,,,0,0,6.01,n: 6.01,3,O(mn log k),,"n: number of vertices
m: number of edges
Delta: max vertex degree
k: number of colors/groups; must be a power of 2",n,,0,Word RAM,words,,,,,,,,0,,1,(1 - 1/k)*(1 + 1/(Delta + k - 1)),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Weighted, Approximate",,,,1,0,O((m+n)log k),,,"[https://link.springer.com/chapter/10.1007/3-540-60922-9_36 Hofmeister, Lefmann [Theorem 8] (1995)]","Hofmeister, Lefmann [Theorem 8]","Hofmeister, Lefmann",A combinatorial design approach to MAXCUT,1995,https://link.springer.com/chapter/10.1007/3-540-60922-9_36,,,,0,0,5.01,n: 5.01,3,O((m+n)log k),,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,,,,,,,,0,,1,(1 - 1/k)*n/(n-1),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://www.math.cmu.edu/~af1p/Texfiles/cuts.pdf Frieze, Jerrum (1996)]","Frieze, Jerrum","Frieze, Jerrum",Improved Approximation Algorithms for MAX k-CUT and MAX BISECTION,1996,https://www.math.cmu.edu/~af1p/Texfiles/cuts.pdf,,,,0,0,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,0,Word RAM,words,,,,,,,,1,Monte Carlo?,1,1 - 1/k + O(ln(k)/k^2),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117,Maximum Cut,1,0,0,"Maximum k-Cut, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
k: number of colors/groups",n,,,Word RAM,words,,,,,,,,0,,1,1 - 1/k + O(ln(k)/k^2),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,O(n),,,[- Random Bisection (-)],Random Bisection,,,-,-,,,,0,0,3,n: 3,3,O(n),10,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,1,Monte Carlo,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://www.math.cmu.edu/~af1p/Texfiles/cuts.pdf Frieze, Jerrum (1996)]","Frieze, Jerrum","Frieze, Jerrum",Improved Approximation Algorithms for MAX k-CUT and MAX BISECTION,1996,https://www.math.cmu.edu/~af1p/Texfiles/cuts.pdf,,,,0,0,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.651,2,2.536,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.651,2,2.537,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,[https://link.springer.com/article/10.1007/PL00011415 Ye (2001)],Ye,Ye,A .699-approximation algorithm for Max-Bisection,2001,https://link.springer.com/article/10.1007/PL00011415,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.699,2,2.431,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://onlinelibrary.wiley.com/doi/abs/10.1002/rsa.10035 Halperin, Zwick (2002)]","Halperin, Zwick","Halperin, Zwick",A unified framework for obtaining improved approximation algorithms for maximum graph bisection problems,2002,https://onlinelibrary.wiley.com/doi/abs/10.1002/rsa.10035,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.7016,2,2.426,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://www.sciencedirect.com/science/article/pii/S0196677404001580 Feige, Langberg (2006)]","Feige, Langberg","Feige, Langberg",The RPR^2 rounding technique for semidefinite programs,2006,https://www.sciencedirect.com/science/article/pii/S0196677404001580,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.7028,2,2.423,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,(Computer-Assisted),,1,0,"O(poly(n, m)) (possibly O(n^(10^100))?)",,,"[https://arxiv.org/abs/1110.1064 Raghavendra, Tan (2012)]","Raghavendra, Tan","Raghavendra, Tan",Approximating CSPs with Global Cardinality Constraints Using SDP Hierarchies,2012,https://arxiv.org/abs/1110.1064,,,,,,7,n: 7,1,"O(poly(n, m)) (possibly O(n^(10^100))?)",400,"n: number of vertices
m: number of edges",n,https://arxiv.org/abs/1205.0458,,Word RAM,words,,,,,,,,0,,1,0.85,2,2.177,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection, Weighted, Approximate",,,,1,0,"O(poly(n, m)) (possibly O(n^(10^100))?)",,,"[https://arxiv.org/abs/1205.0458 Austrin, Benabbas, Georgiou (2012)]","Austrin, Benabbas, Georgiou","Austrin, Benabbas, Georgiou",Better Balance by Being Biased: A 0.8776-Approximation for Max Bisection,2012,https://arxiv.org/abs/1205.0458,,,,,,7,n: 7,1,"O(poly(n, m)) (possibly O(n^(10^100))?)",400,"n: number of vertices
m: number of edges",n,https://arxiv.org/abs/1205.0458,,Word RAM,words,,,,,,,,0,,1,~0.8776,2,2.140,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection on Regular Graphs, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://theory.cs.uni-bonn.de/ftp/reports/cs-reports/2000/85216-CS.pdf Feige, Karpinski, Langberg (2001)]","Feige, Karpinski, Langberg","Feige, Karpinski, Langberg",A Note on Approximating MAX-BISECTION on Regular Graphs,2001,https://theory.cs.uni-bonn.de/ftp/reports/cs-reports/2000/85216-CS.pdf,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.795,2,2.258,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
117.1,Maximum Bisection,1,0,0,"Maximum Bisection on 3-Regular Graphs, Weighted, Approximate",,,,1,0,"O(poly(n, m))",,,"[https://theory.cs.uni-bonn.de/ftp/reports/cs-reports/2000/85216-CS.pdf Feige, Karpinski, Langberg (2001)]","Feige, Karpinski, Langberg","Feige, Karpinski, Langberg",A Note on Approximating MAX-BISECTION on Regular Graphs,2001,https://theory.cs.uni-bonn.de/ftp/reports/cs-reports/2000/85216-CS.pdf,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,~0.834,2,2.2,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
118,Wiener Index,1,1,1,Minimum Wiener Connector problem,918,,,1,0,O(q(m*log(n)+n*log^2(n))),,,[https://arxiv.org/abs/1504.00513 Ruchansky (2015)],Ruchansky,Ruchansky,The Minimum Wiener Connector,2015,https://arxiv.org/abs/1504.00513,1,1,https://arxiv.org/pdf/1504.00513.pdf,1,0,5.01,n: 5.01,3,O(q(m*log(n)+n*log^2(n))),22,"n: number of vertices
m: number of edges
q: number of query vertices",n,,0,Word RAM,words,5,"n: 5,
q: 3,
m: 4",O(q(m+n*log(n))?,"Keeps track of $O(qm)$ shortest-path distances and $O(q*log(n))$ approximate Steiner trees, each of size $O(n)$",1,0,,0,,1,"792(1+beta)^2, which is O(1)",4,4,0,multiplicative,no,n/a,factor off from minimum wiener index,0,0,,0,0,https://en.wikipedia.org/wiki/Wiener_connector,,,,,,,,,,,Inf,1,,Inf,1,,Inf,1,,1,,,Combinatorics
118,Wiener Index,1,1,1,Minimum Wiener Connector problem,,,,1,0,O(n^(3/2)*k/eps^2),,,[https://onlinelibrary.wiley.com/doi/epdf/10.1002/rsa.20203  (2008)],,"Goldreich, Ron",Approximating average parameters of graphs,2008,https://onlinelibrary.wiley.com/doi/epdf/10.1002/rsa.20203,,,,,,5.5,n: 5.5,3,O(n^(3/2)*k/eps^2),26.5,"n: number of vertices
k: treewidth
eps: approximation error",n,https://hal.science/hal-04327333/,0,Word RAM,words,#VALUE!,,,,,,,1,Monte Carlo,1,(1+eps),1,2,0,multiplicative,yes,FPTAS,factor off from minimum wiener index,0,0,,0,0,https://hal.science/hal-04327333/,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
118,Wiener Index,1,1,1,Minimum Wiener Connector problem,,,,1,0,O(nk^3 log n + sqrt(n)(log n)(k+log log n)/eps^2),,,[https://hal.science/hal-04327333/  (2023)],,"Conrado, Goharshady, Hudec, Li, Motwani",Faster Treewidth-based Approximations for Wiener Index,2023,https://hal.science/hal-04327333/,,,,,,7,n: 7,3,O(nk^3 log n + sqrt(n)(log n)(k+log log n)/eps^2),41,"n: number of vertices
k: treewidth
eps: approximation error",n,https://hal.science/hal-04327333/,0,Word RAM,words,#VALUE!,,,,,,,1,Monte Carlo,1,(1+eps),1,2,0,multiplicative,yes,FPTAS,factor off from minimum wiener index,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
119,Determinant of Matrices with Integer Entries,1,1,0,Approximate Log-Determinant of Sparse Positive-Definite Matrices,,,,1,0,O((n^2 log n)/eps)?,,,[https://www.sciencedirect.com/science/article/pii/S002437959710009X  (1999)],,"Barry, Pace",Monte Carlo estimates of the log determinant of large sparse matrices,1999,https://www.sciencedirect.com/science/article/pii/S002437959710009X,,,,,,4,n^2: 4,3,O((n^2 log n)/eps)?,21,"n: dimension of matrix
eps: approximation error",n^2,https://www.sciencedirect.com/science/article/pii/S002437959710009X,0,Word RAM,words,#VALUE!,,O(n)?,https://www.sciencedirect.com/science/article/pii/S002437959710009X,0,1,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,additive error from log-determinant,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
119,Determinant of Matrices with Integer Entries,0.001,1,0,Approximate Log-Determinant of Sparse Symmetric Positive-Definite Matrices,,,,1,0,,,,[https://epubs.siam.org/doi/abs/10.1137/S089547980036869X  (2002)],,Reusken,Approximation of the Determinant of Large Sparse Symmetric Positive Definite Matrices,2002,https://epubs.siam.org/doi/abs/10.1137/S089547980036869X,,,,,,,,,,,n: dimension of matrix,n^2,,,Word RAM,words,#VALUE!,,,,,,,1,Monte Carlo,1,eps,1,0,1.99,additive,yes,n/a,additive error from log-determinant,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
119,Determinant of Matrices with Integer Entries,0.001,1,0,Approximate Determinant,,,,1,0,,,,[https://arxiv.org/abs/1105.0437  (2011)],,"Ipsen, Lee",Determinant Approximations,2011,https://arxiv.org/abs/1105.0437,,,,,,,,,,,n: dimension of matrix,n^2,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
119,Determinant of Matrices with Integer Entries,0.001,1,0,Approximate Log-Determinant of Matrices,,,,1,0,O(mk/eps^2 log(k/eps) log^2(1+k^2) log(1/delta)),,,[https://proceedings.mlr.press/v37/hana15.html  (2015)],,"Han, Malioutov, Shin",Large-scale log-determinant computation through stochastic Chebyshev expansions,2015,https://proceedings.mlr.press/v37/hana15.html,,,,,,3,n^2: 3,3,O(mk/eps^2 log(k/eps) log^2(1+k^2) log(1/delta)),,"n: dimension of matrix
m: number of nonzero entries
eps: approximation error
delta: error probability
k: absolute ratio of max to min singular values",n^2,https://proceedings.mlr.press/v37/hana15.html,0,Word RAM,words,#VALUE!,,,,,,,1,Monte Carlo,1,eps*n,4,0,5.99,additive,yes,n/a,additive error from log-determinant,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
119,Determinant of Matrices with Integer Entries,1,1,0,Approximate Log-Determinant of Sparse Symmetric Positive-Definite Matrices,,,,1,0,O(m log(1/eps) log(1/delta)/(eps^2*theta)),,,"[https://www.sciencedirect.com/science/article/pii/S0024379517304147 Boutsidis, Drineas, Kambadur, Kontopoulou, Zouzias [Section 4] (2017)]","Boutsidis, Drineas, Kambadur, Kontopoulou, Zouzias [Section 4]","Boutsidis, Drineas, Kambadur, Kontopoulou, Zouzias",A randomized algorithm for approximating the log determinant of a symmetric positive definite matrix,2017,https://www.sciencedirect.com/science/article/pii/S0024379517304147,,,,,,3,n^2: 3,3,O(m log(1/eps) log(1/delta)/(eps^2*theta)),10,"n: dimension of matrix
m: number of nonzero entries
eps: approximation error
delta: error probability
theta: lower bound on eigenvalues",n^2,https://www.sciencedirect.com/science/article/pii/S0024379517304147,0,Word RAM,words,#VALUE!,,,,,,,1,Monte Carlo,1,1/(1-2*eps),1,2,0,multiplicative,yes,FPTAS?,factor off from from log-determinant,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
119,Determinant of Matrices with Integer Entries,0.001,1,0,Approximate Log-Determinant of Sparse Positive-Definite Matrices,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/S0898122117307010  (2018)],,"Peng, Wang",A general scheme for log-determinant computation of matrices via stochastic polynomial approximation,2018,https://www.sciencedirect.com/science/article/pii/S0898122117307010,,,,,,,,,,,n: dimension of matrix,n^2,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
119,Determinant of Matrices with Integer Entries,0.001,1,0,Approximate Log-Determinant of Sparse Symmetric Positive-Definite Matrices,,,,1,0,,,,[https://arxiv.org/abs/2307.02152  (2023)],,"Han, Li, Huang, Zhu",Suboptimal subspace construction for log-determinant approximation,2023,https://arxiv.org/abs/2307.02152,,,,,,,,,,,n: dimension of matrix,n^2,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,2,,,Numerical Analysis
129,Transitive Reduction Problem,0.001,0,0,Weighted Minimum Equivalent Digraph,,,,1,0,O(n^2)?,,,[https://epubs.siam.org/doi/10.1137/0210019  (1981)],,"Frederickson, JaJa",Approximation Algorithms for Several Graph Augmentation Problems,1981,https://epubs.siam.org/doi/10.1137/0210019,,,,,,5,n: 5,3,O(n^2)?,20,"n: number of vertices
m: number of edges",n,https://epubs.siam.org/doi/10.1137/0210019,0,Word RAM,words,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
129,Transitive Reduction Problem,1,0,0,Minimum Equivalent Digraph,,,,1,0,O(poly(n)),,,[https://epubs.siam.org/doi/10.1137/S0097539793256685  (1995)],,"Khuller, Raghavachari, Young",Approximating the Minimum Equivalent Digraph,1995,https://epubs.siam.org/doi/10.1137/S0097539793256685,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://epubs.siam.org/doi/10.1137/S0097539793256685,0,Word RAM,words,#VALUE!,,,,,,,0,,1,pi^2/6,2,2.645,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
129,Transitive Reduction Problem,1,0,0,Minimum Equivalent Digraph,,,,1,0,O(poly(n)),,,[https://www.sciencedirect.com/science/article/pii/0166218X9500105Z  (1996)],,"Khuller, Raghavachari, Young",On strongly connected digraphs with bounded cycle length,1996,https://www.sciencedirect.com/science/article/pii/0166218X9500105Z,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/0166218X9500105Z,0,Word RAM,words,#VALUE!,,,,,,,0,,1,pi^2/6 - 1/36,2,2.618,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
129,Transitive Reduction Problem,0.001,0,0,Minimum Equivalent Digraph,,,,1,0,O(poly(n)),,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=f41becca1a484805efce15cdf29be9292ecbc733  (2001)],,Vetta,Approximating the Minimum Strongly Connected Subgraph via a Matching Lower Bound,2001,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=f41becca1a484805efce15cdf29be9292ecbc733,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=f41becca1a484805efce15cdf29be9292ecbc733,0,Word RAM,words,#VALUE!,,,,,,,0,,1,3/2,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
129,Transitive Reduction Problem,0.001,0,0,Min TR_1,,,,1,0,O(poly(n)),,,[https://link.springer.com/article/10.1007/s00453-007-9055-0  (2007)],,"Albert, DasGupta, Dondi, Sontag",Inferring (Biological) Signal Transduction Networks via Transitive Reductions of Directed Graphs,2007,https://link.springer.com/article/10.1007/s00453-007-9055-0,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,1.78,2,2.78,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
129,Transitive Reduction Problem,1,0,0,Minimum Equivalent Digraph,,,,1,0,O(poly(n)),,,[https://link.springer.com/chapter/10.1007/978-3-642-03367-4_7  (2009)],,"Berman, DasGupta, Karpinski",Approximating Transitive Reductions for Directed Networks,2009,https://link.springer.com/chapter/10.1007/978-3-642-03367-4_7,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,1.5,2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
129,Transitive Reduction Problem,1,0,0,Max-Unused-Edges Equivalent Digraph,,,,1,0,O(poly(n)),,,[https://link.springer.com/chapter/10.1007/978-3-642-03367-4_7  (2009)],,"Berman, DasGupta, Karpinski",Approximating Transitive Reductions for Directed Networks,2009,https://link.springer.com/chapter/10.1007/978-3-642-03367-4_7,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
130,Change-Making Problem,0.001,1,0,Change-Making Problem,962,,,1,0,O(n log n),,,[https://www.ncbi.nlm.nih.gov/pubmed/24626234 Probabilistic Convolution Tree (2014)],Probabilistic Convolution Tree,Serang,The probabilistic convolution tree: efficient exact Bayesian inference for faster LC-MS/MS protein inference,2014,https://www.ncbi.nlm.nih.gov/pubmed/24626234,,,,0,0,4,n: 4,3,O(n \log n),11,n: number of coins,n,,,Word RAM,words,4,n: 4,O(n log n),https://pubmed.ncbi.nlm.nih.gov/24626234/,0,1,,0,,0,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
132,n-Queens Problem,0.001,1,0,n-Queens Completion,970,,,1,0,O(n),,experimental results in paper,[https://arxiv.org/abs/1912.05935 Grigoryan (2018)],Grigoryan,Grigoryan,Linear algorithm for solution n-Queens Completion problem,2018,https://arxiv.org/abs/1912.05935,,,,1,1->6,3,"n: 3,
n^2: 2.5",3,O(n),10,"n: board of dimension n x n
k: number of queens",n^2,,,,,5,"n: 3,
n^2: 5",O(n),Derived: two control arrays of size O(n),1,0,,1,Monte Carlo (error < 0.0001 and decreases with increasing n),0,,,,,,,,,0,0,,0,0,,,,,,,,,,,,1000,,,,,,,,,1,,,Combinatorics
133,Median String Problem,1,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,O(n^4/log n)?,,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48 Folklore Algorithm (?)],Folklore Algorithm,,,?,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,6.99,n: 6.99,3,O(n^4/log n)?,39,"n: maximum of (number of strings, max length of one of the strings)",n,,1,Word RAM,words,3,n: 3,O(n),Derived: space complexity of Masek-Patterson algorithm (for computing edit distance); requires storing edit distances from a specific string to all the other strings),1,0,,0,,1,2 - 1/(n+1),2,2.99,0,multiplicative,no,n/a,factor off from minimum distance,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[  (1997)],,"Casacuberta, De Antonio",A greedy algorithm for computing approximate median strings,1997,,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,"[https://scholar.googleusercontent.com/scholar?q=cache:uU39qTWLmKoJ:scholar.google.com/+F.+Kruzslicz.++Improved+greedy+algorithm+for+com-puting+approximate+median+strings&hl=en&as_sdt=0,22  (1999)]",,Kruzslicz,Improved greedy algorithm for computing approximate median strings,1999,"https://scholar.googleusercontent.com/scholar?q=cache:uU39qTWLmKoJ:scholar.google.com/+F.+Kruzslicz.++Improved+greedy+algorithm+for+com-puting+approximate+median+strings&hl=en&as_sdt=0,22",,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=837dfa7512fd4d8073238f151801f148f850393e  (2000)],,"Fischer, Zell",String averages and self-organizing maps for strings,2000,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=837dfa7512fd4d8073238f151801f148f850393e,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://link.springer.com/chapter/10.1007/978-3-540-69507-3_37  (2007)],,"Pedreira, Brisaboa",Spatial Selection of Sparse Pivots for Similarity Search in Metric Spaces,2007,https://link.springer.com/chapter/10.1007/978-3-540-69507-3_37,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/S0167865513003504  (2014)],,"Abreu, Rico-Juan",A new iterative algorithm for computing a quality approximate median of strings based on edit operations,2014,https://www.sciencedirect.com/science/article/pii/S0167865513003504,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://www.scitepress.org/papers/2016/56664/56664.pdf  (2016)],,"Hayashida, Koyano",Integer Linear Programming Approach to Median and Center Strings for a Probability Distribution on a Set of Strings,2016,https://www.scitepress.org/papers/2016/56664/56664.pdf,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://arxiv.org/abs/1912.02217  (2019)],,"Mirabal, Abreu, Seco",Assessing the best edit in perturbation-based iterative refinement algorithms to compute the median string,2019,https://arxiv.org/abs/1912.02217,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/8966441  (2019)],,"Mirabal, Abreu, Pedreira",Pivot Selection for Median String Problem,2019,https://ieeexplore.ieee.org/abstract/document/8966441,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,1,0,Median String Problem with Unbounded Alphabets,,,,1,0,,,,[https://ieeexplore.ieee.org/abstract/document/9281215  (2020)],,"Mirabal, Abreu, Seco, Pedreira, Chavez",New initialization for algorithms to solve Median String Problem,2020,https://ieeexplore.ieee.org/abstract/document/9281215,,,,,,,,,,,"n: maximum of (number of strings, max length of one of the strings)",n,,,Word RAM,words,#VALUE!,,,,,,,0,,1,,,,,,,,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
133,Median String Problem,0.001,0,0,"Median String Problem with Unbounded Alphabets, Ulam Metric",,,,1,0,O(n^3 log n),,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48  (2021)],,"Chakraborty, Das, Krauthgamer",Approximating the Median under the Ulam Metric,2021,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,,,,,,6.01,n: 6.01,3,O(n^3 log n),31,"n: maximum of (number of strings, max length of one of the strings)
delta: (log^2(643/640))/(2^21*10^6*log^2(80/3)), approximately 9.673*10^(-19)",n,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.48,0,Word RAM,words,#VALUE!,,,,,,,0,,1,2 - delta,2,2.99,0,multiplicative,no,n/a,factor off from minimum distance,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
137,Integral Equations,0,1,0,Fredholm Equations,,,,,,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0165011419300168  (2021)],,,Classical approximation for fuzzy Fredholm integral equation,2021,https://www.sciencedirect.com/science/article/abs/pii/S0165011419300168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0,1,0,Volterra Equations,,,,,,,,,[https://iopscience.iop.org/article/10.1088/0266-5611/19/1/302/pdf  (2003)],,,A recursive algorithm for the approximate solution of Volterra integral equations of the first kind of convolution type,2003,https://iopscience.iop.org/article/10.1088/0266-5611/19/1/302/pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,1,0,Volterra Equations,,,,1,0,O(pn^2),,,[https://link.springer.com/article/10.1007/s11075-009-9297-9 Operational Tau method (2009)],Operational Tau method,"Ghoreishi, Hadizadeh",Numerical computation of the Tau approximation for the Volterra-Hammerstein integral equations,2009,https://link.springer.com/article/10.1007/s11075-009-9297-9,,,,,,5,"n: 5
p: 3",3,O(pn^2),,"n: number of sample points
p: degree of approximation",n,,0,Word RAM,words,5,"n: 5 
p: 3",O(pn^2),,0,1,0,0,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,1,0,Volterra Equations,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/0168927492900189 Collocation method (1992)],Collocation method,Brunner,Implicitly linear collocation methods for nonlinear Volterra equations,1992,https://www.sciencedirect.com/science/article/pii/0168927492900189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,1,0,Volterra Equations,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/S0377042796000982 Chebyshev spectral method (1996)],Chebyshev spectral method,"Elnagar, Kazemi",Chebyshev spectral solution of nonlinear Volterra-Hammerstein integral equations,1996,https://www.sciencedirect.com/science/article/pii/S0377042796000982,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0,1,0,Volterra-Fredholm Equations,,,,1,0,,,,[https://www.sciencedirect.com/science/article/abs/pii/S009630030000165X Taylor method (2002)],Taylor method,Yalcinabas,Taylor polynomial solutions of nonlinear Volterra–Fredholm integral equations,2002,https://www.sciencedirect.com/science/article/abs/pii/S009630030000165X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0,1,0,Fredholm Equations,,,,1,0,,,,[https://www.sciencedirect.com/science/article/abs/pii/S0096300304006186  (2005)],,,Numerical solution of the system of Fredholm integro-differential equations by the Tau method,2005,https://www.sciencedirect.com/science/article/abs/pii/S0096300304006186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,1,0,Volterra-Fredholm Equations,,,,1,0,,,,[https://www.sciencedirect.com/science/article/pii/S0377042716303004  (2016)],,"Gouyandeh, Allahviranloo, Armand",Numerical solution of nonlinear Volterra–Fredholm–Hammerstein integral equations via Tau-collocation method with convergence analysis,2016,https://www.sciencedirect.com/science/article/pii/S0377042716303004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0,1,0,Volterra-Fredholm Equations,,,,1,0,,,,[https://www.researchgate.net/profile/Yadollah-Ordokhani/publication/332303511_Numerical_Solution_of_Volterra-Fredholm-Hammerstein_Integral_Equations_by_the_Tau_Method_with_the_Bernstein_Multi-scaling_Functions/links/5ea8075d458515ca49f29fda/Numerical-Solution-of-Volterra-Fredholm-Hammerstein-Integral-Equations-by-the-Tau-Method-with-the-Bernstein-Multi-scaling-Functions.pdf  (2015)],,,Numerical Solution of Volterra-Fredholm-Hammerstein Integral Equations by the Tau Method with the Bernstein Multi-scaling Functions,2015,https://www.researchgate.net/profile/Yadollah-Ordokhani/publication/332303511_Numerical_Solution_of_Volterra-Fredholm-Hammerstein_Integral_Equations_by_the_Tau_Method_with_the_Bernstein_Multi-scaling_Functions/links/5ea8075d458515ca49f29fda/Numerical-Solution-of-Volterra-Fredholm-Hammerstein-Integral-Equations-by-the-Tau-Method-with-the-Bernstein-Multi-scaling-Functions.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
145,Interval Scheduling,1,0,0,Job Interval Scheduling Problem-k,,,,1,0,"O(poly(n, k))",,,[https://link.springer.com/chapter/10.1007/BFb0053973  (1998)],,Spieksma,,1998,https://link.springer.com/chapter/10.1007/BFb0053973,,,,,,7,n: 7,1,"O(poly(n, k))",400,"n: number of jobs
k: number of intervals per job",n,,,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
145,Interval Scheduling,1,0,0,"Scheduling with Profit, Release Time, and Deadline; Maximize Throughput",,,,1,0,O(kn^2/eps),,,[https://link.springer.com/article/10.1023/A:1009822211065  (2000)],,"Berman, DasGupta",Multi-phase Algorithms for Throughput Maximization for Real-Time Scheduling,2000,https://link.springer.com/article/10.1023/A:1009822211065,,,,,,6,n: 6,3,O(kn^2/eps),30,"n: number of tasks (intervals)
k: number of machines (resources)
eps: approximation parameter; 0 < eps < 1",n,https://link.springer.com/article/10.1023/A:1009822211065,0,Word RAM,words,,,,,,,,0,,1,(k+1)^k/((k+1)^k - (k+eps)^k) (lower-bounded by e/(e-1)),2,2.582,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
145,Interval Scheduling,1,0,0,Interval Scheduling with Machine Time Intervals,,,,1,0,O(poly(n)),,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=fdcd5e7e97b2ff3b89adc7e370696433ad0b3508  (2003)],,"Bhatia, Chuzhoy, Freund, Naor",Algorithmic Aspects of Bandwidth Trading,2003,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=fdcd5e7e97b2ff3b89adc7e370696433ad0b3508,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of tasks (intervals)
k: number of machines (resources)",n,,,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
145,Interval Scheduling,1,0,0,Job Interval Scheduling Problem,,,,1,0,O(poly(n)),,,[https://pubsonline.informs.org/doi/abs/10.1287/moor.1060.0218  (2006)],,"Chuzhoy, Ostrovsky, Rabani",Approximation Algorithms for the Job Interval Selection Problem and Related Scheduling Problems,2006,https://pubsonline.informs.org/doi/abs/10.1287/moor.1060.0218,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of tasks (intervals)
k: number of machines (resources)
eps: approximation parameter; 0 < eps < 1",n,,,Word RAM,words,,,,,,,,0,,1,e/(e-1) + eps,2,2.582,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
145,Interval Scheduling,0.001,0,0,"Interval Job Scheduling Problem, Non-Preemptible",,,,1,0,O(poly(n)),,,[https://link.springer.com/article/10.1007/s11241-006-8198-4 Least Earliest Completion Time First (LECF) (2006)],Least Earliest Completion Time First (LECF),"Chen, Wu, Shih",Approximation algorithms for scheduling real-time jobs with multiple feasible intervals,2006,https://link.springer.com/article/10.1007/s11241-006-8198-4,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of tasks (intervals)
k: number of machines (resources)",n,,,Word RAM,words,,,,,,,,0,,1,2,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
145,Interval Scheduling,0.001,0,0,Approximate Interval Scheduling,,,,1,0,,,,[https://arxiv.org/abs/2012.15002  (2020)],,"Compton, Mitrovic, Rubinfeld",New Partitioning Techniques and Faster Algorithms for Approximate Interval Scheduling,2020,https://arxiv.org/abs/2012.15002,,,,,,,,,,,"n: number of tasks (intervals)
k: number of machines (resources)",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
145,Interval Scheduling,1,0,0,1|r_j|sum w_j(1-U_j) with equal additive laxity,,,,1,0,"O(poly(n, 1/eps))",,,[https://link.springer.com/chapter/10.1007/978-3-030-75242-2_9  (2021)],,"Bohm, Megow, Schloter",Throughput Scheduling with Equal Additive Laxity,2021,https://link.springer.com/chapter/10.1007/978-3-030-75242-2_9,,,,,,7,n: 7,1,"O(poly(n, 1/eps))",400,"n: number of tasks (intervals)
k: number of machines (resources)
eps: approximation parameter; 0 < eps < 1",n,https://link.springer.com/chapter/10.1007/978-3-030-75242-2_9,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,FPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,5,,,Operating Systems
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O(m),,,[ Greedy (?)],Greedy,,,?,,,,,,,5,n: 5,3,O(m),,"n: number of vertices
m: number of edges
d: average degree (m/n)
Delta: max degree",n,,1,Word RAM,words,,,O(m),Derived: keep track of current graph state,1,,,0,,1,"max((d+2)/2, (Delta+2)/3)",4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/article/10.1007/BF02523693,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O(m*sqrt(n)),,,[https://www.sciencedirect.com/science/article/pii/0166218X8390080X Hochbaum (1981)],Hochbaum,Hochbaum,"Efficient bounds for the stable set, vertex cover and set packing problems",1981,https://www.sciencedirect.com/science/article/pii/0166218X8390080X,,,,,,5.5,n: 5.5,3,O(m*sqrt(n)),,"n: number of vertices
m: number of edges
d: average degree (m/n)",n,,0,Word RAM,words,,,,,,,,0,,1,(d+1)/2,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/article/10.1007/BF01994876 Boppana, Halldorsson (1992)]","Boppana, Halldorsson","Boppana, Halldorsson",Approximating maximum independent sets by excluding subgraphs,1992,https://link.springer.com/article/10.1007/BF01994876,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
k: average degree (m/n)",n,,,Word RAM,words,,,,,,,,0,,1,O(n/(log n)^2),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"for small L and indep set of size n/L+m, size of independent set approximated by L*m^(1/(L-1))",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O(n^(64/eps * Delta^(4/eps) log Delta)),,,"[https://dl.acm.org/doi/pdf/10.5555/314464.314570 Berman, Furer (1994)]","Berman, Furer","Berman, Furer",Approximating Maximum Independent Set in Bounded Degree Graphs ,1994,https://dl.acm.org/doi/pdf/10.5555/314464.314570,,,,,,8,n: 8,3,O(n^(64/eps * Delta^(4/eps) log Delta)),,"n: number of vertices
m: number of edges
Delta: max degree
eps: error parameter",n,https://link.springer.com/chapter/10.1007/3-540-58218-5_18,0,Word RAM,words,,,,,,,,0,,1,(Delta + 3.25)/5 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O(Delta^Delta * n^2),,,"[https://link.springer.com/chapter/10.1007/3-540-58218-5_18 Halldorsson, Radhakrishnan (a) (1994)]","Halldorsson, Radhakrishnan (a)","Halldorsson, Radhakrishnan",Improved approximations of independent sets in bounded-degree graphs,1994,https://link.springer.com/chapter/10.1007/3-540-58218-5_18,,,,,,8,n: 8,3,O(Delta^Delta * n^2),,"n: number of vertices
m: number of edges
Delta: max degree
eps: error parameter",n,https://link.springer.com/chapter/10.1007/3-540-58218-5_18,0,Word RAM,words,,,,,,,,0,,1,(Delta + 3)/4,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O(n^(O((1/eps)^2.6 Delta log Delta))),,,"[https://link.springer.com/chapter/10.1007/3-540-58218-5_18 Halldorsson, Radhakrishnan (a) (1994)]","Halldorsson, Radhakrishnan (a)","Halldorsson, Radhakrishnan",Improved approximations of independent sets in bounded-degree graphs,1994,https://link.springer.com/chapter/10.1007/3-540-58218-5_18,,,,,,8,n: 8,2,O(n^(O((1/eps)^2.6 Delta log Delta))),,"n: number of vertices
m: number of edges
Delta: max degree
eps: error parameter",n,https://link.springer.com/chapter/10.1007/3-540-58218-5_18,0,Word RAM,words,,,,,,,,0,,1,(Delta + 3.25)/5 + eps,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O_eps(poly(n)),,,"[https://www.cs.helsinki.fi/njc/njc1_papers/number4/paper5.pdf Halldorsson, Radhakrishnan (b) (1994)]","Halldorsson, Radhakrishnan (b)","Halldorsson, Radhakrishnan",Improved Approximations of Independent Sets in Bounded-Degree Graphs via Subgraph Removal,1994,https://www.cs.helsinki.fi/njc/njc1_papers/number4/paper5.pdf,,,,,,7,n: 7,1,O_eps(poly(n)),,"n: number of vertices
m: number of edges
Delta: max degree
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,O(Delta/(log log Delta)),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O_eps(poly(n)),,,"[https://www.cs.helsinki.fi/njc/njc1_papers/number4/paper5.pdf Halldorsson, Radhakrishnan (b) (1994)]","Halldorsson, Radhakrishnan (b)","Halldorsson, Radhakrishnan",Improved Approximations of Independent Sets in Bounded-Degree Graphs via Subgraph Removal,1994,https://www.cs.helsinki.fi/njc/njc1_papers/number4/paper5.pdf,,,,,,7,n: 7,1,O_eps(poly(n)),,"n: number of vertices
m: number of edges
Delta: max degree
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,Delta/6 * (1+o(1)),4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,Delta^(O(Delta*log(1/eps)))*n,,,[https://dl.acm.org/doi/pdf/10.5555/313651.313687 Halldorsson (1995)],Halldorsson,Halldorsson,Approximating Discrete Collections via Local Improvements ,1995,https://dl.acm.org/doi/pdf/10.5555/313651.313687,,,,,,8,n: 8,2,Delta^(O(Delta*log(1/eps)))*n,,"n: number of vertices
m: number of edges
Delta: max degree
eps: error parameter",n,https://dl.acm.org/doi/pdf/10.5555/313651.313687,0,Word RAM,words,,,,,,,,0,,1,(Delta + 7/3)/4 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,0.001,0,1,Independent Set (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/article/10.1007/BF01581168 Alon, Kahale (1998)]","Alon, Kahale","Alon, Kahale",Approximating the independence number via the ϑ-function,1998,https://link.springer.com/article/10.1007/BF01581168,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
d: average degree (m/n)",n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,O(n/(log n)^2)?,4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"for small L and indep set of size n/L+m, size of independent set approximated by m^(3/(L+1)) log m",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,0.001,0,1,Independent Set (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
d: average degree (m/n)",n,,,Word RAM,words,,,,,,,,0,,1,O(n/(log n)^2)?,4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,O(m*sqrt(n))?,,,"[https://link.springer.com/article/10.1007/BF02523693 Halldorsson, Radhakrishnan (greedy with preprocessing) (1997)]","Halldorsson, Radhakrishnan (greedy with preprocessing)","Halldorsson, Radhakrishnan",Greed is good: Approximating independent sets in sparse and bounded-degree graphs,1997,https://link.springer.com/article/10.1007/BF02523693,,,,,,5.5,n: 5.5,3,O(m*sqrt(n))?,,"n: number of vertices
m: number of edges
d: average degree (m/n)",n,,0,Word RAM,words,,,,,,,,0,,1,(2d+3)/5,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,"O(log*(n) min(poly(Delta) log(n), log(Delta)*Delta!))",,,"[https://link.springer.com/article/10.1007/BF02523693 Halldorsson, Radhakrishnan (parallel greedy) (1997)]","Halldorsson, Radhakrishnan (parallel greedy)","Halldorsson, Radhakrishnan",Greed is good: Approximating independent sets in sparse and bounded-degree graphs,1997,https://link.springer.com/article/10.1007/BF02523693,,,,,,8,n: 8,1,"O(log*(n) min(poly(Delta) log(n), log(Delta)*Delta!))",,"n: number of vertices
m: number of edges
d: average degree (m/n)
Delta: max degree",n,,0,EREW PRAM,words,,,,,,,,0,,1,(d+2)/2,4,9,0,multiplicative,no,n/a,factor off from optimal,0,1,n,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,"O(poly(n, m))",,,[https://epubs.siam.org/doi/epdf/10.1137/S0097539700381097 Halperin (2002)],Halperin,Halperin,Improved Approximation Algorithms for the Vertex Cover Problem in Graphs and Hypergraphs,2002,https://epubs.siam.org/doi/epdf/10.1137/S0097539700381097,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges
Delta: max degree",n,,,Word RAM,words,,,,,,,,0,,1,O(Delta*(log log Delta)/(log Delta)),4,8.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,1,Independent Set (Approximate),,,,1,0,"O(poly(n, m))",,,[https://epubs.siam.org/doi/pdf/10.1137/S089548010240415X Feige (2004)],Feige,Feige,Approximating Maximum Clique by Removing Subgraphs,2004,https://epubs.siam.org/doi/pdf/10.1137/S089548010240415X,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,O(n(log log n)^2/(log n)^3),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,2,0,0,Independent Set on Planar Graph (Approximate),,,,1,0,O(n^2),,,[https://projecteuclid.org/journals/illinois-journal-of-mathematics/volume-21/issue-3/Every-planar-map-is-four-colorable-Part-I-Discharging/10.1215/ijm/1256049011.full 4-coloring algorithm (1977)],4-coloring algorithm,"Appel, Haken",Every planar map is four colorable. Part I: Discharging,1977,https://projecteuclid.org/journals/illinois-journal-of-mathematics/volume-21/issue-3/Every-planar-map-is-four-colorable-Part-I-Discharging/10.1215/ijm/1256049011.full,,,,,,5,n: 5,3,O(n^2),20,"n: number of vertices
m: number of edges",n,https://dl.acm.org/doi/pdf/10.1145/237814.238005,0,Word RAM,words,,n: 3,O(n),keep track of coloring,1,0,,0,,1,0.25,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on Planar Graph (Approximate),,,,1,0,"O(n*max(log n, 2^f(n)))",,,"[https://www.cs.princeton.edu/courses/archive/fall06/cos528/handouts/appplanar.pdf Lipton, Tarjan (1977)]","Lipton, Tarjan","Lipton, Tarjan",Applications of a Planar Separator Theorem,1977,https://www.cs.princeton.edu/courses/archive/fall06/cos528/handouts/appplanar.pdf,,,,,,4,n: 4,3,"O(n*max(log n, 2^f(n)))",11,"n: number of vertices
m: number of edges
f(n): any function of n",n,https://www.cs.princeton.edu/courses/archive/fall06/cos528/handouts/appplanar.pdf,0,Word RAM,words,,,,,,,,0,,1,1 - O(1/sqrt(f(n))),1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,2,0,0,Independent Set on Planar Graph (Approximate),,,,1,0,O(n),,,[https://www.sciencedirect.com/science/article/pii/0196677481900316 5-coloring algorithm (1981)],5-coloring algorithm,"Chiba, Nishizeki, Saito",A linear 5-coloring algorithm of planar graphs,1981,https://www.sciencedirect.com/science/article/pii/0196677481900316,,,,,,3,n: 3,3,O(n),10,"n: number of vertices
m: number of edges",n,https://www.sciencedirect.com/science/article/pii/0196677481900316,0,Word RAM,words,,n: 3,O(n),keep track of coloring,1,0,,0,,1,0.2,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on Planar Graph (Approximate),,,,1,0,O(n log n),,,"[https://epubs.siam.org/doi/10.1137/0211055 Chiba, Nishizeki, Saito (1982)]","Chiba, Nishizeki, Saito","Chiba, Nishizeki, Saito",An Approximation Algorithm for the Maximum Independent Set Problem on Planar Graphs,1982,https://epubs.siam.org/doi/10.1137/0211055,,,,,,4,n: 4,3,O(n log n),11,"n: number of vertices
m: number of edges",n,https://epubs.siam.org/doi/10.1137/0211055,0,Word RAM,words,,,,,,,,0,,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,http://160592857366.free.fr/joe/ebooks/ShareData/An%20Approximation%20Algorithm%20for%20The%20Maximum%20Independent%20Set%20Problem%20on%20Planar%20Graphs.pdf,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,2,0,0,Independent Set on Planar Graph (Approximate),,,,1,0,O(8^(f(n)) * f(n) * n),,,[https://dl.acm.org/doi/10.1145/174644.174650 Baker (1994)],Baker,Baker,Approximation algorithms for NP-complete problems on planar graphs,1994,https://dl.acm.org/doi/10.1145/174644.174650,,,,,,3,n: 3,3,O(8^(f(n)) * f(n) * n),,"n: number of vertices
m: number of edges
f(n): any function of n",n,https://dl.acm.org/doi/10.1145/174644.174650,0,Word RAM,words,,,O(4^(f(n))*n),https://dl.acm.org/doi/10.1145/174644.174650,0,1,,0,,1,f(n)/(f(n)+1),1,2,0,multiplicative,yes,EPTAS?,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(n),,,[- Greedy (-)],Greedy,,,-,-,,,,,,3,n: 3,3,O(n),10,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,,1,Word RAM,words,,n: 3,O(n),Keep track of current independent set,1,0,,0,,1,k-1,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(poly(n)),,,"[https://www.sciencedirect.com/science/article/pii/S0166218X96000637 Bafna, Narayanan, Ravi (1995)]","Bafna, Narayanan, Ravi","Bafna, Narayanan, Ravi",Nonoverlapping local alignments (weighted independent sets of axis-parallel rectangles),1995,https://www.sciencedirect.com/science/article/pii/S0166218X96000637,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,,,Word RAM,words,,,,,,,,0,,1,k/2,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(poly(n)),,,"[https://pure.tue.nl/ws/files/1818190/Metis187940.pdf Bafna, Narayanan, Ravi (+Hurkens, Schrijver) (1995)]","Bafna, Narayanan, Ravi (+Hurkens, Schrijver)","Hurkens, Schrijver","On the size of systems of sets every t of which have an SDR, with an application to the worst-case ratio of heuristics for packing problems",1995,https://pure.tue.nl/ws/files/1818190/Metis187940.pdf,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,,,Word RAM,words,,,,,,,,0,,1,(k-1)/2 + o(1),4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(n^(log(1/eps)/log(k-1))),,,[https://dl.acm.org/doi/pdf/10.5555/313651.313687 Halldorsson (1995)],Halldorsson,Halldorsson,Approximating Discrete Collections via Local Improvements ,1995,https://dl.acm.org/doi/pdf/10.5555/313651.313687,,,,,,7,n: 7,3,O(n^(log(1/eps)/log(k-1))),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,https://dl.acm.org/doi/pdf/10.5555/313651.313687,0,Word RAM,words,,,,,,,,0,,1,(k-1)/2 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(n^(8 log Delta + O(1))),,,[https://dl.acm.org/doi/pdf/10.5555/313651.313687 Halldorsson (1995)],Halldorsson,Halldorsson,Approximating Discrete Collections via Local Improvements ,1995,https://dl.acm.org/doi/pdf/10.5555/313651.313687,,,,,,8,n: 8,2,O(n^(8 log Delta + O(1))),,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
Delta: max degree",n,https://dl.acm.org/doi/pdf/10.5555/313651.313687,0,Word RAM,words,,,,,,,,0,,1,(k+1)/3,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(n^(O(log n))),,,"[https://people.idsia.ch/~grandoni/Pubblicazioni/CGM13soda.pdf Cygan, Grandoni, Mastrolilli (2013)]","Cygan, Grandoni, Mastrolilli","Cygan, Grandoni, Mastrolilli",How to Sell Hyperedges: The Hypermatching Assignment Problem,2013,https://people.idsia.ch/~grandoni/Pubblicazioni/CGM13soda.pdf,,,,,,8,n: 8,2,O(n^(O(log n))),500,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,https://people.idsia.ch/~grandoni/Pubblicazioni/CGM13soda.pdf,0,Word RAM,words,,,,,,,,0,,1,k/3 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,n^(O(k)),,,"[https://arxiv.org/abs/1302.4347 Sviridenko, Ward (2013)]","Sviridenko, Ward","Sviridenko, Ward",Large Neighborhood Local Search for the Maximum Set Packing Problem,2013,https://arxiv.org/abs/1302.4347,,,,,,7,n: 7,2,n^(O(k)),,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,https://arxiv.org/pdf/1302.4347.pdf,,Word RAM,words,,,,,,,,0,,1,(k+1)/3,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,O(poly(n^2^(poly(1/eps)))),,,[https://arxiv.org/abs/1304.1424 Cygan (2013)],Cygan,Cygan,Improved approximation for 3-dimensional matching via bounded pathwidth local search,2013,https://arxiv.org/abs/1304.1424,,,,,,7,n: 7,1,O(poly(n^2^(poly(1/eps)))),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,https://en.wikipedia.org/wiki/Set_packing#Packing_sets_with_a_bounded_size,,Word RAM,words,,,,,,,,0,,1,k/3 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,"Independent Set on k-Claw-Free Graphs, Unweighted (Approximate)",,,,1,0,n^(O(k^3/eps^2)),,,"[https://link.springer.com/chapter/10.1007/978-3-319-09174-7_35 Furer, Yu (2014)]","Furer, Yu","Furer, Yu",Approximating the k-Set Packing Problem by Local Improvements,2014,https://link.springer.com/chapter/10.1007/978-3-319-09174-7_35,,,,,,7,n: 7,2,n^(O(k^3/eps^2)),,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,https://link.springer.com/chapter/10.1007/978-3-319-09174-7_35,0,Word RAM,words,,,,,,,,0,,1,k/3 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,,,1,0,O(n^2),,,[- Greedy (-)],Greedy,,,-,-,,,,,,5,n: 5,3,O(n^2),20,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,,1,Word RAM,words,,n: 3,O(n),Keep track of current independent set,1,0,,0,,1,k-1,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,Local Search,,1,0,O_eps(poly(n)),,,"[https://www.jstor.org/stable/3690563 Arkin, Hassin (1998)]","Arkin, Hassin","Arkin, Hassin",On Local Search for Weighted k-Set Packing,1998,https://www.jstor.org/stable/3690563,,,,,,7,n: 7,1,O_eps(poly(n)),,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,k-2+eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,Local Search,,1,0,O(nk^2*Delta^k),,,"[https://dl.acm.org/doi/10.5555/314500.314552 Chandra, Halldorsson (1999)]","Chandra, Halldorsson","Chandra, Halldorsson",Greedy local improvement and weighted set packing approximation,1999,https://dl.acm.org/doi/10.5555/314500.314552,,,,,,7,n: 7,3,O(nk^2*Delta^k),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
Delta: max degree",n,,,Word RAM,words,,,,,,,,0,,1,2k/3,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,Local Search,,1,0,O(n^(k+1)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),,,[https://link.springer.com/chapter/10.1007/3-540-44985-X_19 Berman (2000)],Berman,Berman,A d/2 Approximation for Maximum Weight Independent Set in d-Claw Free Graphs,2000,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,7,n: 7,3,O(n^(k+1)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,https://arxiv.org/abs/2106.03545,0,Word RAM,words,,,,,,,,0,,1,k/2 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,Local Search,,1,0,O(n^((k-1)^2+k+1)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),,,[https://arxiv.org/abs/2106.03545 Neuwohner (a) (2021)],Neuwohner (a),Neuwohner,An Improved Approximation Algorithm for the Maximum Weight Independent Set Problem in d-Claw Free Graphs,2021,https://arxiv.org/abs/2106.03545,,,,,,7,n: 7,3,O(n^((k-1)^2+k+1)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free
eps: error parameter",n,https://arxiv.org/abs/2106.03545,0,Word RAM,words,,,,,,,,0,,1,k/2 - 1/63700992 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,,,1,0,O(poly(n^(k log n)))?,,,[https://arxiv.org/abs/2106.03555 Neuwohner (b) (2021)],Neuwohner (b),Neuwohner,The Limits of Local Search for the Maximum Weight Independent Set Problem in d-Claw Free Graphs,2021,https://arxiv.org/abs/2106.03555,,,,,,8,n: 8,1,O(poly(n^(k log n)))?,,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,https://arxiv.org/abs/2106.03555,,Word RAM,words,,,,,,,,0,,1,(k-eps_k)/2 where eps_k -> 0 as k -> infty,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on k-Claw-Free Graphs (Approximate),,,,1,0,O(poly(n^k)),,,[https://arxiv.org/abs/2202.01248 Neuwohner (2022)],Neuwohner,Neuwohner,Passing the Limits of Pure Local Search for Weighted k-Set Packing,2022,https://arxiv.org/abs/2202.01248,,,,,,7,n: 7,1,O(poly(n^k)),400,"n: number of vertices
m: number of edges
k: value given such that graph is k-claw-free",n,https://arxiv.org/abs/2202.01248,,Word RAM,words,,,,,,,,0,,1,"min(0.5k-0.0002, 0.4986k+0.0208)",4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on Minor-Free Graphs (Approximate),,,,1,0,O(poly(n)),,,"[https://dl.acm.org/doi/10.1145/100216.100254 Alon, Seymour, Thomas (1990)]","Alon, Seymour, Thomas","Alon, Seymour, Thomas",A separator theorem for graphs with an excluded minor and its applications,1990,https://dl.acm.org/doi/10.1145/100216.100254,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,1 - 1/sqrt(log n),1,1,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.1,Independent Set,1,0,0,Independent Set on Minor-Free Graphs (Approximate),,,,1,0,O_eps(poly(n)),,,[https://link.springer.com/article/10.1007/s00493-003-0037-9 Grohe (2003)],Grohe,Grohe,"Local Tree-Width, Excluded Minors, and Approximation Algorithms",2003,https://link.springer.com/article/10.1007/s00493-003-0037-9,,,,,,7,n: 7,1,O_eps(poly(n)),,"n: number of vertices
m: number of edges
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,1 - eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Unit Disks,,Greedy,,1,0,O(n^2)?,,,"[https://arxiv.org/abs/math/9409226 Marathe, Breu, Hunt III, Ravi, Rosenkrantz (1994)]","Marathe, Breu, Hunt III, Ravi, Rosenkrantz","Marathe, Breu, Hunt III, Ravi, Rosenkrantz",Geometry based heuristics for unit disk graphs,1994,https://arxiv.org/abs/math/9409226,,,,,,5,n: 5,3,O(n^2)?,20,n: number of objects,n,,1,Real RAM,memory cells,,,O(n)?,"Store current independent set, along with which other objects intersect the independent set",1,0,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Arbitrary-Sized Disks,,Greedy,,1,0,O(n^2)?,,,"[https://arxiv.org/abs/math/9409226 Marathe, Breu, Hunt III, Ravi, Rosenkrantz (1994)]","Marathe, Breu, Hunt III, Ravi, Rosenkrantz","Marathe, Breu, Hunt III, Ravi, Rosenkrantz",Geometry based heuristics for unit disk graphs,1994,https://arxiv.org/abs/math/9409226,,,,,,5,n: 5,3,O(n^2)?,20,n: number of objects,n,,1,Real RAM,memory cells,,,O(n)?,"Store current independent set, along with which other objects intersect the independent set",1,0,,0,,1,5,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Maximum_disjoint_set#Fat_shapes:_constant-factor_approximations,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Unit Regular p-gons,,Greedy,,1,0,O(n^2)?,,,"[https://arxiv.org/abs/math/9409226 Marathe, Breu, Hunt III, Ravi, Rosenkrantz (1994)]","Marathe, Breu, Hunt III, Ravi, Rosenkrantz","Marathe, Breu, Hunt III, Ravi, Rosenkrantz",Geometry based heuristics for unit disk graphs,1994,https://arxiv.org/abs/math/9409226,,,,,,5,n: 5,3,O(n^2)?,20,"n: number of objects
p: number of sides of each regular polygon",n,,1,Real RAM,memory cells,,,O(n)?,"Store current independent set, along with which other objects intersect the independent set",1,0,,0,,1,ceil(18*pi/(p*sin(2pi/p))),3,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Unit Disks,,,,1,0,O(n^(O((1/eps)^2 log(1/eps)))),,,"[https://link.springer.com/chapter/10.1007/978-3-540-30559-0_18 Nieberg, Hurink, Kern (2004)]","Nieberg, Hurink, Kern","Nieberg, Hurink, Kern",A Robust PTAS for Maximum Weight Independent Sets in Unit Disk Graphs,2004,https://link.springer.com/chapter/10.1007/978-3-540-30559-0_18,,,,,,7,n: 7,2,O(n^(O((1/eps)^2 log(1/eps)))),400,"n: number of vertices
eps: error parameter",n,,1,Real RAM,memory cells,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Unit Balls,,Divide-and-Conquer,,1,0,n^(O(1/eps^d)),,,"[https://dl.acm.org/doi/10.1145/2455.214106 Hochbaum, Maass (1985)]","Hochbaum, Maass","Hochbaum, Maass",Approximation schemes for covering and packing problems in image processing and VLSI,1985,https://dl.acm.org/doi/10.1145/2455.214106,,,,,,7,n: 7,2,n^(O(1/eps^d)),,"n: number of objects
d: dimensionality of objects
eps: error parameter",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,O(n),https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,0,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,"""generalizes to any collection of fat objects of roughly the same size (i.e., when the maximum-to-minimum size ratio is bounded by a constant)""",,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Unit Hypercubes,,Divide-and-Conquer,,1,0,n^(O(1/eps^d)),,,"[https://dl.acm.org/doi/10.1145/2455.214106 Hochbaum, Maass (1985)]","Hochbaum, Maass","Hochbaum, Maass",Approximation schemes for covering and packing problems in image processing and VLSI,1985,https://dl.acm.org/doi/10.1145/2455.214106,,,,,,7,n: 7,2,n^(O(1/eps^d)),,"n: number of objects
d: dimensionality of objects
eps: error parameter",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,O(n),https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,0,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,"""generalizes to any collection of fat objects of roughly the same size (i.e., when the maximum-to-minimum size ratio is bounded by a constant)""",,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles with Unit Height,,Divide-and-Conquer,,1,0,O(n log n + n^(2k-1)),,,"[https://www.sciencedirect.com/science/article/pii/S0925772198000285 Agarwal, Van Kreveld, Suri (1998)]","Agarwal, Van Kreveld, Suri","Agarwal, Van Kreveld, Suri",Label placement by maximum independent set in rectangles,1998,https://www.sciencedirect.com/science/article/pii/S0925772198000285,,,,,,7,n: 7,3,O(n log n + n^(2k-1)),400,"n: number of objects
k: any positive integer",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,O(n^(2k-1))?,requires (2k-1)-dimensional dynamic programming table,1,0,,0,,1,1+1/k,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles with Unit Height,,,,1,0,O(n(log n+Delta^(k-1))),,,[https://www.sciencedirect.com/science/article/abs/pii/S0020019003004472 Chan (2004)],Chan,Chan,A note on maximum independent sets in rectangle intersection graphs,2004,https://www.sciencedirect.com/science/article/abs/pii/S0020019003004472,,,,,,7,n: 7,3,O(n(log n+Delta^(k-1))),400,"n: number of objects
k: any positive integer
Delta: max number of rectangles a point can be",n,https://www.sciencedirect.com/science/article/abs/pii/S0020019003004472,0,Word RAM,words,,,,,,,,0,,1,1+1/k,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,2,0,0,MDS/Independent Set for Axis-Parallel Boxes,,Divide-and-Conquer,,1,0,O(n log^(d-1) n),,,"[https://www.sciencedirect.com/science/article/pii/S0925772198000285 Agarwal, Van Kreveld, Suri (1998)]","Agarwal, Van Kreveld, Suri","Agarwal, Van Kreveld, Suri",Label placement by maximum independent set in rectangles,1998,https://www.sciencedirect.com/science/article/pii/S0925772198000285,,,,,,4,n: 4,3,O(n log^(d-1) n),15,"n: number of objects
d: dimensionality of objects",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,O(n),"Divide-and-Conquer; store recursive solutions, and reuse space across recursive sub-problems",1,0,,0,,1,O(log^(d-1) n),4,7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Boxes,,,,1,0,O(n^2),,,"[https://dl.acm.org/doi/abs/10.5555/365411.365496 Berman, DasGupta, Muthukrishnan, Ramaswami (2001)]","Berman, DasGupta, Muthukrishnan, Ramaswami","Berman, DasGupta, Muthukrishnan, Ramaswami",Improved approximation algorithms for rectangle tiling and packing,2001,https://dl.acm.org/doi/abs/10.5555/365411.365496,,,,,,5,n: 5,3,O(n^2),20,"n: number of objects
d: dimensionality of objects",n,https://dl.acm.org/doi/abs/10.5555/365411.365496,0,Word RAM,words,,,,,,,,0,,1,floor(1+log(n))^(d-1),4,7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=4c7386b7acccabdcc2a1833e2f3f6cd62e54559b,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Boxes,,,,1,0,O(n^(b^(d-1)+2)),,,"[https://dl.acm.org/doi/abs/10.5555/365411.365496 Berman, DasGupta, Muthukrishnan, Ramaswami (2001)]","Berman, DasGupta, Muthukrishnan, Ramaswami","Berman, DasGupta, Muthukrishnan, Ramaswami",Improved approximation algorithms for rectangle tiling and packing,2001,https://dl.acm.org/doi/abs/10.5555/365411.365496,,,,,,7,n: 7,3,O(n^(b^(d-1)+2)),400,"n: number of objects
d: dimensionality of objects
c: any constant ≥ 1",n,https://dl.acm.org/doi/abs/10.5555/365411.365496,0,Word RAM,words,,,,,,,,0,,1,floor(1+log(n)/log(c+1))^(d-1),4,4,0,multiplicative,yes,n/a?,factor off from optimal,0,0,,0,0,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=4c7386b7acccabdcc2a1833e2f3f6cd62e54559b,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/3-540-45753-4_19 Lewin-Eytan, Naor, Orda (2002)]","Lewin-Eytan, Naor, Orda","Lewin-Eytan, Naor, Orda",Routing and Admission Control in Networks with Advance Reservations,2002,https://link.springer.com/chapter/10.1007/3-540-45753-4_19,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of objects
Delta: max number of rectangles a point can be",n,,,Word RAM,words,,,,,,,,0,,1,4*Delta,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://webee.technion.ac.il/Sites/People/ArielOrda/Info/conf/approx02.pdf,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,,,1,0,"O(min(n(log n+Delta^(k-2)), n^(O(k/log k))))",,,[https://www.sciencedirect.com/science/article/abs/pii/S0020019003004472 Chan (2004)],Chan,Chan,A note on maximum independent sets in rectangle intersection graphs,2004,https://www.sciencedirect.com/science/article/abs/pii/S0020019003004472,,,,,,7,n: 7,2,"O(min(n(log n+Delta^(k-2)), n^(O(k/log k))))",,"n: number of objects
k: any positive integer
Delta: max number of rectangles a point can be",n,https://www.sciencedirect.com/science/article/abs/pii/S0020019003004472,0,Word RAM,words,,,,,,,,0,,1,ceil(log(n)/log(k)),2.4,6,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Boxes,,,,1,0,O(poly(n)),,,"[https://epubs.siam.org/doi/10.1137/1.9781611973068.97 Chalermsook, Chuzhoy (2009)]","Chalermsook, Chuzhoy","Chalermsook, Chuzhoy",Maximum Independent Set of Rectangles,2009,https://epubs.siam.org/doi/10.1137/1.9781611973068.97,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of objects
d: dimensionality of objects",n,,,Word RAM,words,,,,,,,,0,,1,O((log n)^(d-2)*(log log n)),4,7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,0,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,,,1,0,,,,"[https://www.sciencedirect.com/science/article/pii/S0925772111000198 Bar-Yehuda, Hermelin, Rawitz (2011)]","Bar-Yehuda, Hermelin, Rawitz","Bar-Yehuda, Hermelin, Rawitz",Minimum vertex cover in rectangle graphs,2011,https://www.sciencedirect.com/science/article/pii/S0925772111000198,,,,,,#VALUE!,,,,,"n: number of objects
k: any positive integer
Delta: max number of rectangles a point can be",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,0,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,,,1,0,,,,"[https://www.sciencedirect.com/science/article/pii/S0925772111000198 Bar-Yehuda, Hermelin, Rawitz (2011)]","Bar-Yehuda, Hermelin, Rawitz","Bar-Yehuda, Hermelin, Rawitz",Minimum vertex cover in rectangle graphs,2011,https://www.sciencedirect.com/science/article/pii/S0925772111000198,,,,,,#VALUE!,,,,,"n: number of objects
k: any positive integer
Delta: max number of rectangles a point can be",n,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Axis-Parallel Rectangles,,,,1,0,2^(O(poly(log n/eps))),,,"[https://arxiv.org/abs/1307.1774 Adamaszek, Wiese (2013)]","Adamaszek, Wiese","Adamaszek, Wiese",Approximation Schemes for Maximum Weight Independent Set of Rectangles,2013,https://arxiv.org/abs/1307.1774,,,,,,8,n: 8,2,2^(O(poly(log n/eps))),,"n: number of objects
eps: error parameter",n,https://arxiv.org/abs/1307.1774,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,(parameterized approx scheme),,1,0,k^(O(k/eps^8))*n^(O(1/eps^8)),,,"[https://arxiv.org/abs/1906.10982 Grandoni, Kratsch, Wiese (2019)]","Grandoni, Kratsch, Wiese","Grandoni, Kratsch, Wiese",Parameterized Approximation Schemes for Independent Set of Rectangles and Geometric Knapsack,2019,https://arxiv.org/abs/1906.10982,,,,,,7,n: 7,2,k^(O(k/eps^8))*n^(O(1/eps^8)),,"n: number of objects
k: arbitrary integer
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,1+eps (or declares MDS is less than k),1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,Divide-and-Conquer,,1,0,O(poly(n)),,,[https://arxiv.org/abs/2101.00326 Mitchell (preprinted version) (2021)],Mitchell (preprinted version),Mitchell,Approximating Maximum Independent Set for Rectangles in the Plane,2021,https://arxiv.org/abs/2101.00326,,,,,,7,n: 7,1,O(poly(n)),400,n: number of objects,n,https://arxiv.org/abs/2101.00326,0,Word RAM,words,,,,,,,,0,,1,10,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,DP based,,1,0,O(n^65)?,,,"[https://arxiv.org/abs/2106.00623 Galvez, Khan, Mari, Momke, Reddy, Wiese (2021)]","Galvez, Khan, Mari, Momke, Reddy, Wiese","Galvez, Khan, Mari, Momke, Reddy, Wiese",A (2+ε)-Approximation Algorithm for Maximum Independent Set of Rectangles,2021,https://arxiv.org/abs/2106.00623,,,,,,7,n: 7,3,O(n^65)?,400,n: number of objects,n,https://arxiv.org/abs/2106.00623,0,Word RAM,words,,,,,,,,0,,1,6,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,"""The overall time bound [...] is surely an over-estimate.""",,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,Divide-and-Conquer,,1,0,O(n^21),,,[https://arxiv.org/abs/2101.00326 Mitchell (2021)],Mitchell,Mitchell,Approximating Maximum Independent Set for Rectangles in the Plane,2021,https://arxiv.org/abs/2101.00326,,,,,,7,n: 7,3,O(n^21),400,n: number of objects,n,https://arxiv.org/abs/2101.00326,0,Word RAM,words,,,,,,,,0,,1,10/3?,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,"""The overall time bound [...] is surely an over-estimate.""",,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,DP based,,1,0,O(n^570)?,,,"[https://arxiv.org/abs/2106.00623 Galvez, Khan, Mari, Momke, Reddy, Wiese (2021)]","Galvez, Khan, Mari, Momke, Reddy, Wiese","Galvez, Khan, Mari, Momke, Reddy, Wiese",A (2+ε)-Approximation Algorithm for Maximum Independent Set of Rectangles,2021,https://arxiv.org/abs/2106.00623,,,,,,7,n: 7,3,O(n^570)?,400,n: number of objects,n,https://arxiv.org/abs/2106.00623,0,Word RAM,words,,,,,,,,0,,1,3,2.4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,"""The overall time bound [...] is surely an over-estimate.""",,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,DP based,,1,0,O(n^(300/eps+270))?,,,"[https://arxiv.org/abs/2106.00623 Galvez, Khan, Mari, Momke, Reddy, Wiese (2021)]","Galvez, Khan, Mari, Momke, Reddy, Wiese","Galvez, Khan, Mari, Momke, Reddy, Wiese",A (2+ε)-Approximation Algorithm for Maximum Independent Set of Rectangles,2021,https://arxiv.org/abs/2106.00623,,,,,,7,n: 7,3,O(n^(300/eps+270))?,400,"n: number of objects
eps: error parameter",n,https://arxiv.org/abs/2106.00623,,Word RAM,words,,,,,,,,0,,1,2+eps,2.4,3.01,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,"""The overall time bound [...] is surely an over-estimate.""",,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Boxes,,,,1,0,O(poly(n)),,,"[https://arxiv.org/abs/1608.00271 Chuzhoy, Ene [Corollary 2.3, inspired from Chalermsook, Chuzhoy 2009] (2016)]","Chuzhoy, Ene [Corollary 2.3, inspired from Chalermsook, Chuzhoy 2009]","Chuzhoy, Ene",On Approximating Maximum Independent Set of Rectangles,2016,https://arxiv.org/abs/1608.00271,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of objects
d: dimensionality of objects
OPT: number of objects in optimal solution",n,,,Word RAM,words,,,,,,,,0,,1,O((log n)^(d-2)*(log log OPT)),4,7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,,,1,0,n^(O(((log log n)/eps)^4)),,,"[https://arxiv.org/abs/1608.00271 Chuzhoy, Ene [Theorem 1.1] (2016)]","Chuzhoy, Ene [Theorem 1.1]","Chuzhoy, Ene",On Approximating Maximum Independent Set of Rectangles,2016,https://arxiv.org/abs/1608.00271,,,,,,8,n: 8,2,n^(O(((log log n)/eps)^4)),,"n: number of objects
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Simple Polygons (each with polylog many vertices),,,,1,0,2^(O(poly(log n/eps))),,,"[https://arxiv.org/abs/1307.4257 Adamaszek, Wiese (2014)]","Adamaszek, Wiese","Adamaszek, Wiese",A QPTAS for Maximum Weight Independent Set of Polygons with Polylogarithmically Many Vertices,2014,https://arxiv.org/abs/1307.4257,,,,,,8,n: 8,1,2^(O(poly(log n/eps))),,"n: number of objects
eps: error parameter",n,https://arxiv.org/abs/1307.4257,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Simple Polygons,,,,1,0,O(n^(poly(log n/eps))+n^(O(1))m),,,[https://arxiv.org/abs/1312.1369 Har-Peled (2014)],Har-Peled,Har-Peled,Quasi-Polynomial Time Approximation Scheme for Sparse Subsets of Polygons,2014,https://arxiv.org/abs/1312.1369,,,,,,8,n: 8,1,O(n^(poly(log n/eps))+n^(O(1))m),600,"n: number of objects
m: total complexity of polygons
eps: error parameter",n,https://arxiv.org/abs/1312.1369,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Simple Polygons,,,,1,0,2^(O(poly(log n/eps)))(m log m),,,"[https://arxiv.org/abs/1703.04758 Adamaszek, Har-Peled, Wiese (2017)]","Adamaszek, Har-Peled, Wiese","Adamaszek, Har-Peled, Wiese",Approximation Schemes for Independent Set and Sparse Subsets of Polygons,2017,https://arxiv.org/abs/1703.04758,,,,,,8,n: 8,1,2^(O(poly(log n/eps)))(m log m),,"n: number of objects
m: total number of vertices among all polygons
eps: error parameter",n,https://arxiv.org/abs/1703.04758,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Simple Polygons (with pairs intersecting O(1) times and no containment),,,,1,0,2^(O(poly(log n/eps)))poly(m),,,"[https://arxiv.org/abs/1703.04758 Adamaszek, Har-Peled, Wiese (2017)]","Adamaszek, Har-Peled, Wiese","Adamaszek, Har-Peled, Wiese",Approximation Schemes for Independent Set and Sparse Subsets of Polygons,2017,https://arxiv.org/abs/1703.04758,,,,,,8,n: 8,1,2^(O(poly(log n/eps)))poly(m),,"n: number of objects
m: total number of vertices among all polygons
eps: error parameter",n,https://arxiv.org/abs/1703.04758,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,QPTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted delta-large Axis-Parallel Rectangles,,,,1,0,n^(poly(1/(eps*delta))),,,"[https://arxiv.org/abs/1703.04758 Adamaszek, Har-Peled, Wiese (2017)]","Adamaszek, Har-Peled, Wiese","Adamaszek, Har-Peled, Wiese",Approximation Schemes for Independent Set and Sparse Subsets of Polygons,2017,https://arxiv.org/abs/1703.04758,,,,,,7,n: 7,1,n^(poly(1/(eps*delta))),,"n: number of objects
delta: largeness parameter
eps: error parameter",n,https://arxiv.org/abs/1703.04758,,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Axis-Parallel Rectangles,,,,1,0,O(n^2 poly(log n)),,,"[https://arxiv.org/abs/2007.07880 Chalermsook, Walczak (2020)]","Chalermsook, Walczak","Chalermsook, Walczak",Coloring and Maximum Weight Independent Set of Rectangles,2020,https://arxiv.org/abs/2007.07880,,,,,,5.01,n: 5.01,2.9,O(n^2 poly(log n)),25,n: number of objects,n,https://arxiv.org/abs/2007.07880,0,Word RAM,words,,,,,,,,0,,1,O(log log n),2.4,5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Fat Objects of Varying Sizes,,,,1,0,n^(O(1/eps^d)),,,"[https://epubs.siam.org/doi/10.1137/S0097539702402676 Erlebach, Jansen, Seidel (2002)]","Erlebach, Jansen, Seidel","Erlebach, Jansen, Seidel",Polynomial-Time Approximation Schemes for Geometric Intersection Graphs,2002,https://epubs.siam.org/doi/10.1137/S0097539702402676,,,,,,7,n: 7,2,n^(O(1/eps^d)),,"n: number of objects
d: dimensionality of objects
eps: error parameter",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,n^(O(1/eps^d))?,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,0,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,2,0,0,MDS/Independent Set for Fat Objects of Varying Sizes,,Shifted-quadtree-based,,1,0,n^(O(1/eps^(d-1))),,,[https://www.sciencedirect.com/science/article/pii/S0196677402002948 Chan (2003)],Chan,Chan,Polynomial-time approximation schemes for packing and piercing fat objects,2003,https://www.sciencedirect.com/science/article/pii/S0196677402002948,,,,,,7,n: 7,2,n^(O(1/eps^(d-1))),,"n: number of objects
d: dimensionality of objects
eps: error parameter",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,n^(O(1/eps^(d-1))),https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,1,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,2,0,0,MDS/Independent Set for Fat Objects of Varying Sizes,,Separator-based,,1,0,n^(O(1/eps^d)),,,[https://www.sciencedirect.com/science/article/pii/S0196677402002948 Chan (2003)],Chan,Chan,Polynomial-time approximation schemes for packing and piercing fat objects,2003,https://www.sciencedirect.com/science/article/pii/S0196677402002948,,,,,,7,n: 7,2,n^(O(1/eps^d)),,"n: number of objects
d: dimensionality of objects
eps: error parameter",n,https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,Word RAM,words,,,O(n),https://www.sciencedirect.com/science/article/pii/S0196677402002948,0,1,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Pseudo-Disks,,,,1,0,n^(O(1/eps^d)),,,"[https://arxiv.org/abs/1103.1431 Chan, Har-Peled (2011)]","Chan, Har-Peled","Chan, Har-Peled",Approximation Algorithms for Maximum Independent Set of Pseudo-Disks,2011,https://arxiv.org/abs/1103.1431,,,,,,7,n: 7,2,n^(O(1/eps^d)),,"n: number of objects
d: dimensionality of objects
eps: error parameter",n,https://arxiv.org/pdf/1103.1431.pdf,0,Word RAM,words,,,,,,,,0,,1,1+eps,1,2,0,multiplicative,yes,PTAS,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Pseudo-Disks,,,,1,0,O(n^3),,,"[https://arxiv.org/abs/1103.1431 Chan, Har-Peled (2011)]","Chan, Har-Peled","Chan, Har-Peled",Approximation Algorithms for Maximum Independent Set of Pseudo-Disks,2011,https://arxiv.org/abs/1103.1431,,,,,,6,n: 6,3,O(n^3),30,"n: number of objects
d: dimensionality of objects",n,https://arxiv.org/pdf/1103.1431.pdf,0,Word RAM,words,,,,,,,,0,,1,O(1),4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Pseudo-Disks,,,,1,0,O(poly(n)),,,"[https://arxiv.org/abs/1103.1431 Chan, Har-Peled (2011)]","Chan, Har-Peled","Chan, Har-Peled",Approximation Algorithms for Maximum Independent Set of Pseudo-Disks,2011,https://arxiv.org/abs/1103.1431,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of objects
d: dimensionality of objects",n,https://arxiv.org/pdf/1103.1431.pdf,0,Word RAM,words,,,,,,,,0,,1,O(1),4,4,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Weighted Axis-Parallel Boxes,,,,1,0,O(poly(n)),,,"[https://arxiv.org/abs/1103.1431 Chan, Har-Peled (2011)]","Chan, Har-Peled","Chan, Har-Peled",Approximation Algorithms for Maximum Independent Set of Pseudo-Disks,2011,https://arxiv.org/abs/1103.1431,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of objects
d: dimensionality of objects",n,https://arxiv.org/pdf/1103.1431.pdf,0,Word RAM,words,,,,,,,,0,,1,O((log n)^(d-1)/(log log n)),4,7,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Line Segments,,,,1,0,O(n^3),,,"[https://www.sciencedirect.com/science/article/pii/S0925772106000095 Agarwal, Mustafa (2006)]","Agarwal, Mustafa","Agarwal, Mustafa",Independent set of intersection graphs of convex objects in 2D,2006,https://www.sciencedirect.com/science/article/pii/S0925772106000095,,,,,,6,n: 6,3,O(n^3),30,"n: number of objects
alpha: MIS size",n,https://www.sciencedirect.com/science/article/pii/S0925772106000095,0,Word RAM,words,,,O(n^2)?,Size of DP table,1,0,,0,,1,O((alpha log(n/alpha))^(1/2)) (worst-case n^(1/2+o(1))),4,8.01,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Line Segments,,,,1,0,O(n^(4/3) poly(log n)),,,"[https://www.sciencedirect.com/science/article/pii/S0925772106000095 Agarwal, Mustafa (2006)]","Agarwal, Mustafa","Agarwal, Mustafa",Independent set of intersection graphs of convex objects in 2D,2006,https://www.sciencedirect.com/science/article/pii/S0925772106000095,,,,,,4.33,n: 4.33,2.9,O(n^(4/3) poly(log n)),15.41,"n: number of objects
alpha: MIS size",n,https://www.sciencedirect.com/science/article/pii/S0925772106000095,0,Word RAM,words,,,O(n^(4/3) poly(log n)),Size of data structure in paper,0,0,,0,,1,O((alpha^3 log(n/alpha))^(1/4)) (worst-case n^(3/4+o(1))),4,8.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for 2-D Convex Objects,,,,1,0,O(n^3 + tau(S)),,,"[https://www.sciencedirect.com/science/article/pii/S0925772106000095 Agarwal, Mustafa (2006)]","Agarwal, Mustafa","Agarwal, Mustafa",Independent set of intersection graphs of convex objects in 2D,2006,https://www.sciencedirect.com/science/article/pii/S0925772106000095,,,,,,7,n: 7,3,O(n^3 + tau(S)),,"n: number of objects
tau(S): preprocessing time for S
alpha: MIS size",n,https://www.sciencedirect.com/science/article/pii/S0925772106000095,0,Word RAM,words,,,,,,,,0,,1,O((alpha^2 log(n/alpha))^(1/3)) (worst-case n^(2/3+o(1))),4,8.33,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,1,0,0,MDS/Independent Set for Axis-Parallel Rectangles,,,,1,0,O(n^3),,,"[https://www.sciencedirect.com/science/article/pii/S0925772106000095 Agarwal, Mustafa (2006)]","Agarwal, Mustafa","Agarwal, Mustafa",Independent set of intersection graphs of convex objects in 2D,2006,https://www.sciencedirect.com/science/article/pii/S0925772106000095,,,,,,6,n: 6,3,O(n^3),30,"n: number of objects
beta: fraction of elements in optimal independent set",n,https://www.sciencedirect.com/science/article/pii/S0925772106000095,0,Word RAM,words,,,,,,,,0,,1,beta (worst-case O(n^(1/2))),4,8,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
160.2,Maximum Disjoint Set,0.001,0,0,MDS/Independent Set for Curves with a bounded (constant) number of intersection points,,,,1,0,n^(O((4/eps)^(2/eps))),,,"[https://epubs.siam.org/doi/10.1137/1.9781611973082.87 Fox, Pach (2011)]","Fox, Pach","Fox, Pach",Computing the Independence Number of Intersection Graphs,2011,https://epubs.siam.org/doi/10.1137/1.9781611973082.87,,,,,,7,n: 7,2,n^(O((4/eps)^(2/eps))),,"n: number of objects
eps: error parameter",n,https://epubs.siam.org/doi/10.1137/1.9781611973082.87,0,Word RAM,words,,,,,,,,0,,1,n^eps,4,7.01?,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The Set Packing Problem (Approximate),,,,1,0,O(n(p+log n)),,,[https://www.sciencedirect.com/science/article/pii/0166218X8390080X Hochbaum (1981)],Hochbaum,Hochbaum,"Efficient bounds for the stable set, vertex cover and set packing problems",1981,https://www.sciencedirect.com/science/article/pii/0166218X8390080X,,,,,,5,n: 5,3,O(n(p+log n)),20,"n: number of subsets?
p: ""max column sum of A""",n,,0,Word RAM,words,,,,,,,,0,,1,1/p,4,9?,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(nk),,,[- Reduction to Independent Set + Greedy (-)],Reduction to Independent Set + Greedy,,,-,-,,,,,,5,n: 5,3,O(nk),20,"n: number of subsets
k: upper bound on number of elements per set",n,,1,Word RAM,words,,n: 3,O(nk),Size of corresponding graph,1,0,,0,,1,k,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(poly(n)),,,"[https://www.sciencedirect.com/science/article/pii/S0166218X96000637 Bafna, Narayanan, Ravi (1995)]","Bafna, Narayanan, Ravi","Bafna, Narayanan, Ravi",Nonoverlapping local alignments (weighted independent sets of axis-parallel rectangles),1995,https://www.sciencedirect.com/science/article/pii/S0166218X96000637,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of subsets
k: upper bound on number of elements per set",n,,,Word RAM,words,,,,,,,,0,,1,(k+1)/2,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(poly(n)),,,"[https://pure.tue.nl/ws/files/1818190/Metis187940.pdf Bafna, Narayanan, Ravi (+Hurkens, Schrijver) (1995)]","Bafna, Narayanan, Ravi (+Hurkens, Schrijver)","Hurkens, Schrijver","On the size of systems of sets every t of which have an SDR, with an application to the worst-case ratio of heuristics for packing problems",1995,https://pure.tue.nl/ws/files/1818190/Metis187940.pdf,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of subsets
k: upper bound on number of elements per set",n,,,Word RAM,words,,,,,,,,0,,1,k/2 + o(1),4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(n^(log(1/eps)/log(k))),,,[https://dl.acm.org/doi/pdf/10.5555/313651.313687 Halldorsson (1995)],Halldorsson,Halldorsson,Approximating Discrete Collections via Local Improvements ,1995,https://dl.acm.org/doi/pdf/10.5555/313651.313687,,,,,,7,n: 7,3,O(n^(log(1/eps)/log(k))),400,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,https://dl.acm.org/doi/pdf/10.5555/313651.313687,0,Word RAM,words,,,,,,,,0,,1,k/2 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(n^(8 log n + O(1))),,,[https://dl.acm.org/doi/pdf/10.5555/313651.313687 Halldorsson (1995)],Halldorsson,Halldorsson,Approximating Discrete Collections via Local Improvements ,1995,https://dl.acm.org/doi/pdf/10.5555/313651.313687,,,,,,8,n: 8,2,O(n^(8 log n + O(1))),500,"n: number of subsets
k: upper bound on number of elements per set",n,https://dl.acm.org/doi/pdf/10.5555/313651.313687,0,Word RAM,words,,,,,,,,0,,1,(k+2)/3,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(n^(O(log n))),,,"[https://people.idsia.ch/~grandoni/Pubblicazioni/CGM13soda.pdf Cygan, Grandoni, Mastrolilli (2013)]","Cygan, Grandoni, Mastrolilli","Cygan, Grandoni, Mastrolilli",How to Sell Hyperedges: The Hypermatching Assignment Problem,2013,https://people.idsia.ch/~grandoni/Pubblicazioni/CGM13soda.pdf,,,,,,8,n: 8,2,O(n^(O(log n))),500,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,https://people.idsia.ch/~grandoni/Pubblicazioni/CGM13soda.pdf,0,Word RAM,words,,,,,,,,0,,1,(k+1)/3 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,n^(O(k)),,,"[https://arxiv.org/abs/1302.4347 Sviridenko, Ward (2013)]","Sviridenko, Ward","Sviridenko, Ward",Large Neighborhood Local Search for the Maximum Set Packing Problem,2013,https://arxiv.org/abs/1302.4347,,,,,,7,n: 7,2,n^(O(k)),,"n: number of subsets
k: upper bound on number of elements per set",n,https://arxiv.org/pdf/1302.4347.pdf,,Word RAM,words,,,,,,,,0,,1,(k+2)/3,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,O(poly(n^2^(poly(1/eps)))),,,[https://arxiv.org/abs/1304.1424 Cygan (2013)],Cygan,Cygan,Improved approximation for 3-dimensional matching via bounded pathwidth local search,2013,https://arxiv.org/abs/1304.1424,,,,,,7,n: 7,1,O(poly(n^2^(poly(1/eps)))),400,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,https://en.wikipedia.org/wiki/Set_packing#Packing_sets_with_a_bounded_size,,Word RAM,words,,,,,,,,0,,1,(k+1)/3 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,"The k-Set Packing Problem, Unweighted (Approximate)",,,,1,0,n^(O(k^3/eps^2)),,,"[https://link.springer.com/chapter/10.1007/978-3-319-09174-7_35 Furer, Yu (2014)]","Furer, Yu","Furer, Yu",Approximating the k-Set Packing Problem by Local Improvements,2014,https://link.springer.com/chapter/10.1007/978-3-319-09174-7_35,,,,,,7,n: 7,2,n^(O(k^3/eps^2)),,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,https://link.springer.com/chapter/10.1007/978-3-319-09174-7_35,0,Word RAM,words,,,,,,,,0,,1,(k+1)/3 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,,,1,0,O(n(n+k)),,,[- Reduction to Independent Set + Greedy (-)],Reduction to Independent Set + Greedy,,,-,-,,,,,,6,n: 6,3,O(n(n+k)),20,"n: number of subsets
k: upper bound on number of elements per set",n,,1,Word RAM,words,,n: 3,O(nk),Size of corresponding graph,1,0,,0,,1,k+1,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,Local Search,,1,0,O_eps(poly(n)),,,"[https://www.jstor.org/stable/3690563 Arkin, Hassin (1998)]","Arkin, Hassin","Arkin, Hassin",On Local Search for Weighted k-Set Packing,1998,https://www.jstor.org/stable/3690563,,,,,,7,n: 7,1,O_eps(poly(n)),,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,k-1+eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,Local Search,,1,0,O(n^(k+2)*k^2),,,"[https://dl.acm.org/doi/10.5555/314500.314552 Chandra, Halldorsson (1999)]","Chandra, Halldorsson","Chandra, Halldorsson",Greedy local improvement and weighted set packing approximation,1999,https://dl.acm.org/doi/10.5555/314500.314552,,,,,,7,n: 7,3,O(n^(k+2)*k^2),400,"n: number of subsets
k: upper bound on number of elements per set",n,,,Word RAM,words,,,,,,,,0,,1,2(k+1)/3,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,Local Search,,1,0,O(n^(k+2)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),,,[https://link.springer.com/chapter/10.1007/3-540-44985-X_19 Berman (2000)],Berman,Berman,A d/2 Approximation for Maximum Weight Independent Set in d-Claw Free Graphs,2000,https://link.springer.com/chapter/10.1007/3-540-44985-X_19,,,,,,7,n: 7,3,O(n^(k+2)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),400,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,https://arxiv.org/abs/2106.03545,0,Word RAM,words,,,,,,,,0,,1,(k+1)/2 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,Local Search,,1,0,O(n^(k^2+k+2)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),,,[https://arxiv.org/abs/2106.03545 Neuwohner (a) (2021)],Neuwohner (a),Neuwohner,An Improved Approximation Algorithm for the Maximum Weight Independent Set Problem in d-Claw Free Graphs,2021,https://arxiv.org/abs/2106.03545,,,,,,7,n: 7,3,O(n^(k^2+k+2)*(m+n)*(d-1)^2*(d/(2*eps)+1)^2),400,"n: number of subsets
k: upper bound on number of elements per set
eps: error parameter",n,https://arxiv.org/abs/2106.03545,0,Word RAM,words,,,,,,,,0,,1,(k+1)/2 - 1/63700992 + eps,4,9,0,multiplicative,yes,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,,,1,0,O(poly(n^(k log n)))?,,,[https://arxiv.org/abs/2106.03555 Neuwohner (b) (2021)],Neuwohner (b),Neuwohner,The Limits of Local Search for the Maximum Weight Independent Set Problem in d-Claw Free Graphs,2021,https://arxiv.org/abs/2106.03555,,,,,,8,n: 8,1,O(poly(n^(k log n)))?,,"n: number of subsets
k: upper bound on number of elements per set",n,https://arxiv.org/abs/2106.03555,,Word RAM,words,,,,,,,,0,,1,(k+1-eps_k)/2 where eps_k -> 0 as k -> infty,4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
161.1,The Set Packing Problem,1,0,0,The k-Set Packing Problem (Approximate),,,,1,0,O(poly(n^k)),,,[https://arxiv.org/abs/2202.01248 Neuwohner (2022)],Neuwohner,Neuwohner,Passing the Limits of Pure Local Search for Weighted k-Set Packing,2022,https://arxiv.org/abs/2202.01248,,,,,,7,n: 7,1,O(poly(n^k)),400,"n: number of subsets
k: upper bound on number of elements per set",n,https://arxiv.org/abs/2202.01248,,Word RAM,words,,,,,,,,0,,1,"min(0.5(k+1)-0.0002, 0.4986(k+1)+0.0208)",4,9,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max-2SAT,,,,1,0,O(n^3),,,"[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/0EFEDEE0685B0400DB842027DBFC67C1/S0008414X00026687a.pdf/a-polynomial-algorithm-for-constructing-a-large-bipartite-subgraph-with-an-application-to-a-satisfiability-problem.pdf Poljak, Turzik (1982)]","Poljak, Turzik","Poljak, Turzik","A Polynomial Algorithm for Constructing a Large Bipartite Subgraph, with an Application to a Satisfiability Problem",1982,https://www.cambridge.org/core/services/aop-cambridge-core/content/view/0EFEDEE0685B0400DB842027DBFC67C1/S0008414X00026687a.pdf/a-polynomial-algorithm-for-constructing-a-large-bipartite-subgraph-with-an-application-to-a-satisfiability-problem.pdf,,,,0,0,6,n: 6,3,O(n^3),30,"n: number of variables
m: number of clauses with two distinct variables
p: number of clauses with only one distinct variable",n,,0,Word RAM,words,5,n: 5,O(n^2)?,Size of associated graph,1,0,,0,,1,(0.75m+0.5p)/(m+p),2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,O(poly(n))?,,,[https://www.sciencedirect.com/science/article/pii/S0196677484710455 Yannakakis (1994)],Yannakakis,Yannakakis,On the Approximation of Maximum Satisfiability,1994,https://www.sciencedirect.com/science/article/pii/S0196677484710455,,,,,,7,n: 7,1,O(poly(n))?,400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,0.75,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,O(poly(n))?,,,"[https://math.mit.edu/~goemans/PAPERS/GoemansWilliamson-1994-NewApproximationAlgorithmsForTheMaximumSatisfiabilityProblem.pdf Goemans, Williamson [Section 3] (1994)]","Goemans, Williamson [Section 3]","Goemans, Williamson",New 3/4-Approximation Algorithms for the Maximum Satisfiability Problem,1994,https://math.mit.edu/~goemans/PAPERS/GoemansWilliamson-1994-NewApproximationAlgorithmsForTheMaximumSatisfiabilityProblem.pdf,,,,,,7,n: 7,1,O(poly(n))?,400,"n: number of variables
m: number of clauses",n,,1,Word RAM,words,,,O(nm)?,Size of associated LP,1,0,,1,Monte Carlo?,1,0.75,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,O(n^3 \log n)?,,,"[https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf Goemans, Williamson (1995)]","Goemans, Williamson","Goemans, Williamson",Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming,1995,https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf,,,,,,6.01,n: 6.01,3,O(n^3 \log n)?,31,n: number of variables,n,,1,Word RAM,words,5,n: 5,O(n^2)?,Size of associated LP,1,0,,1,Monte Carlo?,1,~0.87856,2,2.139,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,"O(poly(n, m))",,,"[https://math.mit.edu/~goemans/PAPERS/preprint-feige.pdf Feige, Goemans (1995)]","Feige, Goemans","Feige, Goemans","Approximating the Value of Two Prover Proof Systems, With Applications to MAX 2SAT and MAX DICUT ",1995,https://math.mit.edu/~goemans/PAPERS/preprint-feige.pdf,,,,,,7,n: 7,1,"O(poly(n, m))",400,n: number of variables,n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.93109,2,2.074,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=667B7A2DE14BA858D6FF7DE0B2413E24?doi=10.1.1.13.6357&rep=rep1&type=pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,O(poly(n)),,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,~0.87856,2,2.139,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,0.001,0,1,Max Weighted 2SAT,,,,1,0,O(poly(n)),,,[http://www.math.tau.ac.il/~zwick/my-online-papers.html Zwick (2001)],Zwick,Zwick,Analyzing the MAX 2-SAT and MAX DI-CUT approximation algorithms of Feige and Goemans,2001,http://www.math.tau.ac.il/~zwick/my-online-papers.html,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,~0.9310900680,2,2.074,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=667B7A2DE14BA858D6FF7DE0B2413E24?doi=10.1.1.13.6357&rep=rep1&type=pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/3-540-44666-4_17 Matuura, Matsui (2001)]","Matuura, Matsui","Matuura, Matsui",0.863-Approximation Algorithm for MAX DICUT,2001,https://link.springer.com/chapter/10.1007/3-540-44666-4_17,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,~0.935,2,2.070,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=667B7A2DE14BA858D6FF7DE0B2413E24?doi=10.1.1.13.6357&rep=rep1&type=pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,1,0,1,Max Weighted 2SAT,,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/3-540-47867-1_6 Lewin, Livnat, Zwick (2002)]","Lewin, Livnat, Zwick","Lewin, Livnat, Zwick",Improved Rounding Techniques for the MAX 2-SAT and MAX DI-CUT Problems,2002,https://link.springer.com/chapter/10.1007/3-540-47867-1_6,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,~0.940,2,2.064,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.11,Boolean 2-Satisfiability,0.001,0,0,Max Balanced 2SAT,,,,1,0,O(poly(n)),,,[https://dl.acm.org/doi/10.1145/1250790.1250818 Austrin (2007)],Austrin,Austrin,Balanced max 2-sat might not be the hardest,2007,https://dl.acm.org/doi/10.1145/1250790.1250818,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,~0.9439,2,2.060,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(m+n),,,[https://en.wikipedia.org/wiki/MAX-3SAT#Approximability Simple All-True/All-False Algorithm (?)],Simple All-True/All-False Algorithm,,,?,https://en.wikipedia.org/wiki/MAX-3SAT#Approximability,,,,,,6,n: 6,3,O(m+n),,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,n: 1,O(1),"no auxiliary space needed, just output random assignment",1,0,,0,,1,0.5,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(poly(n)),,,"[https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf Goemans, Williamson (implicit) (1995)]","Goemans, Williamson (implicit)","Goemans, Williamson",Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming,1995,https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,1,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.765,2,2.308,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://lucatrevisan.github.io/pubs/satsatfull.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(poly(n)),,,"[https://math.mit.edu/~goemans/PAPERS/preprint-feige.pdf Feige, Goemans (implicit) (1995)]","Feige, Goemans (implicit)","Feige, Goemans","Approximating the Value of Two Prover Proof Systems, With Applications to MAX 2SAT and MAX DICUT",1995,https://math.mit.edu/~goemans/PAPERS/preprint-feige.pdf,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.77,2,2.299,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://lucatrevisan.github.io/pubs/satsatfull.pdf,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/BFb0015420 Ono, Hirata, Asano (1995)]","Ono, Hirata, Asano","Ono, Hirata, Asano",An approximation algorithm for MAX 3-SAT,1995,https://link.springer.com/chapter/10.1007/BFb0015420,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,,,,,,,0,,1,~0.8,2,2.25,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(poly(n)),,,"[https://lucatrevisan.github.io/pubs/gadgets.pdf Trevisan, Sorkin, Sudan, Williamson (1996)]","Trevisan, Sorkin, Sudan, Williamson","Trevisan, Sorkin, Sudan, Williamson","Gadgets, Approximation, and Linear Programming",1996,https://lucatrevisan.github.io/pubs/gadgets.pdf,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,,,,,,,0,,1,~0.801,2,2.249,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(poly(n)),,,"[https://ieeexplore.ieee.org/document/646129 Karloff, Zwick (1997)]","Karloff, Zwick","Karloff, Zwick",A 7/8-approximation algorithm for MAX 3SAT?,1997,https://ieeexplore.ieee.org/document/646129,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,0.875,2,2.143,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://en.wikipedia.org/wiki/Karloff%E2%80%93Zwick_algorithm,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,1,Max-3SAT,,,,1,0,O(poly(n)),,,"[- Karloff, Zwick [derandomized] (2002?)]","Karloff, Zwick [derandomized]","Karloff, Zwick",,2002?,-,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,,,,,,,0,,1,0.875,2,2.143,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://dl.acm.org/doi/10.1145/509907.509996,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.12,Boolean 3-Satisfiability,1,0,0,"Max-3SAT, Satisfiable",,,,1,0,O(poly(n)),,,[https://lucatrevisan.github.io/pubs/satsatfull.pdf Trevisan (1997)],Trevisan,Trevisan,Approximating Satisfiable Satisfiability Problems,1997,https://lucatrevisan.github.io/pubs/satsatfull.pdf,,,,,,7,n: 7,1,O(poly(n)),400,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,,,,,,,0,,1,~0.826,2,2.211,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Ek SAT,,,,1,0,O(m+n),,,[https://en.wikipedia.org/wiki/MAXEkSAT#Approximation_Algorithm Simple Random Assignment Algorithm (?)],Simple Random Assignment Algorithm,,,?,https://en.wikipedia.org/wiki/MAXEkSAT#Approximation_Algorithm,,,,,,7,n: 7,3,O(m+n),,"n: number of variables
m: number of clauses
k: minimum number of distinct literals per clause",n,,1,Word RAM,words,,n: 1,O(1),"no auxiliary space needed, just output random assignment",1,0,,1,Monte Carlo,1,1 - 1/2^k,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Ek SAT,,,,1,0,m*n^(O(k))?,,,[https://en.wikipedia.org/wiki/MAXEkSAT#Derandomization Derandomization of Simple Random Assignment Algorithm (?)],Derandomization of Simple Random Assignment Algorithm,,,?,https://en.wikipedia.org/wiki/MAXEkSAT#Derandomization,,,,,,7,n: 7,2,m*n^(O(k))?,,"n: number of variables
m: number of clauses
k: minimum number of distinct literals per clause",n,,,Word RAM,words,,,,,,,,0,,1,1 - 1/2^k,2,3,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,1,Max-SAT,,,,1,0,O((nm)^2)?,,,[https://dl.acm.org/doi/pdf/10.1145/800125.804034 Johnson (1974)],Johnson,Johnson,Approximation Algorithms for Combinatorial Problems,1974,https://dl.acm.org/doi/pdf/10.1145/800125.804034,,,,,,7,n: 7,3,O((nm)^2)?,,"n: number of variables
m: number of clauses
k: minimum number of distinct literals per clause",n,,1,Word RAM,words,,,O(nm)?,Manipulate and scan through O(1) subsets of clauses,1,0,,0,,1,"1 - 1/2^k (lowest 2/3, originally claimed 0.5)",2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,https://ieeexplore.ieee.org/document/612322,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,1,Max-SAT,,,,1,0,O(poly(n))?,,,"[https://epubs.siam.org/doi/10.1137/0402046 Kohli, Krishnamurti (1989)]","Kohli, Krishnamurti","Kohli, Krishnamurti",Average Performance of Heuristics for Satisfiability,1989,https://epubs.siam.org/doi/10.1137/0402046,,,,,,7,n: 7,1,O(poly(n))?,400,n: number of variables,n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,"2/3, expected",2,2.5,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(poly(n))?,,,[https://www.sciencedirect.com/science/article/pii/S0196677484710455 Yannakakis (1994)],Yannakakis,Yannakakis,On the Approximation of Maximum Satisfiability,1994,https://www.sciencedirect.com/science/article/pii/S0196677484710455,,,,,,7,n: 7,1,O(poly(n))?,400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,0.75,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(poly(n))?,,,"[https://math.mit.edu/~goemans/PAPERS/GoemansWilliamson-1994-NewApproximationAlgorithmsForTheMaximumSatisfiabilityProblem.pdf Goemans, Williamson [Section 3] (1994)]","Goemans, Williamson [Section 3]","Goemans, Williamson",New 3/4-Approximation Algorithms for the Maximum Satisfiability Problem,1994,https://math.mit.edu/~goemans/PAPERS/GoemansWilliamson-1994-NewApproximationAlgorithmsForTheMaximumSatisfiabilityProblem.pdf,,,,,,7,n: 7,1,O(poly(n))?,400,"n: number of variables
m: number of clauses
k: minimum number of distinct literals per clause",n,,1,Word RAM,words,,,O(nm)?,Size of associated LP,1,0,,0,,1,1 - (1-1/k)^k (lowest 1-1/e),2,2.582,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(poly(n))?,,,"[https://math.mit.edu/~goemans/PAPERS/GoemansWilliamson-1994-NewApproximationAlgorithmsForTheMaximumSatisfiabilityProblem.pdf Goemans, Williamson [Section 4] (1994)]","Goemans, Williamson [Section 4]","Goemans, Williamson",New 3/4-Approximation Algorithms for the Maximum Satisfiability Problem,1994,https://math.mit.edu/~goemans/PAPERS/GoemansWilliamson-1994-NewApproximationAlgorithmsForTheMaximumSatisfiabilityProblem.pdf,,,,,,7,n: 7,1,O(poly(n))?,400,n: number of variables,n,,1,Word RAM,words,,,,,,,,0,,1,0.75,2,2.333,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(n^3 \log n)?,,,"[https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf Goemans, Williamson (1995)]","Goemans, Williamson","Goemans, Williamson",Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming,1995,https://math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf,,,,,,6.01,n: 6.01,3,O(n^3 \log n)?,31,n: number of variables,n,,1,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.7584,2,2.319,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(poly(n)),,,"[https://link.springer.com/chapter/10.1007/3-540-61422-2_124 Asano, Ono, Hirata (1996)]","Asano, Ono, Hirata","Asano, Ono, Hirata",Approximation algorithms for the maximum satisfiability problem,1996,https://link.springer.com/chapter/10.1007/3-540-61422-2_124,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,1,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.76544,2,2.307,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(poly(n)),,,[https://ieeexplore.ieee.org/document/595154 Asano (1997)],Asano,Asano,Approximation algorithms for MAX SAT: Yannakakis vs. Goemans-Williamson,1997,https://ieeexplore.ieee.org/document/595154,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,1,Word RAM,words,,,,,,,,1,Monte Carlo?,1,~0.770,2,2.299,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,Max Weighted SAT,,,,1,0,O(poly(n)),,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,~0.7584,2,2.319,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,"Max-SAT, 2-satisfiable",,,,1,0,O(poly(n)),,,"[https://ieeexplore.ieee.org/document/4568009 Lieberherr, Specker (1981)]","Lieberherr, Specker","Lieberherr, Specker",Complexity of partial satisfaction,1981,https://ieeexplore.ieee.org/document/4568009,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,0,,1,(sqrt(5)-1)/2,2,2.619,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.13,Boolean CNF-Satisfiability,1,0,0,"Max-SAT, Satisfiable",,,,1,0,"O(poly(n, m))",,,[https://lucatrevisan.github.io/pubs/satsatfull.pdf Trevisan (1997)],Trevisan,Trevisan,Approximating Satisfiable Satisfiability Problems,1997,https://lucatrevisan.github.io/pubs/satsatfull.pdf,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of variables
m: number of clauses",n,,,Word RAM,words,,,,,,,,0,,1,~0.8,2,2.25,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
162.1,Boolean Satisfiability,1,0,0,Betweenness,,,,1,0,O(poly(n)),,,"[http://people.csail.mit.edu/madhu/papers/1995/chor-conf.pdf Chor, Sudan (1995)]","Chor, Sudan","Chor, Sudan",A Geometric Approach to Betweenness,1995,http://people.csail.mit.edu/madhu/papers/1995/chor-conf.pdf,,,,,,7,n: 7,1,O(poly(n)),400,n: number of variables,n,,,Word RAM,words,,,,,,,,1,Monte Carlo,1,1/2 + o(1),2,2.99,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
4,Longest Common Subsequence,0.001,1,0,Multiple Longest Common Subsequence (Approximate),,Greedy,,1,0,O(poly(n)),Uniform random sequences,,,"Jiang, Li","Jiang, Li",On the Approximation of Shortest Common Supersequences and Longest Common Subsequences,1995,https://epubs.siam.org/doi/epdf/10.1137/S009753979223842X,,,,,,7,n: 7,1,O(poly(n)),400,"n: length of sequences
eps: error parameter",n,,,Word RAM,words,,,,,,,,0,,1,O(n^(1/2 + eps)),4,0,5.01,additive,yes,n/a,additive error off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0,1,0,,,,,1,0,O(n^2),,,,"Hajiaghayi, Seddighin, Sun","Hajiaghayi, Seddighin, Sun",Massively Parallel Approximation Algorithms for Edit Distance and Longest Common Subsequence,2019,https://epubs.siam.org/doi/epdf/10.1137/1.9781611975482.100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0,1,0,Multiple Longest Common Subsequence (Approximate),,,,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0,0,0,"Enumerating 
Maximal Cliques, 
arbitrary graph",,,,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,0.001,0,0,Max-Weight Clique (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://ieeexplore.ieee.org/abstract/document/883403, I. R. Bomze, M. Pelillo, 
V. Stix (2005)]","I. R. Bomze, M. Pelillo and
 V. Stix","I. R. Bomze, M. Pelillo and 
V. Stix","Approximating the 
maximum weight 
clique using replicator 
dynamics",2005,https://ieeexplore.ieee.org/abstract/document/883403,,,,,,7,n: 7,1,"O(poly(n,m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,O(2^(O(1)*n),4,10,0,multiplicative,,n/a,factor off from optimal,1,1,,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,0.001,0,0,Max-Weight Clique (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/article/10.1007/s10732-007-9026-2, Pullan, Wayne, (2007)]",Wayne Pullan,Wayne Pullan,"Approximating the maximum
vertex/edge weighted clique
 using local search",2007,https://link.springer.com/article/10.1007/s10732-007-9026-2,,,,,,7,n: 7,1,"O(poly(n,m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,1,,1,O(n/(log n)^2),4,8.98,0,multiplicative,,n/a,factor off from optimal,1,1,,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,0,0,0,Max- Clique (Approximate),,,,,,,,,"[https://www.jair.org/index.php/jair/article/view/10441, Wayne Pullan, Holger Hoss (2006)]","Wayne Pullan, Holger H. Hoos","Wayne Pullan, Holger H. Hoss",Dynamic Local Search for the Maximum Clique Problem,2006,https://www.jair.org/index.php/jair/article/view/10441,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,0,0,k-cliques (Approximate),,,,1,0,,,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611975994.89, Talya Eden, Dana Ron, and C. Seshadhri, (2020)] ","Talya Eden, Dana Ron, and C. Seshadhri","Talya Eden, Dana Ron, and C. Seshadhri",Faster sublinear approximation of the number of k-cliques in low-arboricity graphs,2020,https://epubs.siam.org/doi/abs/10.1137/1.9781611975994.89,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,1,0,1,Max-Size Clique (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/article/10.1007/BF01994876 Boppana, Halldorsson (1992)]","Boppana, Halldorsson","Boppana, Halldorsson",Approximating maximum independent sets by excluding subgraphs,1992,https://link.springer.com/article/10.1007/BF01994876,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,O(n/(log n)^2),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"for small L and indep set of size n/L+m, size of independent set approximated by L*m^(1/(L-1))",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,0.001,0,0,Max-Size Clique (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://link.springer.com/article/10.1007/BF01581168 Alon, Kahale (1998)]","Alon, Kahale","Alon, Kahale",Approximating the independence number via the ϑ-function,1998,https://link.springer.com/article/10.1007/BF01581168,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,1,Monte Carlo?,1,O(n/(log n)^2)?,4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,"for small L and indep set of size n/L+m, size of independent set approximated by m^(3/(L+1)) log m",,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,0.001,0,0,Max-Size Clique (Approximate),,,,1,0,"O(poly(n, m))",,,"[https://epubs.siam.org/doi/10.1137/S0097539796309326 Mahajan, Ramesh (1999)]","Mahajan, Ramesh","Mahajan, Ramesh",Derandomizing Approximation Algorithms Based on Semidefinite Programming,1999,https://epubs.siam.org/doi/10.1137/S0097539796309326,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,O(n/(log n)^2)?,4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
60,Clique Problems,1,0,1,Max-Size Clique (Approximate),,,,1,0,"O(poly(n, m))",,,[https://epubs.siam.org/doi/pdf/10.1137/S089548010240415X Feige (2004)],Feige,Feige,Approximating Maximum Clique by Removing Subgraphs,2004,https://epubs.siam.org/doi/pdf/10.1137/S089548010240415X,,,,,,7,n: 7,1,"O(poly(n, m))",400,"n: number of vertices
m: number of edges",n,,,Word RAM,words,,,,,,,,0,,1,O(n(log log n)^2/(log n)^3),4,8.98,0,multiplicative,no,n/a,factor off from optimal,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
47,Eigenvalues (Iterative Methods),0.001,1,0,,,,,,,,,,"[https://epubs.siam.org/doi/pdf/10.1137/19M128452X Xu, Xie, Zhang (2020)]","Xu, Xie, Zhang","Xu, Xie, Zhang",,2020,https://epubs.siam.org/doi/pdf/10.1137/19M128452X,,,,,,,,,,,,,,,,,,,,,,,,0,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"The paper uses multigrid approximation and is designed for finding the first few eigenvalues efficiently. The parallel running time for finding all n eigenvalues is, T_p( n ) = O( ( n / p ) N ) under reasonable assumptions, where N is the size of the finest grid. Errors drops linearly with N.",,
40,Maximum-Weight Matching,0.001,1,0,General Maximum-Weight Matching,,,,1,1,,,,"[https://dspace.jaist.ac.jp/dspace/bitstream/10119/4915/1/C3966.pdf Uehara, Chen (2000)]","Uehara, Chen","Uehara, Chen",,2000,https://dspace.jaist.ac.jp/dspace/bitstream/10119/4915/1/C3966.pdf,,,,,,#VALUE!,,,,,"n: number of vertices
m: number of edges",n,,,,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,1,,,,,,,,,,,,,,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,63,,,,,,,,1,,,Combinatorics
97,Optimal Policies for MDPs,0.001,1,0,Optimal strategies for Markov decision processes and Markov games,,,,1,1,,,,[https://pure.tue.nl/ws/portalfiles/portal/3693462/144733.pdf J. Van Der Waal (1980)],J. Van Der Waal,J. Van Der Waal,,1980,https://pure.tue.nl/ws/portalfiles/portal/3693462/144733.pdf,,,,,,,,,,,,,,,,,,,,,,,,0,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,1,0,Learning Adversarial Linear Mixture MDPs,,,,1,1,,,,"[https://proceedings.mlr.press/v151/he22a.html Jiafan He, Dongruo Zhou, Quanquan Gu (2022)]","Jiafan He, Dongruo Zhou, Quanquan Gu","Jiafan He, Dongruo Zhou, Quanquan Gu",,2022,https://proceedings.mlr.press/v151/he22a.html,,,,,,7,n:7,,"O(poly(n,m))",,"n: number of states
m: number of actions",,,,Word RAM,words,,,,,,,,0,,1,"O(d*n*sqrt(m))      d: dimension of the feature mapping, n: length of epsiode, m: total number of interaction rounds with the MDP",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,1,0,Learning Control in MDPs,,,,1,1,,,,"[https://www.sciencedirect.com/science/article/abs/pii/S0020025513005975 Xin Xu, Lei Zuo, Zhenhua Huang (2014)]","Xin Xu, Lei Zuo, Zhenhua Huang","Xin Xu, Lei Zuo, Zhenhua Huang",RL algorithms with function approximation for learning control in MDPs,2014,https://www.sciencedirect.com/science/article/abs/pii/S0020025513005975,,,,,,7,n:7,,"O(poly(n,m))",,"n: number of states
m: number of actions",,,,Word RAM,words,,,,,,,,0,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,1,0,Factored MDPs,,,,1,1,,,,[https://www.jair.org/index.php/jair/article/view/10341  (2003)],,"Carlos Guestrin, Daphne Koller, Ronald Parr, Shobha Venkataraman",,2003,https://www.jair.org/index.php/jair/article/view/10341,,,,,,7,n:7,,"O(poly(n,m))",,"n: number of states
m: number of actions",,,,Word RAM,words,"O(poly(n,m))",,,,,,,0,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
34,Convex Optimization (Non-linear),0.001,1,0,Convex Optimization (Non-linear),,,,,,,,,,"Carmon, Jambulapati, Jin, Lee, Liu, Sidford, Tian",2023,https://arxiv.org/pdf/2301.00457.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Collaborative Filtering (aka Matrix Factorization),0.001,1,0,Matrix Factorization,,,,1,1,,,,,,,,2012,https://ieeexplore.ieee.org/abstract/document/6166354?casa_token=wr7RjGCF8-0AAAAA:04ivO3RJp3Ks0Vxs8nNneSdja3k1QTfNNZDXMjFUVSXwtgXK6-2Dh-65qqk0T5TmipME9L-Npw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Collaborative Filtering (aka Matrix Factorization),0.001,1,0,Binary Matrix Factorization,,,,1,1,,,,,,,,,https://proceedings.mlr.press/v97/kumar19a.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Collaborative Filtering (aka Matrix Factorization),0.001,1,0,,,,,,,,,,,,,,2014,https://ieeexplore.ieee.org/abstract/document/6899417?casa_token=TWZ5_2NtAkgAAAAA:b_78KXRWWEgBItvM9U8FTcsFa-g-pXP8qLm6riUNFrfx2wIAI5r1l5B4mlBu89wxzdbV2O_83g,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Collaborative Filtering (aka Matrix Factorization),0.001,1,0,,,,,,,,,,,,,,2014,https://ieeexplore.ieee.org/abstract/document/6709669?casa_token=OohT1_Uu9esAAAAA:1qXwyhWbTDJI_4ANuDJMSxFwf05nyqJuLy8ZtVqaFOLDGoLx8xphn5DLz_xFqsElY0dKEMbK_Q,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Semidefinite Programming,0.001,0,0,interior point method,,,,,,,,,,,Michael Goemans,https://math.mit.edu/~goemans/PAPERS/icm98.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,